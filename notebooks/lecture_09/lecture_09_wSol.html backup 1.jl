<!DOCTYPE html>
<html lang="en">
<head>
    <meta name="viewport" content="width=device-width" />
    <title>âš¡ Pluto.jl âš¡</title>
    <meta charset="utf-8" />
    <script>
        console.log(
            "Pluto.jl, by Fons van der Plas (https://github.com/fonsp), MikoÅ‚aj Bochenski (https://github.com/malyvsen), Michiel Dral (https://github.com/dralletje) and friends ðŸŒˆ"
        )
    </script>
    <meta name="theme-color" media="(prefers-color-scheme: light)" content="white">
    <meta name="theme-color" media="(prefers-color-scheme: dark)" content="#2a2928">
    <meta name="color-scheme" content="light dark">

    <link rel="icon" type="image/png" sizes="16x16" href="https://cdn.jsdelivr.net/gh/fonsp/Pluto.jl@0.18.1/frontend/img/favicon-16x16.png" />
    <link rel="icon" type="image/png" sizes="32x32" href="https://cdn.jsdelivr.net/gh/fonsp/Pluto.jl@0.18.1/frontend/img/favicon-32x32.png" />
    <link rel="icon" type="image/png" sizes="96x96" href="https://cdn.jsdelivr.net/gh/fonsp/Pluto.jl@0.18.1/frontend/img/favicon-96x96.png" />
    <meta name="description" content="Pluto.jl notebooks" />
    <link rel="pluto-logo-big" href="https://cdn.jsdelivr.net/gh/fonsp/Pluto.jl@0.18.1/frontend/img/logo.svg" />
    <link rel="pluto-logo-small" href="https://cdn.jsdelivr.net/gh/fonsp/Pluto.jl@0.18.1/frontend/img/favicon_unsaturated.svg" />

    <link rel="pluto-sw" href="https://cdn.jsdelivr.net/gh/fonsp/Pluto.jl@0.18.1/frontend/sw.js" />
    <script>
        navigator.serviceWorker?.register(document.head.querySelector("link[rel='pluto-sw']").getAttribute("href"), { scope: "./" }).catch(console.warn)
    </script>

    <script src="https://cdn.jsdelivr.net/npm/lodash@4.17.20/lodash.min.js" defer></script>
    <script src="https://cdn.jsdelivr.net/npm/@observablehq/stdlib@3.3.1/dist/stdlib.js" defer></script>
    <script src="https://cdn.jsdelivr.net/npm/iframe-resizer@4.2.11/js/iframeResizer.min.js" defer></script>
    <script src="https://cdn.jsdelivr.net/npm/ansi_up@5.0.1/ansi_up.min.js" defer></script>

    <!-- This doesn't do anything unless activated, and it makes sure parcel bundles this -->
    <script id="iframe-resizer-content-window-script" src="https://cdn.jsdelivr.net/npm/iframe-resizer@4.2.11/js/iframeResizer.contentWindow.min.js" crossorigin="anonymous" defer></script>

    <link rel="stylesheet" href="https://cdn.jsdelivr.net/gh/fonsp/Pluto.jl@0.18.1/frontend/editor.css" type="text/css" />
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/gh/fonsp/Pluto.jl@0.18.1/frontend/hide-ui.css" type="text/css" media="all" data-pluto-file="hide-ui" />
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/gh/fonsp/Pluto.jl@0.18.1/frontend/binder.css" type="text/css" />
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/gh/fonsp/Pluto.jl@0.18.1/frontend/treeview.css" type="text/css" />
    <link rel="preload" href="https://cdn.jsdelivr.net/gh/fonsp/Pluto.jl@0.18.1/frontend/juliamono.css" as="style" />
    <link rel="preload" href="https://cdn.jsdelivr.net/gh/fonsp/Pluto.jl@0.18.1/frontend/vollkorn.css" as="style" />
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/gh/fonsp/Pluto.jl@0.18.1/frontend/highlightjs.css" type="text/css">

    <script data-pluto-file="launch-parameters">
window.pluto_notebook_id = undefined;
window.pluto_isolated_cell_ids = undefined;
window.pluto_notebookfile = "data:text/julia;charset=utf-8;base64,";
window.pluto_disable_ui = true;
window.pluto_slider_server_url = undefined;
window.pluto_binder_url = "https://mybinder.org/v2/gh/fonsp/pluto-on-binder/v0.18.1";
window.pluto_statefile = "data:;base64,j6Vib25kc4CsY2VsbF9yZXN1bHRz3gBC2SRkOTkxNjBiNy05NDIxLTQwNGQtYmVmNC01NWY2MzRkNmU1ODaJpnF1ZXVlZMKkbG9nc5CncnVubmluZ8Kmb3V0cHV0hqRib2R52W48ZGl2IGNsYXNzPSJtYXJrZG93biI+PHA+PHN0cm9uZz5MZXQmIzM5O3MgY29uc2lkZXIgYSBzZXQgb2Ygc3RvY2tzIGluIHRoZSBEb3cgSm9uZXMgSW5kZXg8L3N0cm9uZz48L3A+CjwvZGl2PrBwZXJzaXN0X2pzX3N0YXRlwqRtaW1lqXRleHQvaHRtbLJsYXN0X3J1bl90aW1lc3RhbXDLQdiHB2Q3S8e3aGFzX3BsdXRvX2hvb2tfZmVhdHVyZXPCrHJvb3Rhc3NpZ25lZcCnY2VsbF9pZNkkZDk5MTYwYjctOTQyMS00MDRkLWJlZjQtNTVmNjM0ZDZlNTg2uWRlcGVuZHNfb25fZGlzYWJsZWRfY2VsbHPCp3J1bnRpbWXOAALlzLVwdWJsaXNoZWRfb2JqZWN0X2tleXOQp2Vycm9yZWTC2SQ5ODA4Mzk4OS1hMDA2LTRjZjMtYWZkMS0wYjM0OTVlMWQ1YjaJpnF1ZXVlZMKkbG9nc5CncnVubmluZ8Kmb3V0cHV0hqRib2R52fQ8ZGl2IGNsYXNzPSJtYXJrZG93biI+PHA+VG8gaWxsdXN0cmF0ZSB0aGUgY29uY2VwdHMsIHdlIHdpbGwgYmUgd29ya2luZyB3aXRoIHRoZSBDUlNQIGRhdGFzZXQgZnJvbSBXUkRTLjwvcD4KPGJsb2NrcXVvdGU+CjxwPkZyb20gQ0FOVkFTLCBkb3dubG9hZCB0aGUgY3N2IGZpbGUgPHN0cm9uZz5DUlNQX21vbnRobHkuY3N2PC9zdHJvbmc+IGZyb20gdGhlIGRhdGFzZXQgc2VjdGlvbi48L3A+CjwvYmxvY2txdW90ZT4KPC9kaXY+sHBlcnNpc3RfanNfc3RhdGXCpG1pbWWpdGV4dC9odG1ssmxhc3RfcnVuX3RpbWVzdGFtcMtB2IcHZDcKPbdoYXNfcGx1dG9faG9va19mZWF0dXJlc8Kscm9vdGFzc2lnbmVlwKdjZWxsX2lk2SQ5ODA4Mzk4OS1hMDA2LTRjZjMtYWZkMS0wYjM0OTVlMWQ1Yja5ZGVwZW5kc19vbl9kaXNhYmxlZF9jZWxsc8KncnVudGltZc4AB988tXB1Ymxpc2hlZF9vYmplY3Rfa2V5c5CnZXJyb3JlZMLZJDIyMDczOTEwLWY2NzYtNGU4Yi04YjgwLTM4ZmVkNTdiZjM5OYmmcXVldWVkwqRsb2dzkKdydW5uaW5nwqZvdXRwdXSGpGJvZHnaCRM8ZGl2IGNsYXNzPSJtYXJrZG93biI+PHRhYmxlPjx0cj48dGggYWxpZ249ImxlZnQiPlRpY2tlcjwvdGg+PHRoIGFsaWduPSJsZWZ0Ij5Db21wYW55IE5hbWU8L3RoPjwvdHI+PHRyPjx0ZCBhbGlnbj0ibGVmdCI+QUFQTDwvdGQ+PHRkIGFsaWduPSJsZWZ0Ij5BcHBsZSBJbmM8L3RkPjwvdHI+PHRyPjx0ZCBhbGlnbj0ibGVmdCI+QU1HTjwvdGQ+PHRkIGFsaWduPSJsZWZ0Ij5BbWdlbiBJbmM8L3RkPjwvdHI+PHRyPjx0ZCBhbGlnbj0ibGVmdCI+QVhQPC90ZD48dGQgYWxpZ249ImxlZnQiPkFtZXJpY2FuIEV4cHJlc3MgQ288L3RkPjwvdHI+PHRyPjx0ZCBhbGlnbj0ibGVmdCI+QkE8L3RkPjx0ZCBhbGlnbj0ibGVmdCI+Qm9laW5nIENvL1RoZTwvdGQ+PC90cj48dHI+PHRkIGFsaWduPSJsZWZ0Ij5DQVQ8L3RkPjx0ZCBhbGlnbj0ibGVmdCI+Q2F0ZXJwaWxsYXIgSW5jPC90ZD48L3RyPjx0cj48dGQgYWxpZ249ImxlZnQiPkNSTTwvdGQ+PHRkIGFsaWduPSJsZWZ0Ij5zYWxlc2ZvcmNlLmNvbSBJbmM8L3RkPjwvdHI+PHRyPjx0ZCBhbGlnbj0ibGVmdCI+Q1NDTzwvdGQ+PHRkIGFsaWduPSJsZWZ0Ij5DaXNjbyBTeXN0ZW1zIEluYy9EZWxhd2FyZTwvdGQ+PC90cj48dHI+PHRkIGFsaWduPSJsZWZ0Ij5DVlg8L3RkPjx0ZCBhbGlnbj0ibGVmdCI+Q2hldnJvbiBDb3JwPC90ZD48L3RyPjx0cj48dGQgYWxpZ249ImxlZnQiPkRJUzwvdGQ+PHRkIGFsaWduPSJsZWZ0Ij5XYWx0IERpc25leSBDby9UaGU8L3RkPjwvdHI+PHRyPjx0ZCBhbGlnbj0ibGVmdCI+RE9XPC90ZD48dGQgYWxpZ249ImxlZnQiPkRvdyBJbmM8L3RkPjwvdHI+PHRyPjx0ZCBhbGlnbj0ibGVmdCI+R1M8L3RkPjx0ZCBhbGlnbj0ibGVmdCI+R29sZG1hbiBTYWNocyBHcm91cCBJbmMvVGhlPC90ZD48L3RyPjx0cj48dGQgYWxpZ249ImxlZnQiPkhEPC90ZD48dGQgYWxpZ249ImxlZnQiPkhvbWUgRGVwb3QgSW5jL1RoZTwvdGQ+PC90cj48dHI+PHRkIGFsaWduPSJsZWZ0Ij5IT048L3RkPjx0ZCBhbGlnbj0ibGVmdCI+SG9uZXl3ZWxsIEludGVybmF0aW9uYWwgSW5jPC90ZD48L3RyPjx0cj48dGQgYWxpZ249ImxlZnQiPklCTTwvdGQ+PHRkIGFsaWduPSJsZWZ0Ij5JbnRlcm5hdGlvbmFsIEJ1c2luZXNzIE1hY2hpbmVzIENvcnA8L3RkPjwvdHI+PHRyPjx0ZCBhbGlnbj0ibGVmdCI+SU5UQzwvdGQ+PHRkIGFsaWduPSJsZWZ0Ij5JbnRlbCBDb3JwPC90ZD48L3RyPjx0cj48dGQgYWxpZ249ImxlZnQiPkpOSjwvdGQ+PHRkIGFsaWduPSJsZWZ0Ij5Kb2huc29uICZhbXA7IEpvaG5zb248L3RkPjwvdHI+PHRyPjx0ZCBhbGlnbj0ibGVmdCI+SlBNPC90ZD48dGQgYWxpZ249ImxlZnQiPkpQTW9yZ2FuIENoYXNlICZhbXA7IENvPC90ZD48L3RyPjx0cj48dGQgYWxpZ249ImxlZnQiPktPPC90ZD48dGQgYWxpZ249ImxlZnQiPkNvY2EtQ29sYSBDby9UaGU8L3RkPjwvdHI+PHRyPjx0ZCBhbGlnbj0ibGVmdCI+TUNEPC90ZD48dGQgYWxpZ249ImxlZnQiPk1jRG9uYWxkJiMzOTtzIENvcnA8L3RkPjwvdHI+PHRyPjx0ZCBhbGlnbj0ibGVmdCI+TU1NPC90ZD48dGQgYWxpZ249ImxlZnQiPjNNIENvPC90ZD48L3RyPjx0cj48dGQgYWxpZ249ImxlZnQiPk1SSzwvdGQ+PHRkIGFsaWduPSJsZWZ0Ij5NZXJjayAmYW1wOyBDbyBJbmM8L3RkPjwvdHI+PHRyPjx0ZCBhbGlnbj0ibGVmdCI+TVNGVDwvdGQ+PHRkIGFsaWduPSJsZWZ0Ij5NaWNyb3NvZnQgQ29ycDwvdGQ+PC90cj48dHI+PHRkIGFsaWduPSJsZWZ0Ij5OS0U8L3RkPjx0ZCBhbGlnbj0ibGVmdCI+TklLRSBJbmM8L3RkPjwvdHI+PHRyPjx0ZCBhbGlnbj0ibGVmdCI+UEc8L3RkPjx0ZCBhbGlnbj0ibGVmdCI+UHJvY3RlciAmYW1wOyBHYW1ibGUgQ28vVGhlPC90ZD48L3RyPjx0cj48dGQgYWxpZ249ImxlZnQiPlRSVjwvdGQ+PHRkIGFsaWduPSJsZWZ0Ij5UcmF2ZWxlcnMgQ29zIEluYy9UaGU8L3RkPjwvdHI+PHRyPjx0ZCBhbGlnbj0ibGVmdCI+VU5IPC90ZD48dGQgYWxpZ249ImxlZnQiPlVuaXRlZEhlYWx0aCBHcm91cCBJbmM8L3RkPjwvdHI+PHRyPjx0ZCBhbGlnbj0ibGVmdCI+VjwvdGQ+PHRkIGFsaWduPSJsZWZ0Ij5WaXNhIEluYzwvdGQ+PC90cj48dHI+PHRkIGFsaWduPSJsZWZ0Ij5WWjwvdGQ+PHRkIGFsaWduPSJsZWZ0Ij5WZXJpem9uIENvbW11bmljYXRpb25zIEluYzwvdGQ+PC90cj48dHI+PHRkIGFsaWduPSJsZWZ0Ij5XQkE8L3RkPjx0ZCBhbGlnbj0ibGVmdCI+V2FsZ3JlZW5zIEJvb3RzIEFsbGlhbmNlIEluYzwvdGQ+PC90cj48dHI+PHRkIGFsaWduPSJsZWZ0Ij5XTVQ8L3RkPjx0ZCBhbGlnbj0ibGVmdCI+V2FsbWFydCBJbmM8L3RkPjwvdHI+PC90YWJsZT4KPC9kaXY+sHBlcnNpc3RfanNfc3RhdGXCpG1pbWWpdGV4dC9odG1ssmxhc3RfcnVuX3RpbWVzdGFtcMtB2IcHZDxaHbdoYXNfcGx1dG9faG9va19mZWF0dXJlc8Kscm9vdGFzc2lnbmVlwKdjZWxsX2lk2SQyMjA3MzkxMC1mNjc2LTRlOGItOGI4MC0zOGZlZDU3YmYzOTm5ZGVwZW5kc19vbl9kaXNhYmxlZF9jZWxsc8KncnVudGltZc4AG0hgtXB1Ymxpc2hlZF9vYmplY3Rfa2V5c5CnZXJyb3JlZMLZJGM1MzdhMmU2LTExNGYtNGE4Ni05MzIzLWNjN2U3Yjk0Y2ViM4mmcXVldWVkwqRsb2dzkKdydW5uaW5nwqZvdXRwdXSGpGJvZHnZMjxkaXYgY2xhc3M9Im1hcmtkb3duIj48aDE+Q1JTUCBkYXRhc2V0PC9oMT4KPC9kaXY+sHBlcnNpc3RfanNfc3RhdGXCpG1pbWWpdGV4dC9odG1ssmxhc3RfcnVuX3RpbWVzdGFtcMtB2IcHZDN0vLdoYXNfcGx1dG9faG9va19mZWF0dXJlc8Kscm9vdGFzc2lnbmVlwKdjZWxsX2lk2SRjNTM3YTJlNi0xMTRmLTRhODYtOTMyMy1jYzdlN2I5NGNlYjO5ZGVwZW5kc19vbl9kaXNhYmxlZF9jZWxsc8KncnVudGltZc4AAkIgtXB1Ymxpc2hlZF9vYmplY3Rfa2V5c5CnZXJyb3JlZMLZJDYzMzRkNDk1LWZhOTEtNDQyOC1hMjAzLTRkODIzNDMyNGVjZYmmcXVldWVkwqRsb2dzkKdydW5uaW5nwqZvdXRwdXSGpGJvZHnZdTxkaXYgY2xhc3M9Im1hcmtkb3duIj48cD5MZXQmIzM5O3MgbG9vayBhdCBhbiBleGFtcGxlIHdoZXJlIHdlIGhhdmUgYSBzdG9jayB3aXRoIHRocmVlIHByaWNlIG9ic2VydmF0aW9ucy48L3A+CjwvZGl2PrBwZXJzaXN0X2pzX3N0YXRlwqRtaW1lqXRleHQvaHRtbLJsYXN0X3J1bl90aW1lc3RhbXDLQdiHB2QzMzO3aGFzX3BsdXRvX2hvb2tfZmVhdHVyZXPCrHJvb3Rhc3NpZ25lZcCnY2VsbF9pZNkkNjMzNGQ0OTUtZmE5MS00NDI4LWEyMDMtNGQ4MjM0MzI0ZWNluWRlcGVuZHNfb25fZGlzYWJsZWRfY2VsbHPCp3J1bnRpbWXOAAPyjLVwdWJsaXNoZWRfb2JqZWN0X2tleXOQp2Vycm9yZWTC2SQ4YTg2OWVjYi1hNmVkLTQ5OWQtODczYi0xMzFjOWJjMmUwYjGJpnF1ZXVlZMKkbG9nc5CncnVubmluZ8Kmb3V0cHV0hqRib2R52X88ZGl2IGNsYXNzPSJtYXJrZG93biI+PHA+PHN0cm9uZz5MZXQmIzM5O3Mgbm93IGNyZWF0ZSBhIG5ldyBkYXRhZnJhbWUgd2l0aCBhbGwgdGhlIGNoYW5nZXMgd2Ugd2FudCB0byBtYWtlLjwvc3Ryb25nPjwvcD4KPC9kaXY+sHBlcnNpc3RfanNfc3RhdGXCpG1pbWWpdGV4dC9odG1ssmxhc3RfcnVuX3RpbWVzdGFtcMtB2IcHZEAxJ7doYXNfcGx1dG9faG9va19mZWF0dXJlc8Kscm9vdGFzc2lnbmVlwKdjZWxsX2lk2SQ4YTg2OWVjYi1hNmVkLTQ5OWQtODczYi0xMzFjOWJjMmUwYjG5ZGVwZW5kc19vbl9kaXNhYmxlZF9jZWxsc8KncnVudGltZc4AAwzctXB1Ymxpc2hlZF9vYmplY3Rfa2V5c5CnZXJyb3JlZMLZJDZjYjYzOTQ3LTY0OTAtNGEwMi04Yjc0LTU1ZWI1ZTJlZmE5NommcXVldWVkwqRsb2dzkKdydW5uaW5nwqZvdXRwdXSGpGJvZHmDpHJvd3OckgGXkqc6UEVSTU5PqnRleHQvcGxhaW6SpzE0NTkzLjCqdGV4dC9wbGFpbpKlMTQ1OTOqdGV4dC9wbGFpbpKnMTQ1OTMuMKp0ZXh0L3BsYWlukqUxNDU5M6p0ZXh0L3BsYWlukqEwqnRleHQvcGxhaW6SpUludDY0qnRleHQvcGxhaW6SApeSpTpkYXRlqnRleHQvcGxhaW6SqTIuMDEwMTFlN6p0ZXh0L3BsYWlukqgyMDAwMDEzMap0ZXh0L3BsYWlukqkyLjAxMDA3ZTeqdGV4dC9wbGFpbpKoMjAyMDEyMzGqdGV4dC9wbGFpbpKhMKp0ZXh0L3BsYWlukqVJbnQ2NKp0ZXh0L3BsYWlukgOXkqk6TkFNRUVORFSqdGV4dC9wbGFpbpKpMi4wMTQ3NWU3qnRleHQvcGxhaW6SqDIwMDcwMTEwqnRleHQvcGxhaW6SqTIuMDE3MTJlN6p0ZXh0L3BsYWlukqgyMDIwMTIzMap0ZXh0L3BsYWlukqMyNTCqdGV4dC9wbGFpbpK1VW5pb257TWlzc2luZywgSW50NjR9qnRleHQvcGxhaW6SBJeSpjpTSFJDRKp0ZXh0L3BsYWlukqQxMS4wqnRleHQvcGxhaW6SojExqnRleHQvcGxhaW6SpDExLjCqdGV4dC9wbGFpbpKiMTGqdGV4dC9wbGFpbpKhMKp0ZXh0L3BsYWlukrVVbmlvbntNaXNzaW5nLCBJbnQ2NH2qdGV4dC9wbGFpbpIFl5KnOkVYQ0hDRKp0ZXh0L3BsYWlukqMzLjCqdGV4dC9wbGFpbpKhM6p0ZXh0L3BsYWlukqMzLjCqdGV4dC9wbGFpbpKhM6p0ZXh0L3BsYWlukqEwqnRleHQvcGxhaW6StVVuaW9ue01pc3NpbmcsIEludDY0fap0ZXh0L3BsYWlukgaXkqY6U0lDQ0SqdGV4dC9wbGFpbpKnbm90aGluZ6p0ZXh0L3BsYWlukqYiMzU3MSKqdGV4dC9wbGFpbpKnbm90aGluZ6p0ZXh0L3BsYWlukqYiMzU3MyKqdGV4dC9wbGFpbpKhMKp0ZXh0L3BsYWlukrdVbmlvbntNaXNzaW5nLCBTdHJpbmc3fap0ZXh0L3BsYWlukgeXkqc6TkNVU0lQqnRleHQvcGxhaW6Sp25vdGhpbmeqdGV4dC9wbGFpbpKqIjAzNzgzMzEwIqp0ZXh0L3BsYWlukqdub3RoaW5nqnRleHQvcGxhaW6SqiIwMzc4MzMxMCKqdGV4dC9wbGFpbpKhMKp0ZXh0L3BsYWlukrhVbmlvbntNaXNzaW5nLCBTdHJpbmcxNX2qdGV4dC9wbGFpbpIIl5KnOlRJQ0tFUqp0ZXh0L3BsYWlukqdub3RoaW5nqnRleHQvcGxhaW6SpiJBQVBMIqp0ZXh0L3BsYWlukqdub3RoaW5nqnRleHQvcGxhaW6SpiJBQVBMIqp0ZXh0L3BsYWlukqEwqnRleHQvcGxhaW6St1VuaW9ue01pc3NpbmcsIFN0cmluZzd9qnRleHQvcGxhaW6SCZeSpzpDT01OQU2qdGV4dC9wbGFpbpKnbm90aGluZ6p0ZXh0L3BsYWlukrQiQVBQTEUgQ09NUFVURVIgSU5DIqp0ZXh0L3BsYWlukqdub3RoaW5nqnRleHQvcGxhaW6SqyJBUFBMRSBJTkMiqnRleHQvcGxhaW6SoTCqdGV4dC9wbGFpbpK2VW5pb257TWlzc2luZywgU3RyaW5nfap0ZXh0L3BsYWlukgqXkqc6U0hSQ0xTqnRleHQvcGxhaW6Sp25vdGhpbmeqdGV4dC9wbGFpbpKnbm90aGluZ6p0ZXh0L3BsYWlukqdub3RoaW5nqnRleHQvcGxhaW6Sp25vdGhpbmeqdGV4dC9wbGFpbpKjMjUzqnRleHQvcGxhaW6St1VuaW9ue01pc3NpbmcsIFN0cmluZzF9qnRleHQvcGxhaW6kbW9yZZJAl5KnOnNwcnRybqp0ZXh0L3BsYWlukqowLjAwNDk1ODE0qnRleHQvcGxhaW6SqS0wLjE2OTQyNap0ZXh0L3BsYWlukqcwLjAwOTk4qnRleHQvcGxhaW6SqDAuMTI2ODQ0qnRleHQvcGxhaW6SoTCqdGV4dC9wbGFpbpKnRmxvYXQ2NKp0ZXh0L3BsYWluqG9iamVjdGlksDU2Y2E4NTdhNTMwMGMyMGSmc2NoZW1hgqVuYW1lc5eodmFyaWFibGWkbWVhbqNtaW6mbWVkaWFuo21heKhubWlzc2luZ6ZlbHR5cGWldHlwZXOXplN5bWJvbKCjQW55oKNBbnmlSW50NjSgsHBlcnNpc3RfanNfc3RhdGXCpG1pbWXZImFwcGxpY2F0aW9uL3ZuZC5wbHV0by50YWJsZStvYmplY3SybGFzdF9ydW5fdGltZXN0YW1wy0HYhweBRtkXt2hhc19wbHV0b19ob29rX2ZlYXR1cmVzwqxyb290YXNzaWduZWXAp2NlbGxfaWTZJDZjYjYzOTQ3LTY0OTAtNGEwMi04Yjc0LTU1ZWI1ZTJlZmE5NrlkZXBlbmRzX29uX2Rpc2FibGVkX2NlbGxzwqdydW50aW1lziXiUrS1cHVibGlzaGVkX29iamVjdF9rZXlzkKdlcnJvcmVkwtkkODk4MGE5NjMtYjZjMC00OGNkLTkzMTYtYjk2ZGYyYWNmNGM2iaZxdWV1ZWTCpGxvZ3OQp3J1bm5pbmfCpm91dHB1dIakYm9kedlxPGRpdiBjbGFzcz0ibWFya2Rvd24iPjxwPjxzdHJvbmc+TGV0JiMzOTtzIHdvcmsgd2l0aCBhIHNpbmdsZSBzdG9jayBmaXJzdC4gV2Ugd2lsbCBwaWNrIEFBUEwuPC9zdHJvbmc+PC9wPgo8L2Rpdj6wcGVyc2lzdF9qc19zdGF0ZcKkbWltZal0ZXh0L2h0bWyybGFzdF9ydW5fdGltZXN0YW1wy0HYhwdkPGp/t2hhc19wbHV0b19ob29rX2ZlYXR1cmVzwqxyb290YXNzaWduZWXAp2NlbGxfaWTZJDg5ODBhOTYzLWI2YzAtNDhjZC05MzE2LWI5NmRmMmFjZjRjNrlkZXBlbmRzX29uX2Rpc2FibGVkX2NlbGxzwqdydW50aW1lzgADaKi1cHVibGlzaGVkX29iamVjdF9rZXlzkKdlcnJvcmVkwtkkYTIzYTM2NmQtZmE3My00NjcyLWI1OWMtZTE0YjJiODE3Y2U4iaZxdWV1ZWTCpGxvZ3OQp3J1bm5pbmfCpm91dHB1dIakYm9keYOkcm93c5ySAZmSqjIwMDAtMDItMjmqdGV4dC9wbGFpbpKmIkFBUEwiqnRleHQvcGxhaW6SoTeqdGV4dC9wbGFpbpKlMTQ1OTOqdGV4dC9wbGFpbpKnMTE0LjYyNap0ZXh0L3BsYWlukqYxMDMuNzWqdGV4dC9wbGFpbpKnbWlzc2luZ6p0ZXh0L3BsYWlukqgwLjEwNDgxOap0ZXh0L3BsYWlukqkwLjA5OTY4MTiqdGV4dC9wbGFpbpICmZKqMjAwMC0wMy0zMap0ZXh0L3BsYWlukqYiQUFQTCKqdGV4dC9wbGFpbpKhN6p0ZXh0L3BsYWlukqUxNDU5M6p0ZXh0L3BsYWlukqcxMzUuODEyqnRleHQvcGxhaW6SpzExNC42MjWqdGV4dC9wbGFpbpKnbWlzc2luZ6p0ZXh0L3BsYWlukqgwLjE4NDg0Mqp0ZXh0L3BsYWlukqgwLjE2OTYwOap0ZXh0L3BsYWlukgOZkqoyMDAwLTA0LTI4qnRleHQvcGxhaW6SpiJBQVBMIqp0ZXh0L3BsYWlukqE3qnRleHQvcGxhaW6SpTE0NTkzqnRleHQvcGxhaW6SpzEyNC4wNjKqdGV4dC9wbGFpbpKnMTM1LjgxMqp0ZXh0L3BsYWlukqdtaXNzaW5nqnRleHQvcGxhaW6Sqi0wLjA4NjUxNjOqdGV4dC9wbGFpbpKqLTAuMDkwNDg5OKp0ZXh0L3BsYWlukgSZkqoyMDAwLTA1LTMxqnRleHQvcGxhaW6SpiJBQVBMIqp0ZXh0L3BsYWlukqE3qnRleHQvcGxhaW6SpTE0NTkzqnRleHQvcGxhaW6SpDg0LjCqdGV4dC9wbGFpbpKnMTI0LjA2Mqp0ZXh0L3BsYWlukqdtaXNzaW5nqnRleHQvcGxhaW6SqS0wLjMyMjkyMqp0ZXh0L3BsYWlukqktMC4zODk5NjmqdGV4dC9wbGFpbpIFmZKqMjAwMC0wNi0zMKp0ZXh0L3BsYWlukqYiQUFQTCKqdGV4dC9wbGFpbpKhN6p0ZXh0L3BsYWlukqUxNDU5M6p0ZXh0L3BsYWlukqY1Mi4zNzWqdGV4dC9wbGFpbpKkODQuMKp0ZXh0L3BsYWlukqMwLjCqdGV4dC9wbGFpbpKpLTAuMzc2NDg4qnRleHQvcGxhaW6SqS0wLjQ3MjM4N6p0ZXh0L3BsYWlukgaZkqoyMDAwLTA3LTMxqnRleHQvcGxhaW6SpiJBQVBMIqp0ZXh0L3BsYWlukqE3qnRleHQvcGxhaW6SpTE0NTkzqnRleHQvcGxhaW6SpzUwLjgxMjWqdGV4dC9wbGFpbpKmNTIuMzc1qnRleHQvcGxhaW6Sp21pc3NpbmeqdGV4dC9wbGFpbpKqLTAuMDI5ODMyOap0ZXh0L3BsYWlukqktMC4wMzAyODeqdGV4dC9wbGFpbpIHmZKqMjAwMC0wOC0zMap0ZXh0L3BsYWlukqYiQUFQTCKqdGV4dC9wbGFpbpKhN6p0ZXh0L3BsYWlukqUxNDU5M6p0ZXh0L3BsYWlukqc2MC45Mzc1qnRleHQvcGxhaW6SpzUwLjgxMjWqdGV4dC9wbGFpbpKnbWlzc2luZ6p0ZXh0L3BsYWlukqgwLjE5OTI2Mqp0ZXh0L3BsYWlukqgwLjE4MTcwNqp0ZXh0L3BsYWlukgiZkqoyMDAwLTA5LTI5qnRleHQvcGxhaW6SpiJBQVBMIqp0ZXh0L3BsYWlukqE3qnRleHQvcGxhaW6SpTE0NTkzqnRleHQvcGxhaW6SpTI1Ljc1qnRleHQvcGxhaW6SpzYwLjkzNzWqdGV4dC9wbGFpbpKnbWlzc2luZ6p0ZXh0L3BsYWlukqktMC41Nzc0MzaqdGV4dC9wbGFpbpKpLTAuODYxNDE0qnRleHQvcGxhaW6SCZmSqjIwMDAtMTAtMzGqdGV4dC9wbGFpbpKmIkFBUEwiqnRleHQvcGxhaW6SoTeqdGV4dC9wbGFpbpKlMTQ1OTOqdGV4dC9wbGFpbpKnMTkuNTYyNap0ZXh0L3BsYWlukqUyNS43Nap0ZXh0L3BsYWlukqdtaXNzaW5nqnRleHQvcGxhaW6SqS0wLjI0MDI5Map0ZXh0L3BsYWlukqgtMC4yNzQ4Mqp0ZXh0L3BsYWlukgqZkqoyMDAwLTExLTMwqnRleHQvcGxhaW6SpiJBQVBMIqp0ZXh0L3BsYWlukqE3qnRleHQvcGxhaW6SpTE0NTkzqnRleHQvcGxhaW6SpDE2LjWqdGV4dC9wbGFpbpKnMTkuNTYyNap0ZXh0L3BsYWlukqdtaXNzaW5nqnRleHQvcGxhaW6SqC0wLjE1NjU1qnRleHQvcGxhaW6SqS0wLjE3MDI1NKp0ZXh0L3BsYWlupG1vcmWSzPuZkqoyMDIwLTEyLTMxqnRleHQvcGxhaW6SpiJBQVBMIqp0ZXh0L3BsYWlukqE3qnRleHQvcGxhaW6SpTE0NTkzqnRleHQvcGxhaW6SpjEzMi42Oap0ZXh0L3BsYWlukqYxMTkuMDWqdGV4dC9wbGFpbpKnbWlzc2luZ6p0ZXh0L3BsYWlukqgwLjExNDU3NKp0ZXh0L3BsYWlukqgwLjEwODQ3Mqp0ZXh0L3BsYWluqG9iamVjdGlksGM2MDUxNzc1YmI5MzYyZjWmc2NoZW1hgqVuYW1lc5mkZGF0ZaZUSUNLRVKmUEVSTUNPplBFUk1OT6NQUkOlUFJDX0ymRElWQU1UolJ4pUxvZ1J4pXR5cGVzmaREYXRlqFN0cmluZzc/pUludDY0pUludDY0qEZsb2F0NjQ/qEZsb2F0NjQ/qEZsb2F0NjQ/p0Zsb2F0NjSoRmxvYXQ2ND+wcGVyc2lzdF9qc19zdGF0ZcKkbWltZdkiYXBwbGljYXRpb24vdm5kLnBsdXRvLnRhYmxlK29iamVjdLJsYXN0X3J1bl90aW1lc3RhbXDLQdiHB4Sk7ZG3aGFzX3BsdXRvX2hvb2tfZmVhdHVyZXPCrHJvb3Rhc3NpZ25lZadBQVBMX1J4p2NlbGxfaWTZJGEyM2EzNjZkLWZhNzMtNDY3Mi1iNTljLWUxNGIyYjgxN2NlOLlkZXBlbmRzX29uX2Rpc2FibGVkX2NlbGxzwqdydW50aW1lzm+kJAS1cHVibGlzaGVkX29iamVjdF9rZXlzkKdlcnJvcmVkwtkkYzYzZTk2ZTctMGVhMC00ZGFmLWEyMzAtMjZiMjU4ZjEyZTc5iaZxdWV1ZWTCpGxvZ3OQp3J1bm5pbmfCpm91dHB1dIakYm9kedl/PGRpdiBjbGFzcz0ibWFya2Rvd24iPjxwPjxzdHJvbmc+TGV0JiMzOTtzIGdldCBhIHNlbnNlIG9mIHRoZSBzdG9jayByZXR1cm5zIGJ5IHVzaW5nIDxjb2RlPmRlc2NyaWJlPC9jb2RlPi48L3N0cm9uZz48L3A+CjwvZGl2PrBwZXJzaXN0X2pzX3N0YXRlwqRtaW1lqXRleHQvaHRtbLJsYXN0X3J1bl90aW1lc3RhbXDLQdiHB2RKfvq3aGFzX3BsdXRvX2hvb2tfZmVhdHVyZXPCrHJvb3Rhc3NpZ25lZcCnY2VsbF9pZNkkYzYzZTk2ZTctMGVhMC00ZGFmLWEyMzAtMjZiMjU4ZjEyZTc5uWRlcGVuZHNfb25fZGlzYWJsZWRfY2VsbHPCp3J1bnRpbWXOAAO56LVwdWJsaXNoZWRfb2JqZWN0X2tleXOQp2Vycm9yZWTC2SRjNzk5ZjFhZC1iODJiLTQ0MjEtYmI3MS1kMDdjYjdiNmFmZDeJpnF1ZXVlZMKkbG9nc5CncnVubmluZ8Kmb3V0cHV0hqRib2R52YQ8ZGl2IGNsYXNzPSJtYXJrZG93biI+PHA+PHN0cm9uZz5MZXQmIzM5O3Mgbm93IG1ha2UgdGhlIGZpbmFsIHRhYmxlIHdpdGggdGhlIHN1bW1hcnkgc3RhdGlzdGljcyBmb3IgdGhlIHJldHVybnMuPC9zdHJvbmc+PC9wPgo8L2Rpdj6wcGVyc2lzdF9qc19zdGF0ZcKkbWltZal0ZXh0L2h0bWyybGFzdF9ydW5fdGltZXN0YW1wy0HYhwdkSsCDt2hhc19wbHV0b19ob29rX2ZlYXR1cmVzwqxyb290YXNzaWduZWXAp2NlbGxfaWTZJGM3OTlmMWFkLWI4MmItNDQyMS1iYjcxLWQwN2NiN2I2YWZkN7lkZXBlbmRzX29uX2Rpc2FibGVkX2NlbGxzwqdydW50aW1lzgAC1QC1cHVibGlzaGVkX29iamVjdF9rZXlzkKdlcnJvcmVkwtkkYTQ4OGE2NzktNmRjMC00YTMzLWIzMjctOWQwZjZlM2I5ZWIyiaZxdWV1ZWTCpGxvZ3OQp3J1bm5pbmfCpm91dHB1dIakYm9kedllPGRpdiBjbGFzcz0ibWFya2Rvd24iPjxwPjxzdHJvbmc+TmV4dCwgbGV0JiMzOTtzIHdvcmsgd2l0aCBhIHBvcnRmb2xpbyBvZiBzdG9ja3MuPC9zdHJvbmc+PC9wPgo8L2Rpdj6wcGVyc2lzdF9qc19zdGF0ZcKkbWltZal0ZXh0L2h0bWyybGFzdF9ydW5fdGltZXN0YW1wy0HYhwdkSMSct2hhc19wbHV0b19ob29rX2ZlYXR1cmVzwqxyb290YXNzaWduZWXAp2NlbGxfaWTZJGE0ODhhNjc5LTZkYzAtNGEzMy1iMzI3LTlkMGY2ZTNiOWViMrlkZXBlbmRzX29uX2Rpc2FibGVkX2NlbGxzwqdydW50aW1lzgADhAC1cHVibGlzaGVkX29iamVjdF9rZXlzkKdlcnJvcmVkwtkkMmE1MDU1YjQtMjEzNy00NDdkLWJmZDItYTI2Y2M0YjE0NzM1iaZxdWV1ZWTCpGxvZ3OQp3J1bm5pbmfCpm91dHB1dIakYm9keaCwcGVyc2lzdF9qc19zdGF0ZcKkbWltZap0ZXh0L3BsYWlusmxhc3RfcnVuX3RpbWVzdGFtcMtB2IcHbtmZmrdoYXNfcGx1dG9faG9va19mZWF0dXJlc8Kscm9vdGFzc2lnbmVlwKdjZWxsX2lk2SQyYTUwNTViNC0yMTM3LTQ0N2QtYmZkMi1hMjZjYzRiMTQ3MzW5ZGVwZW5kc19vbl9kaXNhYmxlZF9jZWxsc8KncnVudGltZc8AAAABL8fVPLVwdWJsaXNoZWRfb2JqZWN0X2tleXOQp2Vycm9yZWTC2SRkODZjMzc2NC04MWZiLTRkY2MtYWYwNC0wOTQzNTZhMjUyMTaJpnF1ZXVlZMKkbG9nc5CncnVubmluZ8Kmb3V0cHV0hqRib2R52VI8ZGl2IGNsYXNzPSJtYXJrZG93biI+PHA+PHN0cm9uZz5MZXQmIzM5O3Mgc2VlIGhvdyB0byBkbyB0aGlzLjwvc3Ryb25nPjwvcD4KPC9kaXY+sHBlcnNpc3RfanNfc3RhdGXCpG1pbWWpdGV4dC9odG1ssmxhc3RfcnVuX3RpbWVzdGFtcMtB2IcHZD/fO7doYXNfcGx1dG9faG9va19mZWF0dXJlc8Kscm9vdGFzc2lnbmVlwKdjZWxsX2lk2SRkODZjMzc2NC04MWZiLTRkY2MtYWYwNC0wOTQzNTZhMjUyMTa5ZGVwZW5kc19vbl9kaXNhYmxlZF9jZWxsc8KncnVudGltZc4ABBv0tXB1Ymxpc2hlZF9vYmplY3Rfa2V5c5CnZXJyb3JlZMLZJDRjZmVkYTZiLTZiMTItNGZmYS05Mzc5LTE1YzAwYjUzYTQ5ZImmcXVldWVkwqRsb2dzkKdydW5uaW5nwqZvdXRwdXSGpGJvZHnZcDxkaXYgY2xhc3M9Im1hcmtkb3duIj48cD48c3Ryb25nPk5leHQsIGxldCYjMzk7cyBjYWxjdWxhdGUgdGhlIGNvdmFyaWFuY2UgbWF0cml4IG9mIHJldHVybnMuPC9zdHJvbmc+PC9wPgo8L2Rpdj6wcGVyc2lzdF9qc19zdGF0ZcKkbWltZal0ZXh0L2h0bWyybGFzdF9ydW5fdGltZXN0YW1wy0HYhwdkStDlt2hhc19wbHV0b19ob29rX2ZlYXR1cmVzwqxyb290YXNzaWduZWXAp2NlbGxfaWTZJDRjZmVkYTZiLTZiMTItNGZmYS05Mzc5LTE1YzAwYjUzYTQ5ZLlkZXBlbmRzX29uX2Rpc2FibGVkX2NlbGxzwqdydW50aW1lzgAC49i1cHVibGlzaGVkX29iamVjdF9rZXlzkKdlcnJvcmVkwtkkYTBjZjAzNjEtNDIyYS00YmNkLThiOWUtOTQzZGMwMDA0NGIziaZxdWV1ZWTCpGxvZ3OQp3J1bm5pbmfCpm91dHB1dIakYm9keYOkcm93c5KSAZaSqjIwMjAtMDgtMzGqdGV4dC9wbGFpbpKmIkFBUEwiqnRleHQvcGxhaW6SoTeqdGV4dC9wbGFpbpKlMTQ1OTOqdGV4dC9wbGFpbpKmMTI5LjA0qnRleHQvcGxhaW6SozAuMKp0ZXh0L3BsYWlukgKWkqoyMDIwLTA4LTMxqnRleHQvcGxhaW6SpiJBQVBMIqp0ZXh0L3BsYWlukqE3qnRleHQvcGxhaW6SpTE0NTkzqnRleHQvcGxhaW6SpjEyOS4wNKp0ZXh0L3BsYWlukqQwLjgyqnRleHQvcGxhaW6ob2JqZWN0aWSwNGI0ZWUzZmFmMzU5NzE2MKZzY2hlbWGCpW5hbWVzlqRkYXRlplRJQ0tFUqZQRVJNQ0+mUEVSTU5Po1BSQ6ZESVZBTVSldHlwZXOWpERhdGWoU3RyaW5nNz+lSW50NjSlSW50NjSoRmxvYXQ2ND+oRmxvYXQ2ND+wcGVyc2lzdF9qc19zdGF0ZcKkbWltZdkiYXBwbGljYXRpb24vdm5kLnBsdXRvLnRhYmxlK29iamVjdLJsYXN0X3J1bl90aW1lc3RhbXDLQdiHB4MTU/i3aGFzX3BsdXRvX2hvb2tfZmVhdHVyZXPCrHJvb3Rhc3NpZ25lZcCnY2VsbF9pZNkkYTBjZjAzNjEtNDIyYS00YmNkLThiOWUtOTQzZGMwMDA0NGIzuWRlcGVuZHNfb25fZGlzYWJsZWRfY2VsbHPCp3J1bnRpbWXPAAAAARkTnLi1cHVibGlzaGVkX29iamVjdF9rZXlzkKdlcnJvcmVkwtkkYjFhNzY5MDktYTUzZi00OTJhLWJlYzItNTQxNWQ5MGQ1ZGU0iaZxdWV1ZWTCpGxvZ3OQp3J1bm5pbmfCpm91dHB1dIakYm9keYOkcm93c5aSAZaSpiJBQVBMIqp0ZXh0L3BsYWlukqkwLjAxNTg2MTSqdGV4dC9wbGFpbpKoMC4xNDAxMjSqdGV4dC9wbGFpbpKpLTAuODUzMTkxqnRleHQvcGxhaW6SpjAuMDI5Nap0ZXh0L3BsYWlukqgwLjQ1Mzc4Mqp0ZXh0L3BsYWlukgKWkqQiQkEiqnRleHQvcGxhaW6SqTAuMDEyNDg2OKp0ZXh0L3BsYWlukqkwLjA5MjQ3NzWqdGV4dC9wbGFpbpKoLTAuNDU3ODmqdGV4dC9wbGFpbpKpMC4wMTczMjM0qnRleHQvcGxhaW6SqDAuNDU5MzEyqnRleHQvcGxhaW6SA5aSpSJESVMiqnRleHQvcGxhaW6SqTAuMDEwMTQzNap0ZXh0L3BsYWlukqkwLjA3MzU0NTmqdGV4dC9wbGFpbpKpLTAuMjY3Nzk0qnRleHQvcGxhaW6SqTAuMDEwNjU3NKp0ZXh0L3BsYWlukqgwLjIzMzYzMap0ZXh0L3BsYWlukgSWkqQiR1MiqnRleHQvcGxhaW6SqjAuMDA5NDc2OTaqdGV4dC9wbGFpbpKpMC4wOTMwMjUzqnRleHQvcGxhaW6SqS0wLjI3NDYwOap0ZXh0L3BsYWlukqkwLjAxNTM3MDWqdGV4dC9wbGFpbpKoMC4zMDIxMzGqdGV4dC9wbGFpbpIFlpKlIkpOSiKqdGV4dC9wbGFpbpKqMC4wMDY0MTA3Mqp0ZXh0L3BsYWlukqkwLjA1Njg3NjGqdGV4dC9wbGFpbpKoLTAuNDg0MjeqdGV4dC9wbGFpbpKqMC4wMDg5Nzk0Nap0ZXh0L3BsYWlukqgwLjE3NDM3N6p0ZXh0L3BsYWlukgaWkqkiUG9ydGZSeCKqdGV4dC9wbGFpbpKpMC4wMTA4NzU5qnRleHQvcGxhaW6SqTAuMDU5MzczOap0ZXh0L3BsYWlukqktMC4xOTIyOTmqdGV4dC9wbGFpbpKpMC4wMTQ5MTQ3qnRleHQvcGxhaW6SqDAuMjExNTY0qnRleHQvcGxhaW6ob2JqZWN0aWSwZmJmNTBiNzY0YTBkNTNmMKZzY2hlbWGCpW5hbWVzlqZUSUNLRVKkTWVhbqZTdGREZXajTWluo01lZKNNYXildHlwZXOWplN0cmluZ6dGbG9hdDY0p0Zsb2F0NjSnRmxvYXQ2NKdGbG9hdDY0p0Zsb2F0NjSwcGVyc2lzdF9qc19zdGF0ZcKkbWltZdkiYXBwbGljYXRpb24vdm5kLnBsdXRvLnRhYmxlK29iamVjdLJsYXN0X3J1bl90aW1lc3RhbXDLQdiHB4fqTdO3aGFzX3BsdXRvX2hvb2tfZmVhdHVyZXPCrHJvb3Rhc3NpZ25lZaxQb3J0ZlN1bW1hcnmnY2VsbF9pZNkkYjFhNzY5MDktYTUzZi00OTJhLWJlYzItNTQxNWQ5MGQ1ZGU0uWRlcGVuZHNfb25fZGlzYWJsZWRfY2VsbHPCp3J1bnRpbWXOldocALVwdWJsaXNoZWRfb2JqZWN0X2tleXOQp2Vycm9yZWTC2SQ3NTAwN2M1Ny05NGU4LTQ5ZmMtOGJiYi0zZDM5ZDYyMDdmYTKJpnF1ZXVlZMKkbG9nc5CncnVubmluZ8Kmb3V0cHV0hqRib2R52gKdPGRpdiBjbGFzcz0ibWFya2Rvd24iPjxoMT5DdW11bGF0aW5nIFJldHVybnM8L2gxPgo8cD5OZXQgcmV0dXJucyBjYW4gYmUgY3VtdWxhdGVkIGludG8gYSBwb3J0Zm9saW8gdmFsdWUgYXM8L3A+CjxwIGNsYXNzPSJ0ZXgiPiQkVl90ICYjNjE7IFZfJiMxMjM7dC0xJiMxMjU7JiM0MDsxJiM0MztSX3QmIzQxOywkJDwvcD4KPHA+d2hlcmUgd2UgbmVlZCBhIHN0YXJ0aW5nIHZhbHVlICYjNDA7aW5pdGlhbCBpbnZlc3RtZW50JiM0MTsgZm9yIHRoZSBwb3J0Zm9saW8gJiM0MDthIGNvbW1vbiBjaG9pY2UgaXMgdG8gbm9ybWFsaXNlIHRvIDxzcGFuIGNsYXNzPSJ0ZXgiPiRWXzAmIzYxOzEkPC9zcGFuPiYjNDE7LjwvcD4KPHA+V2l0aCBsb2cgcmV0dXJucywgPHNwYW4gY2xhc3M9InRleCI+JHJfdCYjNjE7XGxvZyYjNDA7MSYjNDM7Ul90JiM0MTskPC9zcGFuPiwgd2UgaW5zdGVhZCBkbzwvcD4KPHAgY2xhc3M9InRleCI+JCRcbG4gVl90ICYjNjE7IFxsbiBWXyYjMTIzO3QtMSYjMTI1OyAmIzQzOyByX3QkJDwvcD4KPHA+SWYgdGhlIHJldHVybiBzZXJpZXMgaXMgYW4gZXhjZXNzIHJldHVybiwgYWRkIHRoZSByaXNrZnJlZSByYXRlIHRvIGNvbnZlcnQgaXQgdG8gZ2V0IG5ldCByZXR1cm5zIC0gYW5kIHRoZW4gY3VtdWxhdGUgYXMgZGVzY3JpYmVkIGFib3ZlLjwvcD4KPC9kaXY+sHBlcnNpc3RfanNfc3RhdGXCpG1pbWWpdGV4dC9odG1ssmxhc3RfcnVuX3RpbWVzdGFtcMtB2IcHZDNT+LdoYXNfcGx1dG9faG9va19mZWF0dXJlc8Kscm9vdGFzc2lnbmVlwKdjZWxsX2lk2SQ3NTAwN2M1Ny05NGU4LTQ5ZmMtOGJiYi0zZDM5ZDYyMDdmYTK5ZGVwZW5kc19vbl9kaXNhYmxlZF9jZWxsc8KncnVudGltZc4AB1oItXB1Ymxpc2hlZF9vYmplY3Rfa2V5c5CnZXJyb3JlZMLZJGRhMzViOWEwLTVhYzgtNDYwOC04ZGM1LTJjMDg5MDFjYzJlM4mmcXVldWVkwqRsb2dzkKdydW5uaW5nwqZvdXRwdXSGpGJvZHmDpHJvd3OckgGWkqoyMDAwLTAyLTI5qnRleHQvcGxhaW6SqDAuMTA0ODE5qnRleHQvcGxhaW6SqS0wLjE2Njc5OKp0ZXh0L3BsYWlukqotMC4wNzc0NTI3qnRleHQvcGxhaW6SqTAuMDA5NTQ5OKp0ZXh0L3BsYWlukqktMC4xNjAxNDWqdGV4dC9wbGFpbpIClpKqMjAwMC0wMy0zMap0ZXh0L3BsYWlukqgwLjE4NDg0Mqp0ZXh0L3BsYWlukqkwLjAyMzY4ODeqdGV4dC9wbGFpbpKoMC4yMzEzNDOqdGV4dC9wbGFpbpKoMC4xMzc4MziqdGV4dC9wbGFpbpKqLTAuMDI0MzA1Nqp0ZXh0L3BsYWlukgOWkqoyMDAwLTA0LTI4qnRleHQvcGxhaW6Sqi0wLjA4NjUxNjOqdGV4dC9wbGFpbpKpMC4wNDk1ODY4qnRleHQvcGxhaW6SpDAuMDWqdGV4dC9wbGFpbpKpLTAuMTEyODc0qnRleHQvcGxhaW6SqDAuMTc0Mzc3qnRleHQvcGxhaW6SBJaSqjIwMDAtMDUtMzGqdGV4dC9wbGFpbpKpLTAuMzIyOTIyqnRleHQvcGxhaW6Sqi0wLjAxMjIyMDWqdGV4dC9wbGFpbpKpLTAuMDMxNzQ2qnRleHQvcGxhaW6SqS0wLjIxMTEyNqp0ZXh0L3BsYWlukqkwLjA4ODcyNzOqdGV4dC9wbGFpbpIFlpKqMjAwMC0wNi0zMKp0ZXh0L3BsYWlukqktMC4zNzY0ODiqdGV4dC9wbGFpbpKmMC4wNzA0qnRleHQvcGxhaW6Sqi0wLjA3NDUxNTaqdGV4dC9wbGFpbpKnMC4yODk3Mqp0ZXh0L3BsYWlukqgwLjEzODI2OKp0ZXh0L3BsYWlukgaWkqoyMDAwLTA3LTMxqnRleHQvcGxhaW6Sqi0wLjAyOTgzMjmqdGV4dC9wbGFpbpKoMC4xNzE4OTiqdGV4dC9wbGFpbpKrLTAuMDAzMjIwNjGqdGV4dC9wbGFpbpKpMC4wNDQwODQzqnRleHQvcGxhaW6Sqi0wLjA4NjUwMzGqdGV4dC9wbGFpbpIHlpKqMjAwMC0wOC0zMap0ZXh0L3BsYWlukqgwLjE5OTI2Mqp0ZXh0L3BsYWlukqkwLjA5NzI0NDmqdGV4dC9wbGFpbpKqMC4wMDY0NjIwNKp0ZXh0L3BsYWlukqgwLjI5NDM3OKp0ZXh0L3BsYWlukqotMC4wMDg2NTAxqnRleHQvcGxhaW6SCJaSqjIwMDAtMDktMjmqdGV4dC9wbGFpbpKpLTAuNTc3NDM2qnRleHQvcGxhaW6SqDAuMTc0ODI1qnRleHQvcGxhaW6Sqi0wLjAxNzY1NjWqdGV4dC9wbGFpbpKpLTAuMTEwMjk4qnRleHQvcGxhaW6SqTAuMDIxNzUzOap0ZXh0L3BsYWlukgmWkqoyMDAwLTEwLTMxqnRleHQvcGxhaW6SqS0wLjI0MDI5Map0ZXh0L3BsYWlukqkwLjA3NjM4ODmqdGV4dC9wbGFpbpKqLTAuMDYzNzI1Nap0ZXh0L3BsYWlukqktMC4xMjI5MTiqdGV4dC9wbGFpbpKqLTAuMDE5Mjk0N6p0ZXh0L3BsYWlukgqWkqoyMDAwLTExLTMwqnRleHQvcGxhaW6SqC0wLjE1NjU1qnRleHQvcGxhaW6SqTAuMDIwNDk3N6p0ZXh0L3BsYWlukqktMC4xOTE5NzKqdGV4dC9wbGFpbpKpLTAuMTc3MjA3qnRleHQvcGxhaW6SqTAuMDg4OTU1Mqp0ZXh0L3BsYWlupG1vcmWSzPuWkqoyMDIwLTEyLTMxqnRleHQvcGxhaW6SqDAuMTE0NTc0qnRleHQvcGxhaW6SqTAuMDE1ODk4Nqp0ZXh0L3BsYWlukqgwLjIyNDEwNqp0ZXh0L3BsYWlukqgwLjE0OTEwMqp0ZXh0L3BsYWlukqcwLjA4Nzc4qnRleHQvcGxhaW6ob2JqZWN0aWSwMWFmMWU1Mjg3YzQ0OTQ3MqZzY2hlbWGCpW5hbWVzlqRkYXRlpEFBUEyiQkGjRElTokdTo0pOSqV0eXBlc5akRGF0ZahGbG9hdDY0P6hGbG9hdDY0P6hGbG9hdDY0P6hGbG9hdDY0P6hGbG9hdDY0P7BwZXJzaXN0X2pzX3N0YXRlwqRtaW1l2SJhcHBsaWNhdGlvbi92bmQucGx1dG8udGFibGUrb2JqZWN0smxhc3RfcnVuX3RpbWVzdGFtcMtB2IcHhkHrhbdoYXNfcGx1dG9faG9va19mZWF0dXJlc8Kscm9vdGFzc2lnbmVlwKdjZWxsX2lk2SRkYTM1YjlhMC01YWM4LTQ2MDgtOGRjNS0yYzA4OTAxY2MyZTO5ZGVwZW5kc19vbl9kaXNhYmxlZF9jZWxsc8KncnVudGltZc4nYzyYtXB1Ymxpc2hlZF9vYmplY3Rfa2V5c5CnZXJyb3JlZMLZJDg3MDk5OTEwLWRmZGUtNGZlZS04OTEwLTFkNmJkMjVkNTE3MImmcXVldWVkwqRsb2dzkKdydW5uaW5nwqZvdXRwdXSGpGJvZHmDpHJvd3OckgGXkqoyMDAwLTAyLTI5qnRleHQvcGxhaW6SqDAuMTA0ODE5qnRleHQvcGxhaW6SqS0wLjE2Njc5OKp0ZXh0L3BsYWlukqotMC4wNzc0NTI3qnRleHQvcGxhaW6SqTAuMDA5NTQ5OKp0ZXh0L3BsYWlukqktMC4xNjAxNDWqdGV4dC9wbGFpbpKqLTAuMDU4MDA1M6p0ZXh0L3BsYWlukgKXkqoyMDAwLTAzLTMxqnRleHQvcGxhaW6SqDAuMTg0ODQyqnRleHQvcGxhaW6SqTAuMDIzNjg4N6p0ZXh0L3BsYWlukqgwLjIzMTM0M6p0ZXh0L3BsYWlukqgwLjEzNzgzOKp0ZXh0L3BsYWlukqotMC4wMjQzMDU2qnRleHQvcGxhaW6SqDAuMTEwNjgxqnRleHQvcGxhaW6SA5eSqjIwMDAtMDQtMjiqdGV4dC9wbGFpbpKqLTAuMDg2NTE2M6p0ZXh0L3BsYWlukqkwLjA0OTU4NjiqdGV4dC9wbGFpbpKkMC4wNap0ZXh0L3BsYWlukqktMC4xMTI4NzSqdGV4dC9wbGFpbpKoMC4xNzQzNzeqdGV4dC9wbGFpbpKpMC4wMTQ5MTQ3qnRleHQvcGxhaW6SBJeSqjIwMDAtMDUtMzGqdGV4dC9wbGFpbpKpLTAuMzIyOTIyqnRleHQvcGxhaW6Sqi0wLjAxMjIyMDWqdGV4dC9wbGFpbpKpLTAuMDMxNzQ2qnRleHQvcGxhaW6SqS0wLjIxMTEyNqp0ZXh0L3BsYWlukqkwLjA4ODcyNzOqdGV4dC9wbGFpbpKqLTAuMDk3ODU3NKp0ZXh0L3BsYWlukgWXkqoyMDAwLTA2LTMwqnRleHQvcGxhaW6SqS0wLjM3NjQ4OKp0ZXh0L3BsYWlukqYwLjA3MDSqdGV4dC9wbGFpbpKqLTAuMDc0NTE1Nqp0ZXh0L3BsYWlukqcwLjI4OTcyqnRleHQvcGxhaW6SqDAuMTM4MjY4qnRleHQvcGxhaW6SqjAuMDA5NDc2ODGqdGV4dC9wbGFpbpIGl5KqMjAwMC0wNy0zMap0ZXh0L3BsYWlukqotMC4wMjk4MzI5qnRleHQvcGxhaW6SqDAuMTcxODk4qnRleHQvcGxhaW6Sqy0wLjAwMzIyMDYxqnRleHQvcGxhaW6SqTAuMDQ0MDg0M6p0ZXh0L3BsYWlukqotMC4wODY1MDMxqnRleHQvcGxhaW6SqTAuMDE5Mjg1Mqp0ZXh0L3BsYWlukgeXkqoyMDAwLTA4LTMxqnRleHQvcGxhaW6SqDAuMTk5MjYyqnRleHQvcGxhaW6SqTAuMDk3MjQ0Oap0ZXh0L3BsYWlukqowLjAwNjQ2MjA0qnRleHQvcGxhaW6SqDAuMjk0Mzc4qnRleHQvcGxhaW6Sqi0wLjAwODY1MDGqdGV4dC9wbGFpbpKoMC4xMTc3MzmqdGV4dC9wbGFpbpIIl5KqMjAwMC0wOS0yOap0ZXh0L3BsYWlukqktMC41Nzc0MzaqdGV4dC9wbGFpbpKoMC4xNzQ4MjWqdGV4dC9wbGFpbpKqLTAuMDE3NjU2Nap0ZXh0L3BsYWlukqktMC4xMTAyOTiqdGV4dC9wbGFpbpKpMC4wMjE3NTM5qnRleHQvcGxhaW6SqS0wLjEwMTc2Mqp0ZXh0L3BsYWlukgmXkqoyMDAwLTEwLTMxqnRleHQvcGxhaW6SqS0wLjI0MDI5Map0ZXh0L3BsYWlukqkwLjA3NjM4ODmqdGV4dC9wbGFpbpKqLTAuMDYzNzI1Nap0ZXh0L3BsYWlukqktMC4xMjI5MTiqdGV4dC9wbGFpbpKqLTAuMDE5Mjk0N6p0ZXh0L3BsYWlukqotMC4wNzM5NjgyqnRleHQvcGxhaW6SCpeSqjIwMDAtMTEtMzCqdGV4dC9wbGFpbpKoLTAuMTU2NTWqdGV4dC9wbGFpbpKpMC4wMjA0OTc3qnRleHQvcGxhaW6SqS0wLjE5MTk3Mqp0ZXh0L3BsYWlukqktMC4xNzcyMDeqdGV4dC9wbGFpbpKpMC4wODg5NTUyqnRleHQvcGxhaW6Sqi0wLjA4MzI1NTKqdGV4dC9wbGFpbqRtb3Jlksz7l5KqMjAyMC0xMi0zMap0ZXh0L3BsYWlukqgwLjExNDU3NKp0ZXh0L3BsYWlukqkwLjAxNTg5ODaqdGV4dC9wbGFpbpKoMC4yMjQxMDaqdGV4dC9wbGFpbpKoMC4xNDkxMDKqdGV4dC9wbGFpbpKnMC4wODc3OKp0ZXh0L3BsYWlukqgwLjExODI5Mqp0ZXh0L3BsYWluqG9iamVjdGlksDVjYWZmNGVlMDU0MzU2ZGKmc2NoZW1hgqVuYW1lc5ekZGF0ZaRBQVBMokJBo0RJU6JHU6NKTkqnUG9ydGZSeKV0eXBlc5ekRGF0ZahGbG9hdDY0P6hGbG9hdDY0P6hGbG9hdDY0P6hGbG9hdDY0P6hGbG9hdDY0P6dGbG9hdDY0sHBlcnNpc3RfanNfc3RhdGXCpG1pbWXZImFwcGxpY2F0aW9uL3ZuZC5wbHV0by50YWJsZStvYmplY3SybGFzdF9ydW5fdGltZXN0YW1wy0HYhweGlZFot2hhc19wbHV0b19ob29rX2ZlYXR1cmVzwqxyb290YXNzaWduZWWnUG9ydGZSeKdjZWxsX2lk2SQ4NzA5OTkxMC1kZmRlLTRmZWUtODkxMC0xZDZiZDI1ZDUxNzC5ZGVwZW5kc19vbl9kaXNhYmxlZF9jZWxsc8KncnVudGltZc4SI5jwtXB1Ymxpc2hlZF9vYmplY3Rfa2V5c5CnZXJyb3JlZMLZJGUzNTI5YmVkLWFjODktNGU1Zi1hMWUyLWUyYTdkNGM3YjA3M4mmcXVldWVkwqRsb2dzkKdydW5uaW5nwqZvdXRwdXSGpGJvZHnZZDxkaXYgY2xhc3M9Im1hcmtkb3duIj48cD48c3Ryb25nPkxldCYjMzk7cyBmaXJzdCByZWFkIHRoZSBkYXRhIGludG8gYSBkYXRhZnJhbWUuPC9zdHJvbmc+PC9wPgo8L2Rpdj6wcGVyc2lzdF9qc19zdGF0ZcKkbWltZal0ZXh0L2h0bWyybGFzdF9ydW5fdGltZXN0YW1wy0HYhwdkNysCt2hhc19wbHV0b19ob29rX2ZlYXR1cmVzwqxyb290YXNzaWduZWXAp2NlbGxfaWTZJGUzNTI5YmVkLWFjODktNGU1Zi1hMWUyLWUyYTdkNGM3YjA3M7lkZXBlbmRzX29uX2Rpc2FibGVkX2NlbGxzwqdydW50aW1lzgADZxi1cHVibGlzaGVkX29iamVjdF9rZXlzkKdlcnJvcmVkwtkkMDdlNzY3ZTYtZDZmYy00ZjUyLThiOWQtNzJjYTdjNjMzOTU1iaZxdWV1ZWTCpGxvZ3OQp3J1bm5pbmfCpm91dHB1dIakYm9keYOkcm93c5eSAZeSpTpkYXRlqnRleHQvcGxhaW6Sp25vdGhpbmeqdGV4dC9wbGFpbpKqMjAwMC0wMi0yOap0ZXh0L3BsYWlukqoyMDEwLTA3LTMwqnRleHQvcGxhaW6SqjIwMjAtMTItMzGqdGV4dC9wbGFpbpKhMKp0ZXh0L3BsYWlukqREYXRlqnRleHQvcGxhaW6SApeSpTpBQVBMqnRleHQvcGxhaW6SqTAuMDE1ODYxNKp0ZXh0L3BsYWlukqktMC44NTMxOTGqdGV4dC9wbGFpbpKmMC4wMjk1qnRleHQvcGxhaW6SqDAuNDUzNzgyqnRleHQvcGxhaW6SoTCqdGV4dC9wbGFpbpK3VW5pb257TWlzc2luZywgRmxvYXQ2NH2qdGV4dC9wbGFpbpIDl5KjOkJBqnRleHQvcGxhaW6SqTAuMDEyNDg2OKp0ZXh0L3BsYWlukqgtMC40NTc4Oap0ZXh0L3BsYWlukqkwLjAxNzMyMzSqdGV4dC9wbGFpbpKoMC40NTkzMTKqdGV4dC9wbGFpbpKhMKp0ZXh0L3BsYWlukrdVbmlvbntNaXNzaW5nLCBGbG9hdDY0fap0ZXh0L3BsYWlukgSXkqQ6RElTqnRleHQvcGxhaW6SqTAuMDEwMTQzNap0ZXh0L3BsYWlukqktMC4yNjc3OTSqdGV4dC9wbGFpbpKpMC4wMTA2NTc0qnRleHQvcGxhaW6SqDAuMjMzNjMxqnRleHQvcGxhaW6SoTCqdGV4dC9wbGFpbpK3VW5pb257TWlzc2luZywgRmxvYXQ2NH2qdGV4dC9wbGFpbpIFl5KjOkdTqnRleHQvcGxhaW6SqjAuMDA5NDc2OTaqdGV4dC9wbGFpbpKpLTAuMjc0NjA5qnRleHQvcGxhaW6SqTAuMDE1MzcwNap0ZXh0L3BsYWlukqgwLjMwMjEzMap0ZXh0L3BsYWlukqEwqnRleHQvcGxhaW6St1VuaW9ue01pc3NpbmcsIEZsb2F0NjR9qnRleHQvcGxhaW6SBpeSpDpKTkqqdGV4dC9wbGFpbpKqMC4wMDY0MTA3Mqp0ZXh0L3BsYWlukqgtMC40ODQyN6p0ZXh0L3BsYWlukqowLjAwODk3OTQ1qnRleHQvcGxhaW6SqDAuMTc0Mzc3qnRleHQvcGxhaW6SoTCqdGV4dC9wbGFpbpK3VW5pb257TWlzc2luZywgRmxvYXQ2NH2qdGV4dC9wbGFpbpIHl5KoOlBvcnRmUniqdGV4dC9wbGFpbpKpMC4wMTA4NzU5qnRleHQvcGxhaW6SqS0wLjE5MjI5Oap0ZXh0L3BsYWlukqkwLjAxNDkxNDeqdGV4dC9wbGFpbpKoMC4yMTE1NjSqdGV4dC9wbGFpbpKhMKp0ZXh0L3BsYWlukqdGbG9hdDY0qnRleHQvcGxhaW6ob2JqZWN0aWSwY2VlNTdmZjZlMzkyNjgwNaZzY2hlbWGCpW5hbWVzl6h2YXJpYWJsZaRtZWFuo21pbqZtZWRpYW6jbWF4qG5taXNzaW5npmVsdHlwZaV0eXBlc5emU3ltYm9soKNBbnmjQW55o0FueaVJbnQ2NKCwcGVyc2lzdF9qc19zdGF0ZcKkbWltZdkiYXBwbGljYXRpb24vdm5kLnBsdXRvLnRhYmxlK29iamVjdLJsYXN0X3J1bl90aW1lc3RhbXDLQdiHB4a+p/C3aGFzX3BsdXRvX2hvb2tfZmVhdHVyZXPCrHJvb3Rhc3NpZ25lZcCnY2VsbF9pZNkkMDdlNzY3ZTYtZDZmYy00ZjUyLThiOWQtNzJjYTdjNjMzOTU1uWRlcGVuZHNfb25fZGlzYWJsZWRfY2VsbHPCp3J1bnRpbWXOGrtZqLVwdWJsaXNoZWRfb2JqZWN0X2tleXOQp2Vycm9yZWTC2SQ1OTA3OTllYi1iNWUwLTRlZTAtYmRiNS1hZTRiZDAxZjU1NzaJpnF1ZXVlZMKkbG9nc5CncnVubmluZ8Kmb3V0cHV0hqRib2R52gGaPGRpdiBjbGFzcz0ibWFya2Rvd24iPjxwPklmIHdlIHRyeSB0byBmaWx0ZXIgb3V0IEFBUEwgZnJvbSB0aGUgZGF0YXNldCwgd2UgZ2V0IGFuIGVycm9yIG1lc3NhZ2UuPC9wPgo8YmxvY2txdW90ZT4KPHA+QUFQTCAmIzYxOyBmaWx0ZXImIzQwOzpUSUNLRVIgJiM2MTsmZ3Q7ICYjNDA7eC0mZ3Q7IHgmIzYxOyYjNjE7JnF1b3Q7QUFQTCZxdW90OyYjNDE7LENSU1AmIzQxOzwvcD4KPC9ibG9ja3F1b3RlPgo8cD5UaGlzIGlzIGJlY2F1c2UgOlRJQ0tFUiBoYXMgbWlzc2luZyBkYXRhLCBhbmQgd2UgbmVlZCB0byBnaXZlIGluc3RydWN0aW9ucyB0byB0aGUgPGNvZGU+ZmlsdGVyPC9jb2RlPiBmdW5jdGlvbiBob3cgPGNvZGU+bWlzc2luZzwvY29kZT4gdmFsdWVzIG91Z2h0IHRvIGJlIGRlYWx0IHdpdGguPC9wPgo8L2Rpdj6wcGVyc2lzdF9qc19zdGF0ZcKkbWltZal0ZXh0L2h0bWyybGFzdF9ydW5fdGltZXN0YW1wy0HYhwdkP87Zt2hhc19wbHV0b19ob29rX2ZlYXR1cmVzwqxyb290YXNzaWduZWXAp2NlbGxfaWTZJDU5MDc5OWViLWI1ZTAtNGVlMC1iZGI1LWFlNGJkMDFmNTU3NrlkZXBlbmRzX29uX2Rpc2FibGVkX2NlbGxzwqdydW50aW1lzgAEEKC1cHVibGlzaGVkX29iamVjdF9rZXlzkKdlcnJvcmVkwtkkNGRlY2UxZGItMzMwNS00Yjk0LThhMWItZjVjODMzZDY3NDQ0iaZxdWV1ZWTCpGxvZ3OQp3J1bm5pbmfCpm91dHB1dIakYm9kedoDdwk8ZGl2IHN0eWxlPSJkaXNwbGF5OiBpbmxpbmU7IHdoaXRlLXNwYWNlOiBub3JtYWw7Ij4KCQkKCQk8c2NyaXB0IHR5cGU9InRleHQvamF2YXNjcmlwdCIgaWQ9InBsdXRvdWl0ZXJtaW5hbCI+CgkJCWxldCB0eHQgPSAiRXhwZWN0ZWQgcG9ydGZvbGlvIHJldHVybjogICAgICAwLjA4NFxuUG9ydGZvbGlvIHZhcmlhbmNlIGFuZCBzdGQ6ICAgICAwLjAyMCAgICAgMC4xNDJcbiIKCgkJCXZhciBjb250YWluZXIgPSBodG1sYAoJCQkJPHByZQoJCQkJCWNsYXNzPSJQbHV0b1VJX3Rlcm1pbmFsIgoJCQkJCXN0eWxlPSIKCQkJCQkJbWF4LWhlaWdodDogMzAwcHg7CgkJCQkJCW92ZXJmbG93OiBhdXRvOwoJCQkJCQl3aGl0ZS1zcGFjZTogcHJlOwoJCQkJCQljb2xvcjogd2hpdGU7CgkJCQkJCWJhY2tncm91bmQtY29sb3I6IGJsYWNrOwoJCQkJCQlib3JkZXItcmFkaXVzOiAzcHg7CgkJCQkJCW1hcmdpbi10b3A6IDhweDsKCQkJCQkJbWFyZ2luLWJvdHRvbTogOHB4OwoJCQkJCQlwYWRkaW5nOiAxNXB4OwoJCQkJCQlkaXNwbGF5OiBibG9jazsKCQkJCQkiCgkJCQk+PC9wcmU+CgkJCWAKCQkJdHJ5IHsKCQkJCWNvbnN0IHsgZGVmYXVsdDogQW5zaVVwIH0gPSBhd2FpdCBpbXBvcnQoImh0dHBzOi8vY2RuLmpzZGVsaXZyLm5ldC9naC9KdWxpYVBsdXRvL2Fuc2lfdXBAdjUuMS4wLWVzNi9hbnNpX3VwLmpzIik7CgkJCQljb250YWluZXIuaW5uZXJIVE1MID0gbmV3IEFuc2lVcCgpLmFuc2lfdG9faHRtbCh0eHQpOwoJCQl9IGNhdGNoKGUpIHsKCQkJCWNvbnNvbGUuZXJyb3IoIkZhaWxlZCB0byBpbXBvcnQvY2FsbCBhbnNpdXAhIiwgZSkKCQkJCWNvbnRhaW5lci5pbm5lclRleHQgPSB0eHQKCQkJfQoJCQlyZXR1cm4gY29udGFpbmVyCgkJPC9zY3JpcHQ+Cgk8L2Rpdj4KsHBlcnNpc3RfanNfc3RhdGXCpG1pbWWpdGV4dC9odG1ssmxhc3RfcnVuX3RpbWVzdGFtcMtB2IcHcZDEnLdoYXNfcGx1dG9faG9va19mZWF0dXJlc8Kscm9vdGFzc2lnbmVlwKdjZWxsX2lk2SQ0ZGVjZTFkYi0zMzA1LTRiOTQtOGExYi1mNWM4MzNkNjc0NDS5ZGVwZW5kc19vbl9kaXNhYmxlZF9jZWxsc8KncnVudGltZc4TiaOItXB1Ymxpc2hlZF9vYmplY3Rfa2V5c5CnZXJyb3JlZMLZJDJhMThlMGVmLTQzMzItNGExMS1hZjlmLTNlZmVhM2Y4ZjY5ZImmcXVldWVkwqRsb2dzkKdydW5uaW5nwqZvdXRwdXSGpGJvZHmDpHJvd3OckgGZkqUxMDAwMap0ZXh0L3BsYWlukqgyMDAwMDEzMap0ZXh0L3BsYWlukqdtaXNzaW5nqnRleHQvcGxhaW6SojExqnRleHQvcGxhaW6SoTOqdGV4dC9wbGFpbpKmIjQ5MjAiqnRleHQvcGxhaW6SqiIyOTI3NEExMCKqdGV4dC9wbGFpbpKmIkVXU1QiqnRleHQvcGxhaW6kbW9yZZICmZKlMTAwMDGqdGV4dC9wbGFpbpKoMjAwMDAyMjmqdGV4dC9wbGFpbpKnbWlzc2luZ6p0ZXh0L3BsYWlukqIxMap0ZXh0L3BsYWlukqEzqnRleHQvcGxhaW6SpiI0OTIwIqp0ZXh0L3BsYWlukqoiMjkyNzRBMTAiqnRleHQvcGxhaW6SpiJFV1NUIqp0ZXh0L3BsYWlupG1vcmWSA5mSpTEwMDAxqnRleHQvcGxhaW6SqDIwMDAwMzMxqnRleHQvcGxhaW6Sp21pc3NpbmeqdGV4dC9wbGFpbpKiMTGqdGV4dC9wbGFpbpKhM6p0ZXh0L3BsYWlukqYiNDkyMCKqdGV4dC9wbGFpbpKqIjI5Mjc0QTEwIqp0ZXh0L3BsYWlukqYiRVdTVCKqdGV4dC9wbGFpbqRtb3JlkgSZkqUxMDAwMap0ZXh0L3BsYWlukqgyMDAwMDQyOKp0ZXh0L3BsYWlukqdtaXNzaW5nqnRleHQvcGxhaW6SojExqnRleHQvcGxhaW6SoTOqdGV4dC9wbGFpbpKmIjQ5MjAiqnRleHQvcGxhaW6SqiIyOTI3NEExMCKqdGV4dC9wbGFpbpKmIkVXU1QiqnRleHQvcGxhaW6kbW9yZZIFmZKlMTAwMDGqdGV4dC9wbGFpbpKoMjAwMDA1MzGqdGV4dC9wbGFpbpKnbWlzc2luZ6p0ZXh0L3BsYWlukqIxMap0ZXh0L3BsYWlukqEzqnRleHQvcGxhaW6SpiI0OTIwIqp0ZXh0L3BsYWlukqoiMjkyNzRBMTAiqnRleHQvcGxhaW6SpiJFV1NUIqp0ZXh0L3BsYWlupG1vcmWSBpmSpTEwMDAxqnRleHQvcGxhaW6SqDIwMDAwNjMwqnRleHQvcGxhaW6Sp21pc3NpbmeqdGV4dC9wbGFpbpKiMTGqdGV4dC9wbGFpbpKhM6p0ZXh0L3BsYWlukqYiNDkyMCKqdGV4dC9wbGFpbpKqIjI5Mjc0QTEwIqp0ZXh0L3BsYWlukqYiRVdTVCKqdGV4dC9wbGFpbqRtb3JlkgeZkqUxMDAwMap0ZXh0L3BsYWlukqgyMDAwMDczMap0ZXh0L3BsYWlukqdtaXNzaW5nqnRleHQvcGxhaW6SojExqnRleHQvcGxhaW6SoTOqdGV4dC9wbGFpbpKmIjQ5MjAiqnRleHQvcGxhaW6SqiIyOTI3NEExMCKqdGV4dC9wbGFpbpKmIkVXU1QiqnRleHQvcGxhaW6kbW9yZZIImZKlMTAwMDGqdGV4dC9wbGFpbpKoMjAwMDA4MzGqdGV4dC9wbGFpbpKnbWlzc2luZ6p0ZXh0L3BsYWlukqIxMap0ZXh0L3BsYWlukqEzqnRleHQvcGxhaW6SpiI0OTIwIqp0ZXh0L3BsYWlukqoiMjkyNzRBMTAiqnRleHQvcGxhaW6SpiJFV1NUIqp0ZXh0L3BsYWlupG1vcmWSCZmSpTEwMDAxqnRleHQvcGxhaW6SqDIwMDAwOTI5qnRleHQvcGxhaW6Sp21pc3NpbmeqdGV4dC9wbGFpbpKiMTGqdGV4dC9wbGFpbpKhM6p0ZXh0L3BsYWlukqYiNDkyMCKqdGV4dC9wbGFpbpKqIjI5Mjc0QTEwIqp0ZXh0L3BsYWlukqYiRVdTVCKqdGV4dC9wbGFpbqRtb3JlkgqZkqUxMDAwMap0ZXh0L3BsYWlukqgyMDAwMTAzMap0ZXh0L3BsYWlukqdtaXNzaW5nqnRleHQvcGxhaW6SojExqnRleHQvcGxhaW6SoTOqdGV4dC9wbGFpbpKmIjQ5MjAiqnRleHQvcGxhaW6SqiIyOTI3NEExMCKqdGV4dC9wbGFpbpKmIkVXU1QiqnRleHQvcGxhaW6kbW9yZaRtb3Jlks4AHDX1mZKlOTM0MzaqdGV4dC9wbGFpbpKoMjAyMDEyMzGqdGV4dC9wbGFpbpKnbWlzc2luZ6p0ZXh0L3BsYWlukqIxMap0ZXh0L3BsYWlukqEzqnRleHQvcGxhaW6SpiI5OTk5Iqp0ZXh0L3BsYWlukqoiODgxNjBSMTAiqnRleHQvcGxhaW6SpiJUU0xBIqp0ZXh0L3BsYWlupG1vcmWob2JqZWN0aWSwYTIxYjcwMjI3Y2Q5OWFjMqZzY2hlbWGCpW5hbWVzmaZQRVJNTk+kZGF0ZahOQU1FRU5EVKVTSFJDRKZFWENIQ0SlU0lDQ0SmTkNVU0lQplRJQ0tFUqRtb3JlpXR5cGVzmaVJbnQ2NKVJbnQ2NKZJbnQ2ND+mSW50NjQ/pkludDY0P6hTdHJpbmc3P6lTdHJpbmcxNT+oU3RyaW5nNz+kbW9yZbBwZXJzaXN0X2pzX3N0YXRlwqRtaW1l2SJhcHBsaWNhdGlvbi92bmQucGx1dG8udGFibGUrb2JqZWN0smxhc3RfcnVuX3RpbWVzdGFtcMtB2IcHfv9si7doYXNfcGx1dG9faG9va19mZWF0dXJlc8Kscm9vdGFzc2lnbmVlpENSU1CnY2VsbF9pZNkkMmExOGUwZWYtNDMzMi00YTExLWFmOWYtM2VmZWEzZjhmNjlkuWRlcGVuZHNfb25fZGlzYWJsZWRfY2VsbHPCp3J1bnRpbWXPAAAAC8o++lC1cHVibGlzaGVkX29iamVjdF9rZXlzkKdlcnJvcmVkwtkkODA4NjUzODYtNzljZi00NWIwLTgzNmQtZTU1YTFjYTY0MTc0iaZxdWV1ZWTCpGxvZ3OQp3J1bm5pbmfCpm91dHB1dIakYm9kedoB3DbDlzYgTWF0cml4e0Zsb2F0NjR9OgogIDAuMDE5NjM0OCAgICAwLjAwMTM3NjczICAwLjAwMjg1ODk4ICAwLjAwNDAyNTI4ICAtMC4wMDA1MTg4MTYgIDAuMDA1NDc1NAogIDAuMDAxMzc2NzMgICAwLjAwODU1MjA4ICAwLjAwMzMyNTA0ICAwLjAwMzA2MzY2ICAgMC4wMDEzMzIzMyAgIDAuMDAzNTI5OTcKICAwLjAwMjg1ODk4ICAgMC4wMDMzMjUwNCAgMC4wMDU0MDkgICAgMC4wMDMzMjY1MSAgIDAuMDAxMzIzMTYgICAwLjAwMzI0ODU0CiAgMC4wMDQwMjUyOCAgIDAuMDAzMDYzNjYgIDAuMDAzMzI2NTEgIDAuMDA4NjUzNzEgICAwLjAwMTIxMDYyICAgMC4wMDQwNTU5NgogLTAuMDAwNTE4ODE2ICAwLjAwMTMzMjMzICAwLjAwMTMyMzE2ICAwLjAwMTIxMDYyICAgMC4wMDMyMzQ4OSAgIDAuMDAxMzE2NDQKICAwLjAwNTQ3NTQgICAgMC4wMDM1Mjk5NyAgMC4wMDMyNDg1NCAgMC4wMDQwNTU5NiAgIDAuMDAxMzE2NDQgICAwLjAwMzUyNTI2sHBlcnNpc3RfanNfc3RhdGXCpG1pbWWqdGV4dC9wbGFpbrJsYXN0X3J1bl90aW1lc3RhbXDLQdiHB4k90vK3aGFzX3BsdXRvX2hvb2tfZmVhdHVyZXPCrHJvb3Rhc3NpZ25lZcCnY2VsbF9pZNkkODA4NjUzODYtNzljZi00NWIwLTgzNmQtZTU1YTFjYTY0MTc0uWRlcGVuZHNfb25fZGlzYWJsZWRfY2VsbHPCp3J1bnRpbWXO3mPcQLVwdWJsaXNoZWRfb2JqZWN0X2tleXOQp2Vycm9yZWTC2SQ2YzE5ZmJmMi0zNDJkLTQ4ZmYtOTdkNy05ODNiYjFhZTExMjKJpnF1ZXVlZMKkbG9nc5CncnVubmluZ8Kmb3V0cHV0hqRib2R52gNmCTxkaXYgc3R5bGU9ImRpc3BsYXk6IGlubGluZTsgd2hpdGUtc3BhY2U6IG5vcm1hbDsiPgoJCQoJCTxzY3JpcHQgdHlwZT0idGV4dC9qYXZhc2NyaXB0IiBpZD0icGx1dG91aXRlcm1pbmFsIj4KCQkJbGV0IHR4dCA9ICJwZXJpb2QgICAgICByZXR1cm4sICVcbjIgICAgICAgICAgICAgIDEwLjAwMFxuMyAgICAgICAgICAgICAgIDAuOTI2XG5cbiIKCgkJCXZhciBjb250YWluZXIgPSBodG1sYAoJCQkJPHByZQoJCQkJCWNsYXNzPSJQbHV0b1VJX3Rlcm1pbmFsIgoJCQkJCXN0eWxlPSIKCQkJCQkJbWF4LWhlaWdodDogMzAwcHg7CgkJCQkJCW92ZXJmbG93OiBhdXRvOwoJCQkJCQl3aGl0ZS1zcGFjZTogcHJlOwoJCQkJCQljb2xvcjogd2hpdGU7CgkJCQkJCWJhY2tncm91bmQtY29sb3I6IGJsYWNrOwoJCQkJCQlib3JkZXItcmFkaXVzOiAzcHg7CgkJCQkJCW1hcmdpbi10b3A6IDhweDsKCQkJCQkJbWFyZ2luLWJvdHRvbTogOHB4OwoJCQkJCQlwYWRkaW5nOiAxNXB4OwoJCQkJCQlkaXNwbGF5OiBibG9jazsKCQkJCQkiCgkJCQk+PC9wcmU+CgkJCWAKCQkJdHJ5IHsKCQkJCWNvbnN0IHsgZGVmYXVsdDogQW5zaVVwIH0gPSBhd2FpdCBpbXBvcnQoImh0dHBzOi8vY2RuLmpzZGVsaXZyLm5ldC9naC9KdWxpYVBsdXRvL2Fuc2lfdXBAdjUuMS4wLWVzNi9hbnNpX3VwLmpzIik7CgkJCQljb250YWluZXIuaW5uZXJIVE1MID0gbmV3IEFuc2lVcCgpLmFuc2lfdG9faHRtbCh0eHQpOwoJCQl9IGNhdGNoKGUpIHsKCQkJCWNvbnNvbGUuZXJyb3IoIkZhaWxlZCB0byBpbXBvcnQvY2FsbCBhbnNpdXAhIiwgZSkKCQkJCWNvbnRhaW5lci5pbm5lclRleHQgPSB0eHQKCQkJfQoJCQlyZXR1cm4gY29udGFpbmVyCgkJPC9zY3JpcHQ+Cgk8L2Rpdj4KsHBlcnNpc3RfanNfc3RhdGXCpG1pbWWpdGV4dC9odG1ssmxhc3RfcnVuX3RpbWVzdGFtcMtB2IcHcM6HK7doYXNfcGx1dG9faG9va19mZWF0dXJlc8Kscm9vdGFzc2lnbmVlwKdjZWxsX2lk2SQ2YzE5ZmJmMi0zNDJkLTQ4ZmYtOTdkNy05ODNiYjFhZTExMjK5ZGVwZW5kc19vbl9kaXNhYmxlZF9jZWxsc8KncnVudGltZc5PqnbQtXB1Ymxpc2hlZF9vYmplY3Rfa2V5c5CnZXJyb3JlZMLZJDc2YWRmOWNiLWRiMmMtNGI3Ni05NjE0LWJlMTJiYjljNTc2NImmcXVldWVkwqRsb2dzkKdydW5uaW5nwqZvdXRwdXSGpGJvZHnZVzxkaXYgY2xhc3M9Im1hcmtkb3duIj48cD5MZXQmIzM5O3MgcGljayA1IHN0b2NrczogQUFQTCwgQkEsIERJUywgR1MgYW5kIEpOSi48L3A+CjwvZGl2PrBwZXJzaXN0X2pzX3N0YXRlwqRtaW1lqXRleHQvaHRtbLJsYXN0X3J1bl90aW1lc3RhbXDLQdiHB2RI5WC3aGFzX3BsdXRvX2hvb2tfZmVhdHVyZXPCrHJvb3Rhc3NpZ25lZcCnY2VsbF9pZNkkNzZhZGY5Y2ItZGIyYy00Yjc2LTk2MTQtYmUxMmJiOWM1NzY0uWRlcGVuZHNfb25fZGlzYWJsZWRfY2VsbHPCp3J1bnRpbWXOAAUAeLVwdWJsaXNoZWRfb2JqZWN0X2tleXOQp2Vycm9yZWTC2SQ1MjNlMDE5MS0yMzdlLTRiZGItYjlhMy01MzA3OWI5ZTkyZDWJpnF1ZXVlZMKkbG9nc5CncnVubmluZ8Kmb3V0cHV0hqRib2R5g6Ryb3dznJIBlpKqMjAwMC0wMS0zMap0ZXh0L3BsYWlukqYiQUFQTCKqdGV4dC9wbGFpbpKhN6p0ZXh0L3BsYWlukqUxNDU5M6p0ZXh0L3BsYWlukqYxMDMuNzWqdGV4dC9wbGFpbpKnbWlzc2luZ6p0ZXh0L3BsYWlukgKWkqoyMDAwLTAyLTI5qnRleHQvcGxhaW6SpiJBQVBMIqp0ZXh0L3BsYWlukqE3qnRleHQvcGxhaW6SpTE0NTkzqnRleHQvcGxhaW6SpzExNC42MjWqdGV4dC9wbGFpbpKnbWlzc2luZ6p0ZXh0L3BsYWlukgOWkqoyMDAwLTAzLTMxqnRleHQvcGxhaW6SpiJBQVBMIqp0ZXh0L3BsYWlukqE3qnRleHQvcGxhaW6SpTE0NTkzqnRleHQvcGxhaW6SpzEzNS44MTKqdGV4dC9wbGFpbpKnbWlzc2luZ6p0ZXh0L3BsYWlukgSWkqoyMDAwLTA0LTI4qnRleHQvcGxhaW6SpiJBQVBMIqp0ZXh0L3BsYWlukqE3qnRleHQvcGxhaW6SpTE0NTkzqnRleHQvcGxhaW6SpzEyNC4wNjKqdGV4dC9wbGFpbpKnbWlzc2luZ6p0ZXh0L3BsYWlukgWWkqoyMDAwLTA1LTMxqnRleHQvcGxhaW6SpiJBQVBMIqp0ZXh0L3BsYWlukqE3qnRleHQvcGxhaW6SpTE0NTkzqnRleHQvcGxhaW6SpDg0LjCqdGV4dC9wbGFpbpKnbWlzc2luZ6p0ZXh0L3BsYWlukgaWkqoyMDAwLTA2LTMwqnRleHQvcGxhaW6SpiJBQVBMIqp0ZXh0L3BsYWlukqE3qnRleHQvcGxhaW6SpTE0NTkzqnRleHQvcGxhaW6SpjUyLjM3Nap0ZXh0L3BsYWlukqMwLjCqdGV4dC9wbGFpbpIHlpKqMjAwMC0wNy0zMap0ZXh0L3BsYWlukqYiQUFQTCKqdGV4dC9wbGFpbpKhN6p0ZXh0L3BsYWlukqUxNDU5M6p0ZXh0L3BsYWlukqc1MC44MTI1qnRleHQvcGxhaW6Sp21pc3NpbmeqdGV4dC9wbGFpbpIIlpKqMjAwMC0wOC0zMap0ZXh0L3BsYWlukqYiQUFQTCKqdGV4dC9wbGFpbpKhN6p0ZXh0L3BsYWlukqUxNDU5M6p0ZXh0L3BsYWlukqc2MC45Mzc1qnRleHQvcGxhaW6Sp21pc3NpbmeqdGV4dC9wbGFpbpIJlpKqMjAwMC0wOS0yOap0ZXh0L3BsYWlukqYiQUFQTCKqdGV4dC9wbGFpbpKhN6p0ZXh0L3BsYWlukqUxNDU5M6p0ZXh0L3BsYWlukqUyNS43Nap0ZXh0L3BsYWlukqdtaXNzaW5nqnRleHQvcGxhaW6SCpaSqjIwMDAtMTAtMzGqdGV4dC9wbGFpbpKmIkFBUEwiqnRleHQvcGxhaW6SoTeqdGV4dC9wbGFpbpKlMTQ1OTOqdGV4dC9wbGFpbpKnMTkuNTYyNap0ZXh0L3BsYWlukqdtaXNzaW5nqnRleHQvcGxhaW6kbW9yZZLM/ZaSqjIwMjAtMTItMzGqdGV4dC9wbGFpbpKmIkFBUEwiqnRleHQvcGxhaW6SoTeqdGV4dC9wbGFpbpKlMTQ1OTOqdGV4dC9wbGFpbpKmMTMyLjY5qnRleHQvcGxhaW6Sp21pc3NpbmeqdGV4dC9wbGFpbqhvYmplY3RpZLBhYWIzNjc5NjhkYzQwOTZkpnNjaGVtYYKlbmFtZXOWpGRhdGWmVElDS0VSplBFUk1DT6ZQRVJNTk+jUFJDpkRJVkFNVKV0eXBlc5akRGF0ZahTdHJpbmc3P6VJbnQ2NKVJbnQ2NKhGbG9hdDY0P6hGbG9hdDY0P7BwZXJzaXN0X2pzX3N0YXRlwqRtaW1l2SJhcHBsaWNhdGlvbi92bmQucGx1dG8udGFibGUrb2JqZWN0smxhc3RfcnVuX3RpbWVzdGFtcMtB2IcHgd/fO7doYXNfcGx1dG9faG9va19mZWF0dXJlc8Kscm9vdGFzc2lnbmVlwKdjZWxsX2lk2SQ1MjNlMDE5MS0yMzdlLTRiZGItYjlhMy01MzA3OWI5ZTkyZDW5ZGVwZW5kc19vbl9kaXNhYmxlZF9jZWxsc8KncnVudGltZc5fnLLEtXB1Ymxpc2hlZF9vYmplY3Rfa2V5c5CnZXJyb3JlZMLZJDQ4MDVlOGE2LTM0ZDYtNDlmMC04NzA2LTg4YzkxNmU0Njg5ZommcXVldWVkwqRsb2dzkKdydW5uaW5nwqZvdXRwdXSGpGJvZHnZqDxkaXYgY2xhc3M9Im1hcmtkb3duIj48cD48c3Ryb25nPkFzIHRoZSBuZXh0IHN0ZXAsIHdlIG5lZWQgdHdvIGZ1bmN0aW9ucy4gT25lIHRvIGNhbGN1bGF0ZSBhcml0aG1ldGljIHJldHVybnMsIGFuZCBhbm90aGVyIHRvIGNhbGN1bGF0ZSBsb2cgcmV0dXJucy48L3N0cm9uZz48L3A+CjwvZGl2PrBwZXJzaXN0X2pzX3N0YXRlwqRtaW1lqXRleHQvaHRtbLJsYXN0X3J1bl90aW1lc3RhbXDLQdiHB2RAgxK3aGFzX3BsdXRvX2hvb2tfZmVhdHVyZXPCrHJvb3Rhc3NpZ25lZcCnY2VsbF9pZNkkNDgwNWU4YTYtMzRkNi00OWYwLTg3MDYtODhjOTE2ZTQ2ODlmuWRlcGVuZHNfb25fZGlzYWJsZWRfY2VsbHPCp3J1bnRpbWXOAAV5LLVwdWJsaXNoZWRfb2JqZWN0X2tleXOQp2Vycm9yZWTC2SRjYjc4YmU4Yy1mMDM5LTQzNGUtYWNiYi05Mzc1ZjMxNzQ1ODiJpnF1ZXVlZMKkbG9nc5CncnVubmluZ8Kmb3V0cHV0hqRib2R52gEzPGRpdiBjbGFzcz0ibWFya2Rvd24iPjxwPjxzdHJvbmc+VG8gY3JlYXRlIHRoaXMgdGFibGUsIGl0IGlzIGVhc2llciB0byB3b3JrIHdpdGggdGhlIGRhdGEgaW4gPGNvZGU+bG9uZzwvY29kZT4gZm9ybWF0Ljwvc3Ryb25nPiBUaGF0IGlzIHdlIGhhdmUgb24gY29sdW1uIGZvciB0aGUgVElDS0VSIGFuZCBvbmUgY29sdW1uIGZvciB0aGUgcmV0dXJuIGZvciBlYWNoIGRhdGUuIEluIHRoaXMgZm9ybWF0LCBpdCBpcyBlYXNpZXIgdG8gZ3JvdXAgdGhlIGRhdGEgYW5kIHRvIGFwcGx5IGEgZGF0YSB0cmFuc2Zvcm1hdGlvbi48L3A+CjwvZGl2PrBwZXJzaXN0X2pzX3N0YXRlwqRtaW1lqXRleHQvaHRtbLJsYXN0X3J1bl90aW1lc3RhbXDLQdiHB2RKn763aGFzX3BsdXRvX2hvb2tfZmVhdHVyZXPCrHJvb3Rhc3NpZ25lZcCnY2VsbF9pZNkkY2I3OGJlOGMtZjAzOS00MzRlLWFjYmItOTM3NWYzMTc0NTg4uWRlcGVuZHNfb25fZGlzYWJsZWRfY2VsbHPCp3J1bnRpbWXOAAM5ZLVwdWJsaXNoZWRfb2JqZWN0X2tleXOQp2Vycm9yZWTC2SQ4YzU4Y2JjNi1jZmJkLTQzZGUtOWU2OC1iYmFmNDQ3MjEzZmGJpnF1ZXVlZMKkbG9nc5CncnVubmluZ8Kmb3V0cHV0hqRib2R5g6Ryb3dzkZIBkZKnMS40ODU0NKp0ZXh0L3BsYWluqG9iamVjdGlksDg1MmNmZjBlNjFhNjAxYzCmc2NoZW1hgqVuYW1lc5GjVl9UpXR5cGVzkadGbG9hdDY0sHBlcnNpc3RfanNfc3RhdGXCpG1pbWXZImFwcGxpY2F0aW9uL3ZuZC5wbHV0by50YWJsZStvYmplY3SybGFzdF9ydW5fdGltZXN0YW1wy0HYhweEyPXDt2hhc19wbHV0b19ob29rX2ZlYXR1cmVzwqxyb290YXNzaWduZWXAp2NlbGxfaWTZJDhjNThjYmM2LWNmYmQtNDNkZS05ZTY4LWJiYWY0NDcyMTNmYblkZXBlbmRzX29uX2Rpc2FibGVkX2NlbGxzwqdydW50aW1lzltO0Ly1cHVibGlzaGVkX29iamVjdF9rZXlzkKdlcnJvcmVkwtkkYWEyMWYwNWMtMWU3OC00OTE5LTg2ZmEtNTdhZTg5ZDRkNjMziaZxdWV1ZWTCpGxvZ3OQp3J1bm5pbmfCpm91dHB1dIakYm9kednGPGRpdiBjbGFzcz0ibWFya2Rvd24iPjxwPjxzdHJvbmc+TGFzdGx5LCBsZXQmIzM5O3MgdXNlIHdoYXQgd2UgaGF2ZSBsZWFybmVkIGFib3V0IHBvcnRmb2xpbyBtYXRoZW1hdGljcyBhdCB0aGUgYmVnaW5uaW5nIG9mIHRoaXMgbGVjdXR1cmUgYW5kIGFwcGx5IGl0IHRvIG91ciBwb3J0Zm9saW8gb2Ygc3RvY2tzLjwvc3Ryb25nPjwvcD4KPC9kaXY+sHBlcnNpc3RfanNfc3RhdGXCpG1pbWWpdGV4dC9odG1ssmxhc3RfcnVuX3RpbWVzdGFtcMtB2IcHZErhSLdoYXNfcGx1dG9faG9va19mZWF0dXJlc8Kscm9vdGFzc2lnbmVlwKdjZWxsX2lk2SRhYTIxZjA1Yy0xZTc4LTQ5MTktODZmYS01N2FlODlkNGQ2MzO5ZGVwZW5kc19vbl9kaXNhYmxlZF9jZWxsc8KncnVudGltZc4AAv/4tXB1Ymxpc2hlZF9vYmplY3Rfa2V5c5CnZXJyb3JlZMLZJGJkMzUyZjJlLTNiN2YtNGI1Yi1hZTQzLWZkMjQ0NDQ3MzQ3YYmmcXVldWVkwqRsb2dzkKdydW5uaW5nwqZvdXRwdXSGpGJvZHnaAeE8ZGl2IGNsYXNzPSJtYXJrZG93biI+PGgyPlJldHVybiBDYWxjdWxhdGlvbnM8L2gyPgo8cD5UaGUgcmV0dXJuIG9mIGhvbGRpbmcgdGhlIGFzc2V0IGJldHdlZW4gPHNwYW4gY2xhc3M9InRleCI+JHQtMSQ8L3NwYW4+IGFuZCA8c3BhbiBjbGFzcz0idGV4Ij4kdCQ8L3NwYW4+IGlzPC9wPgo8cCBjbGFzcz0idGV4Ij4kJFJfdCAmIzYxOyAmIzQwO1BfdCYjNDM7RF90JiM0MTsvUF8mIzEyMzt0LTEmIzEyNTsgLSAxLCQkPC9wPgo8cD53aGVyZSA8c3BhbiBjbGFzcz0idGV4Ij4kUF90JDwvc3Bhbj4gaXMgdGhlIHByaWNlICYjNDA7bWVhc3VyZWQgYWZ0ZXIgZGl2aWRlbmRzJiM0MTsgYW5kIDxzcGFuIGNsYXNzPSJ0ZXgiPiREX3QkPC9zcGFuPiBpcyB0aGUgZGl2aWRlbmQuPC9wPgo8cD5XZSBjYW4gY2FsY3VsYXRlIHRoZSByZXR1cm5zIGJ5IGEgbG9vcCBvciBieSBhIG1vcmUgY29tcGFjdCBub3RhdGlvbiwgc2VlIGJlbG93LjwvcD4KPC9kaXY+sHBlcnNpc3RfanNfc3RhdGXCpG1pbWWpdGV4dC9odG1ssmxhc3RfcnVuX3RpbWVzdGFtcMtB2IcHZDMSb7doYXNfcGx1dG9faG9va19mZWF0dXJlc8Kscm9vdGFzc2lnbmVlwKdjZWxsX2lk2SRiZDM1MmYyZS0zYjdmLTRiNWItYWU0My1mZDI0NDQ0NzM0N2G5ZGVwZW5kc19vbl9kaXNhYmxlZF9jZWxsc8KncnVudGltZc4AC7kstXB1Ymxpc2hlZF9vYmplY3Rfa2V5c5CnZXJyb3JlZMLZJGE1NDgzMTRiLTUxMWQtNDMxOS04ZjdiLTk1YTMxNThiYTkwY4mmcXVldWVkwqRsb2dzkKdydW5uaW5nwqZvdXRwdXSGpGJvZHnZVTxkaXYgY2xhc3M9Im1hcmtkb3duIj48aDE+RklOQyA2NzI6IEludHJvZHVjdGlvbiB0byBQb3J0Zm9saW8gTWF0aGVtYXRpY3M8L2gxPgo8L2Rpdj6wcGVyc2lzdF9qc19zdGF0ZcKkbWltZal0ZXh0L2h0bWyybGFzdF9ydW5fdGltZXN0YW1wy0HYhwdkLQ5Wt2hhc19wbHV0b19ob29rX2ZlYXR1cmVzwqxyb290YXNzaWduZWXAp2NlbGxfaWTZJGE1NDgzMTRiLTUxMWQtNDMxOS04ZjdiLTk1YTMxNThiYTkwY7lkZXBlbmRzX29uX2Rpc2FibGVkX2NlbGxzwqdydW50aW1lzgADiRS1cHVibGlzaGVkX29iamVjdF9rZXlzkKdlcnJvcmVkwtkkMTZjYzcwNzQtZDc4Ni00YmI1LWE3MzUtMTg3NDY1ZTgxNWUyiaZxdWV1ZWTCpGxvZ3OQp3J1bm5pbmfCpm91dHB1dIakYm9kedlrPGRpdiBjbGFzcz0ibWFya2Rvd24iPjxwPjxzdHJvbmc+VGhlbiwgd2UgY2FsY3VsYXRlIHRoZSBwb3J0Zm9saW8gcmV0dXJuIGluIGVhY2ggbW9udGguPC9zdHJvbmc+PC9wPgo8L2Rpdj6wcGVyc2lzdF9qc19zdGF0ZcKkbWltZal0ZXh0L2h0bWyybGFzdF9ydW5fdGltZXN0YW1wy0HYhwdkSm6Yt2hhc19wbHV0b19ob29rX2ZlYXR1cmVzwqxyb290YXNzaWduZWXAp2NlbGxfaWTZJDE2Y2M3MDc0LWQ3ODYtNGJiNS1hNzM1LTE4NzQ2NWU4MTVlMrlkZXBlbmRzX29uX2Rpc2FibGVkX2NlbGxzwqdydW50aW1lzgADaji1cHVibGlzaGVkX29iamVjdF9rZXlzkKdlcnJvcmVkwtkkYWQyNmU1NGItODViMS00NjMxLWIxZWQtNTMxODczYmE3MTJhiaZxdWV1ZWTCpGxvZ3OQp3J1bm5pbmfCpm91dHB1dIakYm9kedmAPGRpdiBjbGFzcz0ibWFya2Rvd24iPjxwPjxzdHJvbmc+TGV0JiMzOTtzIGRlc2NyaWJlIHRoZSBkYXRhIHRvIGdldCBhIHNlbnNlIG9mIHRoZSB2YXJpYWJsZXMgYW5kIHRoZWlyIHR5cGVzPC9zdHJvbmc+PC9wPgo8L2Rpdj6wcGVyc2lzdF9qc19zdGF0ZcKkbWltZal0ZXh0L2h0bWyybGFzdF9ydW5fdGltZXN0YW1wy0HYhwdkNztkt2hhc19wbHV0b19ob29rX2ZlYXR1cmVzwqxyb290YXNzaWduZWXAp2NlbGxfaWTZJGFkMjZlNTRiLTg1YjEtNDYzMS1iMWVkLTUzMTg3M2JhNzEyYblkZXBlbmRzX29uX2Rpc2FibGVkX2NlbGxzwqdydW50aW1lzgAC9Qi1cHVibGlzaGVkX29iamVjdF9rZXlzkKdlcnJvcmVkwtkkOTljMGVlNmItZTA0MC00MjYxLTk5MmMtMGY1YTBlYjgxNThjiaZxdWV1ZWTCpGxvZ3OQp3J1bm5pbmfCpm91dHB1dIakYm9keYOkcm93c5ySAZmSqjIwMDAtMDItMjmqdGV4dC9wbGFpbpKmIkFBUEwiqnRleHQvcGxhaW6SoTeqdGV4dC9wbGFpbpKlMTQ1OTOqdGV4dC9wbGFpbpKnMTE0LjYyNap0ZXh0L3BsYWlukqYxMDMuNzWqdGV4dC9wbGFpbpKnbWlzc2luZ6p0ZXh0L3BsYWlukqgwLjEwNDgxOap0ZXh0L3BsYWlukqkwLjA5OTY4MTiqdGV4dC9wbGFpbpICmZKqMjAwMC0wMy0zMap0ZXh0L3BsYWlukqYiQUFQTCKqdGV4dC9wbGFpbpKhN6p0ZXh0L3BsYWlukqUxNDU5M6p0ZXh0L3BsYWlukqcxMzUuODEyqnRleHQvcGxhaW6SpzExNC42MjWqdGV4dC9wbGFpbpKnbWlzc2luZ6p0ZXh0L3BsYWlukqgwLjE4NDg0Mqp0ZXh0L3BsYWlukqgwLjE2OTYwOap0ZXh0L3BsYWlukgOZkqoyMDAwLTA0LTI4qnRleHQvcGxhaW6SpiJBQVBMIqp0ZXh0L3BsYWlukqE3qnRleHQvcGxhaW6SpTE0NTkzqnRleHQvcGxhaW6SpzEyNC4wNjKqdGV4dC9wbGFpbpKnMTM1LjgxMqp0ZXh0L3BsYWlukqdtaXNzaW5nqnRleHQvcGxhaW6Sqi0wLjA4NjUxNjOqdGV4dC9wbGFpbpKqLTAuMDkwNDg5OKp0ZXh0L3BsYWlukgSZkqoyMDAwLTA1LTMxqnRleHQvcGxhaW6SpiJBQVBMIqp0ZXh0L3BsYWlukqE3qnRleHQvcGxhaW6SpTE0NTkzqnRleHQvcGxhaW6SpDg0LjCqdGV4dC9wbGFpbpKnMTI0LjA2Mqp0ZXh0L3BsYWlukqdtaXNzaW5nqnRleHQvcGxhaW6SqS0wLjMyMjkyMqp0ZXh0L3BsYWlukqktMC4zODk5NjmqdGV4dC9wbGFpbpIFmZKqMjAwMC0wNi0zMKp0ZXh0L3BsYWlukqYiQUFQTCKqdGV4dC9wbGFpbpKhN6p0ZXh0L3BsYWlukqUxNDU5M6p0ZXh0L3BsYWlukqY1Mi4zNzWqdGV4dC9wbGFpbpKkODQuMKp0ZXh0L3BsYWlukqMwLjCqdGV4dC9wbGFpbpKpLTAuMzc2NDg4qnRleHQvcGxhaW6SqS0wLjQ3MjM4N6p0ZXh0L3BsYWlukgaZkqoyMDAwLTA3LTMxqnRleHQvcGxhaW6SpiJBQVBMIqp0ZXh0L3BsYWlukqE3qnRleHQvcGxhaW6SpTE0NTkzqnRleHQvcGxhaW6SpzUwLjgxMjWqdGV4dC9wbGFpbpKmNTIuMzc1qnRleHQvcGxhaW6Sp21pc3NpbmeqdGV4dC9wbGFpbpKqLTAuMDI5ODMyOap0ZXh0L3BsYWlukqktMC4wMzAyODeqdGV4dC9wbGFpbpIHmZKqMjAwMC0wOC0zMap0ZXh0L3BsYWlukqYiQUFQTCKqdGV4dC9wbGFpbpKhN6p0ZXh0L3BsYWlukqUxNDU5M6p0ZXh0L3BsYWlukqc2MC45Mzc1qnRleHQvcGxhaW6SpzUwLjgxMjWqdGV4dC9wbGFpbpKnbWlzc2luZ6p0ZXh0L3BsYWlukqgwLjE5OTI2Mqp0ZXh0L3BsYWlukqgwLjE4MTcwNqp0ZXh0L3BsYWlukgiZkqoyMDAwLTA5LTI5qnRleHQvcGxhaW6SpiJBQVBMIqp0ZXh0L3BsYWlukqE3qnRleHQvcGxhaW6SpTE0NTkzqnRleHQvcGxhaW6SpTI1Ljc1qnRleHQvcGxhaW6SpzYwLjkzNzWqdGV4dC9wbGFpbpKnbWlzc2luZ6p0ZXh0L3BsYWlukqktMC41Nzc0MzaqdGV4dC9wbGFpbpKpLTAuODYxNDE0qnRleHQvcGxhaW6SCZmSqjIwMDAtMTAtMzGqdGV4dC9wbGFpbpKmIkFBUEwiqnRleHQvcGxhaW6SoTeqdGV4dC9wbGFpbpKlMTQ1OTOqdGV4dC9wbGFpbpKnMTkuNTYyNap0ZXh0L3BsYWlukqUyNS43Nap0ZXh0L3BsYWlukqdtaXNzaW5nqnRleHQvcGxhaW6SqS0wLjI0MDI5Map0ZXh0L3BsYWlukqgtMC4yNzQ4Mqp0ZXh0L3BsYWlukgqZkqoyMDAwLTExLTMwqnRleHQvcGxhaW6SpiJBQVBMIqp0ZXh0L3BsYWlukqE3qnRleHQvcGxhaW6SpTE0NTkzqnRleHQvcGxhaW6SpDE2LjWqdGV4dC9wbGFpbpKnMTkuNTYyNap0ZXh0L3BsYWlukqdtaXNzaW5nqnRleHQvcGxhaW6SqC0wLjE1NjU1qnRleHQvcGxhaW6SqS0wLjE3MDI1NKp0ZXh0L3BsYWlupG1vcmWSzQTnmZKqMjAyMC0xMi0zMap0ZXh0L3BsYWlukqUiSk5KIqp0ZXh0L3BsYWlukqUyMTAxOKp0ZXh0L3BsYWlukqUyMjExMap0ZXh0L3BsYWlukqYxNTcuMziqdGV4dC9wbGFpbpKmMTQ0LjY4qnRleHQvcGxhaW6Sp21pc3NpbmeqdGV4dC9wbGFpbpKnMC4wODc3OKp0ZXh0L3BsYWlukqkwLjA4NDEzODmqdGV4dC9wbGFpbqhvYmplY3RpZK84YWUyMjYxYzNkZjgxYmamc2NoZW1hgqVuYW1lc5mkZGF0ZaZUSUNLRVKmUEVSTUNPplBFUk1OT6NQUkOlUFJDX0ymRElWQU1UolJ4pUxvZ1J4pXR5cGVzmaREYXRlp1N0cmluZzelSW50NjSlSW50NjSoRmxvYXQ2ND+oRmxvYXQ2ND+oRmxvYXQ2ND+nRmxvYXQ2NKhGbG9hdDY0P7BwZXJzaXN0X2pzX3N0YXRlwqRtaW1l2SJhcHBsaWNhdGlvbi92bmQucGx1dG8udGFibGUrb2JqZWN0smxhc3RfcnVuX3RpbWVzdGFtcMtB2IcHhgZWBLdoYXNfcGx1dG9faG9va19mZWF0dXJlc8Kscm9vdGFzc2lnbmVlqVBvcnRmb2xpb6djZWxsX2lk2SQ5OWMwZWU2Yi1lMDQwLTQyNjEtOTkyYy0wZjVhMGViODE1OGO5ZGVwZW5kc19vbl9kaXNhYmxlZF9jZWxsc8KncnVudGltZc8AAAABBXxqfLVwdWJsaXNoZWRfb2JqZWN0X2tleXOQp2Vycm9yZWTC2SRlNTMxOGUwMC1jMDc0LTQwNzQtOGViNC0zMjQ1Y2VjZWI0YzSJpnF1ZXVlZMKkbG9nc5CncnVubmluZ8Kmb3V0cHV0hqRib2R52gNjCTxkaXYgc3R5bGU9ImRpc3BsYXk6IGlubGluZTsgd2hpdGUtc3BhY2U6IG5vcm1hbDsiPgoJCQoJCTxzY3JpcHQgdHlwZT0idGV4dC9qYXZhc2NyaXB0IiBpZD0icGx1dG91aXRlcm1pbmFsIj4KCQkJbGV0IHR4dCA9ICJQb3J0Zm9saW8gc3RkIGlmIHRoZSBhc3NldHMgd2VyZSBuZWdhdGl2ZWx5IGNvcnJlbGF0ZWQ6ICAgICAgMC4xMThcbiIKCgkJCXZhciBjb250YWluZXIgPSBodG1sYAoJCQkJPHByZQoJCQkJCWNsYXNzPSJQbHV0b1VJX3Rlcm1pbmFsIgoJCQkJCXN0eWxlPSIKCQkJCQkJbWF4LWhlaWdodDogMzAwcHg7CgkJCQkJCW92ZXJmbG93OiBhdXRvOwoJCQkJCQl3aGl0ZS1zcGFjZTogcHJlOwoJCQkJCQljb2xvcjogd2hpdGU7CgkJCQkJCWJhY2tncm91bmQtY29sb3I6IGJsYWNrOwoJCQkJCQlib3JkZXItcmFkaXVzOiAzcHg7CgkJCQkJCW1hcmdpbi10b3A6IDhweDsKCQkJCQkJbWFyZ2luLWJvdHRvbTogOHB4OwoJCQkJCQlwYWRkaW5nOiAxNXB4OwoJCQkJCQlkaXNwbGF5OiBibG9jazsKCQkJCQkiCgkJCQk+PC9wcmU+CgkJCWAKCQkJdHJ5IHsKCQkJCWNvbnN0IHsgZGVmYXVsdDogQW5zaVVwIH0gPSBhd2FpdCBpbXBvcnQoImh0dHBzOi8vY2RuLmpzZGVsaXZyLm5ldC9naC9KdWxpYVBsdXRvL2Fuc2lfdXBAdjUuMS4wLWVzNi9hbnNpX3VwLmpzIik7CgkJCQljb250YWluZXIuaW5uZXJIVE1MID0gbmV3IEFuc2lVcCgpLmFuc2lfdG9faHRtbCh0eHQpOwoJCQl9IGNhdGNoKGUpIHsKCQkJCWNvbnNvbGUuZXJyb3IoIkZhaWxlZCB0byBpbXBvcnQvY2FsbCBhbnNpdXAhIiwgZSkKCQkJCWNvbnRhaW5lci5pbm5lclRleHQgPSB0eHQKCQkJfQoJCQlyZXR1cm4gY29udGFpbmVyCgkJPC9zY3JpcHQ+Cgk8L2Rpdj4KsHBlcnNpc3RfanNfc3RhdGXCpG1pbWWpdGV4dC9odG1ssmxhc3RfcnVuX3RpbWVzdGFtcMtB2IcHcZ3ztrdoYXNfcGx1dG9faG9va19mZWF0dXJlc8Kscm9vdGFzc2lnbmVlwKdjZWxsX2lk2SRlNTMxOGUwMC1jMDc0LTQwNzQtOGViNC0zMjQ1Y2VjZWI0YzS5ZGVwZW5kc19vbl9kaXNhYmxlZF9jZWxsc8KncnVudGltZc4JiKK8tXB1Ymxpc2hlZF9vYmplY3Rfa2V5c5CnZXJyb3JlZMLZJGU4OWVjYjYyLTRjMGYtNDI2Ni04NjNiLTUyOTY5NGNjYTFjMImmcXVldWVkwqRsb2dzkKdydW5uaW5nwqZvdXRwdXSGpGJvZHnaA+YJPGRpdiBzdHlsZT0iZGlzcGxheTogaW5saW5lOyB3aGl0ZS1zcGFjZTogbm9ybWFsOyI+CgkJCgkJPHNjcmlwdCB0eXBlPSJ0ZXh0L2phdmFzY3JpcHQiIGlkPSJwbHV0b3VpdGVybWluYWwiPgoJCQlsZXQgdHh0ID0gIhtbMzFtG1sxbVBvcnRmb2xpbyB3ZWlnaHRzOhtbMjJtG1szOW1cbmFzc2V0IDEgICAgIDAuODAwXG5hc3NldCAyICAgICAwLjIwMFxuXG4bWzMxbRtbMW1SZXR1cm5zOhtbMjJtG1szOW1cbmFzc2V0IDEgICAgIDAuMTAwXG5hc3NldCAyICAgICAwLjA1MFxuXG4bWzMxbRtbMW1Qb3J0Zm9saW8gcmV0dXJuOiAbWzIybRtbMzltXG4gICAgIDAuMDkwXG4iCgoJCQl2YXIgY29udGFpbmVyID0gaHRtbGAKCQkJCTxwcmUKCQkJCQljbGFzcz0iUGx1dG9VSV90ZXJtaW5hbCIKCQkJCQlzdHlsZT0iCgkJCQkJCW1heC1oZWlnaHQ6IDMwMHB4OwoJCQkJCQlvdmVyZmxvdzogYXV0bzsKCQkJCQkJd2hpdGUtc3BhY2U6IHByZTsKCQkJCQkJY29sb3I6IHdoaXRlOwoJCQkJCQliYWNrZ3JvdW5kLWNvbG9yOiBibGFjazsKCQkJCQkJYm9yZGVyLXJhZGl1czogM3B4OwoJCQkJCQltYXJnaW4tdG9wOiA4cHg7CgkJCQkJCW1hcmdpbi1ib3R0b206IDhweDsKCQkJCQkJcGFkZGluZzogMTVweDsKCQkJCQkJZGlzcGxheTogYmxvY2s7CgkJCQkJIgoJCQkJPjwvcHJlPgoJCQlgCgkJCXRyeSB7CgkJCQljb25zdCB7IGRlZmF1bHQ6IEFuc2lVcCB9ID0gYXdhaXQgaW1wb3J0KCJodHRwczovL2Nkbi5qc2RlbGl2ci5uZXQvZ2gvSnVsaWFQbHV0by9hbnNpX3VwQHY1LjEuMC1lczYvYW5zaV91cC5qcyIpOwoJCQkJY29udGFpbmVyLmlubmVySFRNTCA9IG5ldyBBbnNpVXAoKS5hbnNpX3RvX2h0bWwodHh0KTsKCQkJfSBjYXRjaChlKSB7CgkJCQljb25zb2xlLmVycm9yKCJGYWlsZWQgdG8gaW1wb3J0L2NhbGwgYW5zaXVwISIsIGUpCgkJCQljb250YWluZXIuaW5uZXJUZXh0ID0gdHh0CgkJCX0KCQkJcmV0dXJuIGNvbnRhaW5lcgoJCTwvc2NyaXB0PgoJPC9kaXY+CrBwZXJzaXN0X2pzX3N0YXRlwqRtaW1lqXRleHQvaHRtbLJsYXN0X3J1bl90aW1lc3RhbXDLQdiHB3FP7563aGFzX3BsdXRvX2hvb2tfZmVhdHVyZXPCrHJvb3Rhc3NpZ25lZcCnY2VsbF9pZNkkZTg5ZWNiNjItNGMwZi00MjY2LTg2M2ItNTI5Njk0Y2NhMWMwuWRlcGVuZHNfb25fZGlzYWJsZWRfY2VsbHPCp3J1bnRpbWXOI4rDNLVwdWJsaXNoZWRfb2JqZWN0X2tleXOQp2Vycm9yZWTC2SRmYjY5ZDcwMS1lNjIzLTQ0M2UtYjZmMC1jNzUxODBiOWJlMWKJpnF1ZXVlZMKkbG9nc5CncnVubmluZ8Kmb3V0cHV0hqRib2R52eQ8ZGl2IGNsYXNzPSJtYXJrZG93biI+PHA+PHN0cm9uZz5MZXQmIzM5O3MgY3JlYXRlIGEgdGFibGUgd2l0aCBzdW1tYXJ5IHN0YXRpc3RpY3MgdGhhdCB3ZSBhcmUgaW50ZXJlc3RlZCBpbjo8L3N0cm9uZz4gYXZlcmFnZSByZXR1cm4sIHN0YW5kYXJkIGRldmlhdGlvbiBvZiByZXR1cm5zLCBtaW5pbXVtLCBtZWRpYW4sIGFuZCB0aGUgbWF4aW11bSBvZiBtb250aGx5IHJldHVybnMuPC9wPgo8L2Rpdj6wcGVyc2lzdF9qc19zdGF0ZcKkbWltZal0ZXh0L2h0bWyybGFzdF9ydW5fdGltZXN0YW1wy0HYhwdkSo9ct2hhc19wbHV0b19ob29rX2ZlYXR1cmVzwqxyb290YXNzaWduZWXAp2NlbGxfaWTZJGZiNjlkNzAxLWU2MjMtNDQzZS1iNmYwLWM3NTE4MGI5YmUxYrlkZXBlbmRzX29uX2Rpc2FibGVkX2NlbGxzwqdydW50aW1lzgADBwC1cHVibGlzaGVkX29iamVjdF9rZXlzkKdlcnJvcmVkwtkkZTZjMTk4ZjQtNWFiZC00NjhjLTg0MWMtOGE3YjAzMmYxZGMyiaZxdWV1ZWTCpGxvZ3OQp3J1bm5pbmfCpm91dHB1dIakYm9kedoEHDxkaXYgY2xhc3M9Im1hcmtkb3duIj48aDE+UG9ydGZvbGlvIFJldHVybjogRGVmaW5pdGlvbiwgRXhwZWN0ZWQgVmFsdWUgYW5kIFZhcmlhbmNlPC9oMT4KPHA+V2UgZm9ybSBhIHBvcnRmb2xpbyBieSBjb21iaW5pbmcgPHNwYW4gY2xhc3M9InRleCI+JG4kPC9zcGFuPiBhc3NldHM6IDxzcGFuIGNsYXNzPSJ0ZXgiPiR3JDwvc3Bhbj4gaXMgdGhlIHZlY3RvciBvZiA8c3BhbiBjbGFzcz0idGV4Ij4kbiQ8L3NwYW4+IHBvcnRmb2xpbyB3ZWlnaHRzLCA8c3BhbiBjbGFzcz0idGV4Ij4kUiQ8L3NwYW4+IGlzIGEgdmVjdG9yIG9mIHJldHVybnMsIDxzcGFuIGNsYXNzPSJ0ZXgiPiRcbXUkPC9zcGFuPiBhIHZlY3RvciBvZiBleHBlY3RlZCBleHBlY3RlZCAmIzQwO2F2ZXJhZ2UmIzQxOyByZXR1cm5zIGFuZCA8c3BhbiBjbGFzcz0idGV4Ij4kXFNpZ21hJDwvc3Bhbj4gdGhlIDxzcGFuIGNsYXNzPSJ0ZXgiPiRuIFx0aW1lcyBuJDwvc3Bhbj4gY292YXJpYW5jZSBtYXRyaXguPC9wPgo8cD5UaGUgcG9ydGZvbGlvIHJldHVybiwgdGhlIGV4cGVjdGVkIHBvcnRmb2xpbyByZXR1cm4gYW5kIHRoZSBwb3J0Zm9saW8gdmFyaWFuY2UgY2FuIGJlIGNvbXB1dGVkIGFzOjwvcD4KPHAgY2xhc3M9InRleCI+JCRSX3AgJiM2MTsgdyYjMzk7UiwkJDwvcD4KPHAgY2xhc3M9InRleCI+JCRcdGV4dCYjMTIzO0UmIzEyNTtSX3AgJiM2MTsgdyYjMzk7XG11JCQ8L3A+CjxwPmFuZDwvcD4KPHAgY2xhc3M9InRleCI+JCRcdGV4dCYjMTIzO1ZhciYjMTI1OyYjNDA7Ul9wJiM0MTsgJiM2MTsgdyYjMzk7XFNpZ21hIHckJDwvcD4KPHA+VGhlIGNvdmFyaWFuY2Ugb2YgdHdvIHBvcnRmb2xpb3MgJiM0MDt3aXRoIHdlaWdodHMgPHNwYW4gY2xhc3M9InRleCI+JHYkPC9zcGFuPiBhbmQgPHNwYW4gY2xhc3M9InRleCI+JHckPC9zcGFuPiwgcmVzcGVjdGl2ZWx5JiM0MTsgY2FuIGJlIGNvbXB1dGVkIGFzPC9wPgo8cCBjbGFzcz0idGV4Ij4kJFx0ZXh0JiMxMjM7Q292JiMxMjU7JiM0MDtSX3EsUl9wJiM0MTsgJiM2MTsgdiYjMzk7XFNpZ21hIHckJDwvcD4KPHA+LjwvcD4KPC9kaXY+sHBlcnNpc3RfanNfc3RhdGXCpG1pbWWpdGV4dC9odG1ssmxhc3RfcnVuX3RpbWVzdGFtcMtB2IcHZDNkWrdoYXNfcGx1dG9faG9va19mZWF0dXJlc8Kscm9vdGFzc2lnbmVlwKdjZWxsX2lk2SRlNmMxOThmNC01YWJkLTQ2OGMtODQxYy04YTdiMDMyZjFkYzK5ZGVwZW5kc19vbl9kaXNhYmxlZF9jZWxsc8KncnVudGltZc4AB6GEtXB1Ymxpc2hlZF9vYmplY3Rfa2V5c5CnZXJyb3JlZMLZJGU1YzJiNjhmLTRmMWUtNGJkMS04MjQwLWFjNTJkMjY4MzA0YommcXVldWVkwqRsb2dzkKdydW5uaW5nwqZvdXRwdXSGpGJvZHmFpnByZWZpeKdGbG9hdDY0qGVsZW1lbnRzlZIBkqMwLjKqdGV4dC9wbGFpbpICkqMwLjKqdGV4dC9wbGFpbpIDkqMwLjKqdGV4dC9wbGFpbpIEkqMwLjKqdGV4dC9wbGFpbpIFkqMwLjKqdGV4dC9wbGFpbqR0eXBlpUFycmF5rHByZWZpeF9zaG9ydKCob2JqZWN0aWSwYjg4MWRlODMzMTRlODIwZLBwZXJzaXN0X2pzX3N0YXRlwqRtaW1l2SFhcHBsaWNhdGlvbi92bmQucGx1dG8udHJlZStvYmplY3SybGFzdF9ydW5fdGltZXN0YW1wy0HYhweGYl41t2hhc19wbHV0b19ob29rX2ZlYXR1cmVzwqxyb290YXNzaWduZWWhd6djZWxsX2lk2SRlNWMyYjY4Zi00ZjFlLTRiZDEtODI0MC1hYzUyZDI2ODMwNGK5ZGVwZW5kc19vbl9kaXNhYmxlZF9jZWxsc8KncnVudGltZc0+5LVwdWJsaXNoZWRfb2JqZWN0X2tleXOQp2Vycm9yZWTC2SQzMzY5YmU3MS0yYTExLTRkYzgtOGQxYi1kMmIxZDc3NDljNWaJpnF1ZXVlZMKkbG9nc5CncnVubmluZ8Kmb3V0cHV0hqRib2R52gP4CTxkaXYgc3R5bGU9ImRpc3BsYXk6IGlubGluZTsgd2hpdGUtc3BhY2U6IG5vcm1hbDsiPgoJCQoJCTxzY3JpcHQgdHlwZT0idGV4dC9qYXZhc2NyaXB0IiBpZD0icGx1dG91aXRlcm1pbmFsIj4KCQkJbGV0IHR4dCA9ICIbWzM0bRtbMW1leHBlY3RlZCByZXR1cm5zKjEwMDogG1syMm0bWzM5bVxuYXNzZXQgMSAgICAgOS4wMDBcbmFzc2V0IDIgICAgIDYuMDAwXG5cbhtbMzRtG1sxbWNvdmFyaWFuY2UgbWF0cml4KjEwMF4yOhtbMjJtG1szOW1cbiAgICAgICAgICBhc3NldCAxICAgYXNzZXQgMlxuYXNzZXQgMSAgIDI1Ni4wMDAgICAgOTYuMDAwXG5hc3NldCAyICAgIDk2LjAwMCAgIDE0NC4wMDBcblxuIgoKCQkJdmFyIGNvbnRhaW5lciA9IGh0bWxgCgkJCQk8cHJlCgkJCQkJY2xhc3M9IlBsdXRvVUlfdGVybWluYWwiCgkJCQkJc3R5bGU9IgoJCQkJCQltYXgtaGVpZ2h0OiAzMDBweDsKCQkJCQkJb3ZlcmZsb3c6IGF1dG87CgkJCQkJCXdoaXRlLXNwYWNlOiBwcmU7CgkJCQkJCWNvbG9yOiB3aGl0ZTsKCQkJCQkJYmFja2dyb3VuZC1jb2xvcjogYmxhY2s7CgkJCQkJCWJvcmRlci1yYWRpdXM6IDNweDsKCQkJCQkJbWFyZ2luLXRvcDogOHB4OwoJCQkJCQltYXJnaW4tYm90dG9tOiA4cHg7CgkJCQkJCXBhZGRpbmc6IDE1cHg7CgkJCQkJCWRpc3BsYXk6IGJsb2NrOwoJCQkJCSIKCQkJCT48L3ByZT4KCQkJYAoJCQl0cnkgewoJCQkJY29uc3QgeyBkZWZhdWx0OiBBbnNpVXAgfSA9IGF3YWl0IGltcG9ydCgiaHR0cHM6Ly9jZG4uanNkZWxpdnIubmV0L2doL0p1bGlhUGx1dG8vYW5zaV91cEB2NS4xLjAtZXM2L2Fuc2lfdXAuanMiKTsKCQkJCWNvbnRhaW5lci5pbm5lckhUTUwgPSBuZXcgQW5zaVVwKCkuYW5zaV90b19odG1sKHR4dCk7CgkJCX0gY2F0Y2goZSkgewoJCQkJY29uc29sZS5lcnJvcigiRmFpbGVkIHRvIGltcG9ydC9jYWxsIGFuc2l1cCEiLCBlKQoJCQkJY29udGFpbmVyLmlubmVyVGV4dCA9IHR4dAoJCQl9CgkJCXJldHVybiBjb250YWluZXIKCQk8L3NjcmlwdD4KCTwvZGl2PgqwcGVyc2lzdF9qc19zdGF0ZcKkbWltZal0ZXh0L2h0bWyybGFzdF9ydW5fdGltZXN0YW1wy0HYhwdxeJN1t2hhc19wbHV0b19ob29rX2ZlYXR1cmVzwqxyb290YXNzaWduZWXAp2NlbGxfaWTZJDMzNjliZTcxLTJhMTEtNGRjOC04ZDFiLWQyYjFkNzc0OWM1ZrlkZXBlbmRzX29uX2Rpc2FibGVkX2NlbGxzwqdydW50aW1lziCy3QS1cHVibGlzaGVkX29iamVjdF9rZXlzkKdlcnJvcmVkwtkkNWJhYTFhOWYtN2FkNS00YmZjLWI0NjgtOWUwYjQwNDM4NTQ4iaZxdWV1ZWTCpGxvZ3OQp3J1bm5pbmfCpm91dHB1dIakYm9kedmtPGRpdiBjbGFzcz0ibWFya2Rvd24iPjxwPjxzdHJvbmc+Tm93LCB3ZSBjYW4gY2FsY3VsYXRlIHRoZSBjdW11bGF0aXZlIHJldHVybiBvdmVyIHRoZSBwZXJpb2QgZnJvbSBKYW51YXJ5IDIwMDAgdG8gRGVjZW1iZXIgMjAyMCBmcm9tIGludmVzdGluZyAxIGluIEFBUEwuPC9zdHJvbmc+PC9wPgo8L2Rpdj6wcGVyc2lzdF9qc19zdGF0ZcKkbWltZal0ZXh0L2h0bWyybGFzdF9ydW5fdGltZXN0YW1wy0HYhwdkSLQ5t2hhc19wbHV0b19ob29rX2ZlYXR1cmVzwqxyb290YXNzaWduZWXAp2NlbGxfaWTZJDViYWExYTlmLTdhZDUtNGJmYy1iNDY4LTllMGI0MDQzODU0OLlkZXBlbmRzX29uX2Rpc2FibGVkX2NlbGxzwqdydW50aW1lzgAFLpC1cHVibGlzaGVkX29iamVjdF9rZXlzkKdlcnJvcmVkwtkkMmJkMTY3NGQtMjI1NC00NWE4LTlmMDItNWNhYTViZDBiZDFjiaZxdWV1ZWTCpGxvZ3OQp3J1bm5pbmfCpm91dHB1dIakYm9kedlzPGRpdiBjbGFzcz0ibWFya2Rvd24iPjxwPjxzdHJvbmc+TGV0JiMzOTtzIG5vdyBjcmVhdGUgYSBuZXcgZGF0YWZyYW0gd2l0aCB0aGUgcmV0dXJucyBmb3IgQUFQTC48L3N0cm9uZz48L3A+CjwvZGl2PrBwZXJzaXN0X2pzX3N0YXRlwqRtaW1lqXRleHQvaHRtbLJsYXN0X3J1bl90aW1lc3RhbXDLQdiHB2RAk3W3aGFzX3BsdXRvX2hvb2tfZmVhdHVyZXPCrHJvb3Rhc3NpZ25lZcCnY2VsbF9pZNkkMmJkMTY3NGQtMjI1NC00NWE4LTlmMDItNWNhYTViZDBiZDFjuWRlcGVuZHNfb25fZGlzYWJsZWRfY2VsbHPCp3J1bnRpbWXOAAOIsLVwdWJsaXNoZWRfb2JqZWN0X2tleXOQp2Vycm9yZWTC2SRkMzAwYmU2NS1mNDk0LTQxODEtOTkyNC1lNjljYzZjMDRmMDmJpnF1ZXVlZMKkbG9nc5CncnVubmluZ8Kmb3V0cHV0hqRib2R52SlHZXRMb2dSeCAoZ2VuZXJpYyBmdW5jdGlvbiB3aXRoIDEgbWV0aG9kKbBwZXJzaXN0X2pzX3N0YXRlwqRtaW1lqnRleHQvcGxhaW6ybGFzdF9ydW5fdGltZXN0YW1wy0HYhweEEEGJt2hhc19wbHV0b19ob29rX2ZlYXR1cmVzwqxyb290YXNzaWduZWXAp2NlbGxfaWTZJGQzMDBiZTY1LWY0OTQtNDE4MS05OTI0LWU2OWNjNmMwNGYwOblkZXBlbmRzX29uX2Rpc2FibGVkX2NlbGxzwqdydW50aW1lzgAKWHC1cHVibGlzaGVkX29iamVjdF9rZXlzkKdlcnJvcmVkwtkkNDU4Njg4OTQtYTMxNy00MzcwLTk2MzEtNmVmM2MzMTY2MWUziaZxdWV1ZWTCpGxvZ3OQp3J1bm5pbmfCpm91dHB1dIakYm9kedloPGRpdiBjbGFzcz0ibWFya2Rvd24iPjxwPjxzdHJvbmc+TmV4dCwgbGV0JiMzOTtzIGNhbGN1bGF0ZSBtb250aGx5IHJldHVybnMgZm9yIEFBUEwvPC9zdHJvbmc+PC9wPgo8L2Rpdj6wcGVyc2lzdF9qc19zdGF0ZcKkbWltZal0ZXh0L2h0bWyybGFzdF9ydW5fdGltZXN0YW1wy0HYhwdkQEGJt2hhc19wbHV0b19ob29rX2ZlYXR1cmVzwqxyb290YXNzaWduZWXAp2NlbGxfaWTZJDQ1ODY4ODk0LWEzMTctNDM3MC05NjMxLTZlZjNjMzE2NjFlM7lkZXBlbmRzX29uX2Rpc2FibGVkX2NlbGxzwqdydW50aW1lzgADSWi1cHVibGlzaGVkX29iamVjdF9rZXlzkKdlcnJvcmVkwtkkNmI3MjBhZGUtNWU0Yy00ZjU4LThmY2QtZjYwOWRmMjlkZjdiiaZxdWV1ZWTCpGxvZ3OQp3J1bm5pbmfCpm91dHB1dIakYm9kedlpPGRpdiBjbGFzcz0ibWFya2Rvd24iPjxwPjxzdHJvbmc+TGV0JiMzOTtzIHJlbW92ZSB0aGlzIGR1cGxpY2F0ZSBhbmQgZ2V0IHVuaXF1ZSByb3dzLjwvc3Ryb25nPjwvcD4KPC9kaXY+sHBlcnNpc3RfanNfc3RhdGXCpG1pbWWpdGV4dC9odG1ssmxhc3RfcnVuX3RpbWVzdGFtcMtB2IcHZEAgxbdoYXNfcGx1dG9faG9va19mZWF0dXJlc8Kscm9vdGFzc2lnbmVlwKdjZWxsX2lk2SQ2YjcyMGFkZS01ZTRjLTRmNTgtOGZjZC1mNjA5ZGYyOWRmN2K5ZGVwZW5kc19vbl9kaXNhYmxlZF9jZWxsc8KncnVudGltZc4ABU/EtXB1Ymxpc2hlZF9vYmplY3Rfa2V5c5CnZXJyb3JlZMLZJDliODE2MjM2LWY5ZGUtNGFhZC1hZWEwLWI1ZjhmYmZjNmIxMYmmcXVldWVkwqRsb2dzkKdydW5uaW5nwqZvdXRwdXSGpGJvZHnZJkdldFJ4IChnZW5lcmljIGZ1bmN0aW9uIHdpdGggMSBtZXRob2QpsHBlcnNpc3RfanNfc3RhdGXCpG1pbWWqdGV4dC9wbGFpbrJsYXN0X3J1bl90aW1lc3RhbXDLQdiHB4QKHKy3aGFzX3BsdXRvX2hvb2tfZmVhdHVyZXPCrHJvb3Rhc3NpZ25lZcCnY2VsbF9pZNkkOWI4MTYyMzYtZjlkZS00YWFkLWFlYTAtYjVmOGZiZmM2YjExuWRlcGVuZHNfb25fZGlzYWJsZWRfY2VsbHPCp3J1bnRpbWXOAAp1WLVwdWJsaXNoZWRfb2JqZWN0X2tleXOQp2Vycm9yZWTC2SQwYzgyMTMwOC00NWNhLTQzMTctODBiMy05ZTg3YzY4NDA0NjWJpnF1ZXVlZMKkbG9nc5CncnVubmluZ8Kmb3V0cHV0hqRib2R5g6Ryb3dzkZIBkZKnMS40ODU0NKp0ZXh0L3BsYWluqG9iamVjdGlksDhmNzcwYmIyOTU3Yjg3NjGmc2NoZW1hgqVuYW1lc5GjVl9UpXR5cGVzkadGbG9hdDY0sHBlcnNpc3RfanNfc3RhdGXCpG1pbWXZImFwcGxpY2F0aW9uL3ZuZC5wbHV0by50YWJsZStvYmplY3SybGFzdF9ydW5fdGltZXN0YW1wy0HYhweEu4Uft2hhc19wbHV0b19ob29rX2ZlYXR1cmVzwqxyb290YXNzaWduZWXAp2NlbGxfaWTZJDBjODIxMzA4LTQ1Y2EtNDMxNy04MGIzLTllODdjNjg0MDQ2NblkZXBlbmRzX29uX2Rpc2FibGVkX2NlbGxzwqdydW50aW1lzgmCTNy1cHVibGlzaGVkX29iamVjdF9rZXlzkKdlcnJvcmVkwtkkZmEwNWIxMzAtNGFiNS00OWVhLThhOGMtZjZkOWZjZmQxNjU2iaZxdWV1ZWTCpGxvZ3OQp3J1bm5pbmfCpm91dHB1dIakYm9kedoFcwk8ZGl2IHN0eWxlPSJkaXNwbGF5OiBpbmxpbmU7IHdoaXRlLXNwYWNlOiBub3JtYWw7Ij4KCQkKCQk8c2NyaXB0IHR5cGU9InRleHQvamF2YXNjcmlwdCIgaWQ9InBsdXRvdWl0ZXJtaW5hbCI+CgkJCWxldCB0eHQgPSAiG1szM20bWzFtZXhwZWN0ZWQgcmV0dXJucyoxMDA6IBtbMjJtG1szOW1cbkFBUEwgICAgIDEuNTg2XG5CQSAgICAgICAxLjI0OVxuRElTICAgICAgMS4wMTRcbkdTICAgICAgIDAuOTQ4XG5KTkogICAgICAwLjY0MVxuXG4bWzMzbRtbMW1jb3ZhcmlhbmNlIG1hdHJpeCoxMDBeMjobWzIybRtbMzltXG4gICAgICAgICAgQUFQTCAgICAgICAgQkEgICAgICAgRElTICAgICAgICBHUyAgICAgICBKTkpcbkFBUEwgICAxOTYuMzQ4ICAgIDEzLjc2NyAgICAyOC41OTAgICAgNDAuMjUzICAgIC01LjE4OFxuQkEgICAgICAxMy43NjcgICAgODUuNTIxICAgIDMzLjI1MCAgICAzMC42MzcgICAgMTMuMzIzXG5ESVMgICAgIDI4LjU5MCAgICAzMy4yNTAgICAgNTQuMDkwICAgIDMzLjI2NSAgICAxMy4yMzJcbkdTICAgICAgNDAuMjUzICAgIDMwLjYzNyAgICAzMy4yNjUgICAgODYuNTM3ICAgIDEyLjEwNlxuSk5KICAgICAtNS4xODggICAgMTMuMzIzICAgIDEzLjIzMiAgICAxMi4xMDYgICAgMzIuMzQ5XG5cbkV4cGVjdGVkIHBvcnRmb2xpbyByZXR1cm46ICAgICAgMC4wMTFcblBvcnRmb2xpbyB2YXJpYW5jZSBhbmQgc3RkOiAgICAgMC4wMDQgICAgIDAuMDU5XG4iCgoJCQl2YXIgY29udGFpbmVyID0gaHRtbGAKCQkJCTxwcmUKCQkJCQljbGFzcz0iUGx1dG9VSV90ZXJtaW5hbCIKCQkJCQlzdHlsZT0iCgkJCQkJCW1heC1oZWlnaHQ6IDMwMHB4OwoJCQkJCQlvdmVyZmxvdzogYXV0bzsKCQkJCQkJd2hpdGUtc3BhY2U6IHByZTsKCQkJCQkJY29sb3I6IHdoaXRlOwoJCQkJCQliYWNrZ3JvdW5kLWNvbG9yOiBibGFjazsKCQkJCQkJYm9yZGVyLXJhZGl1czogM3B4OwoJCQkJCQltYXJnaW4tdG9wOiA4cHg7CgkJCQkJCW1hcmdpbi1ib3R0b206IDhweDsKCQkJCQkJcGFkZGluZzogMTVweDsKCQkJCQkJZGlzcGxheTogYmxvY2s7CgkJCQkJIgoJCQkJPjwvcHJlPgoJCQlgCgkJCXRyeSB7CgkJCQljb25zdCB7IGRlZmF1bHQ6IEFuc2lVcCB9ID0gYXdhaXQgaW1wb3J0KCJodHRwczovL2Nkbi5qc2RlbGl2ci5uZXQvZ2gvSnVsaWFQbHV0by9hbnNpX3VwQHY1LjEuMC1lczYvYW5zaV91cC5qcyIpOwoJCQkJY29udGFpbmVyLmlubmVySFRNTCA9IG5ldyBBbnNpVXAoKS5hbnNpX3RvX2h0bWwodHh0KTsKCQkJfSBjYXRjaChlKSB7CgkJCQljb25zb2xlLmVycm9yKCJGYWlsZWQgdG8gaW1wb3J0L2NhbGwgYW5zaXVwISIsIGUpCgkJCQljb250YWluZXIuaW5uZXJUZXh0ID0gdHh0CgkJCX0KCQkJcmV0dXJuIGNvbnRhaW5lcgoJCTwvc2NyaXB0PgoJPC9kaXY+CrBwZXJzaXN0X2pzX3N0YXRlwqRtaW1lqXRleHQvaHRtbLJsYXN0X3J1bl90aW1lc3RhbXDLQdiHB4mYAAC3aGFzX3BsdXRvX2hvb2tfZmVhdHVyZXPCrHJvb3Rhc3NpZ25lZcCnY2VsbF9pZNkkZmEwNWIxMzAtNGFiNS00OWVhLThhOGMtZjZkOWZjZmQxNjU2uWRlcGVuZHNfb25fZGlzYWJsZWRfY2VsbHPCp3J1bnRpbWXORSCATLVwdWJsaXNoZWRfb2JqZWN0X2tleXOQp2Vycm9yZWTC2SQ2NTcyYmQyZi03NmU4LTQ3MzUtOWRmZi1kMzcxZmU3ZjY5YmSJpnF1ZXVlZMKkbG9nc5CncnVubmluZ8Kmb3V0cHV0hqRib2R52Wg8ZGl2IGNsYXNzPSJtYXJrZG93biI+PHA+PHN0cm9uZz5OZXh0LCBsZXQmIzM5O3MgcGljayBhIHZlY3RvciBvZiBwb3J0Zm9saW8gd2VpZ2h0cy48L3N0cm9uZz48L3A+CjwvZGl2PrBwZXJzaXN0X2pzX3N0YXRlwqRtaW1lqXRleHQvaHRtbLJsYXN0X3J1bl90aW1lc3RhbXDLQdiHB2RKXjW3aGFzX3BsdXRvX2hvb2tfZmVhdHVyZXPCrHJvb3Rhc3NpZ25lZcCnY2VsbF9pZNkkNjU3MmJkMmYtNzZlOC00NzM1LTlkZmYtZDM3MWZlN2Y2OWJkuWRlcGVuZHNfb25fZGlzYWJsZWRfY2VsbHPCp3J1bnRpbWXOAAPCgLVwdWJsaXNoZWRfb2JqZWN0X2tleXOQp2Vycm9yZWTC2SRjZGRhNTE4My00NmM2LTQyODMtYTY2Zi0xNjhlZDU3OTBhNzeJpnF1ZXVlZMKkbG9nc5CncnVubmluZ8Kmb3V0cHV0hqRib2R5g6Ryb3dznJIBk5KqMjAwMC0wMi0yOap0ZXh0L3BsYWlukqYiQUFQTCKqdGV4dC9wbGFpbpKoMC4xMDQ4MTmqdGV4dC9wbGFpbpICk5KqMjAwMC0wMy0zMap0ZXh0L3BsYWlukqYiQUFQTCKqdGV4dC9wbGFpbpKoMC4xODQ4NDKqdGV4dC9wbGFpbpIDk5KqMjAwMC0wNC0yOKp0ZXh0L3BsYWlukqYiQUFQTCKqdGV4dC9wbGFpbpKqLTAuMDg2NTE2M6p0ZXh0L3BsYWlukgSTkqoyMDAwLTA1LTMxqnRleHQvcGxhaW6SpiJBQVBMIqp0ZXh0L3BsYWlukqktMC4zMjI5MjKqdGV4dC9wbGFpbpIFk5KqMjAwMC0wNi0zMKp0ZXh0L3BsYWlukqYiQUFQTCKqdGV4dC9wbGFpbpKpLTAuMzc2NDg4qnRleHQvcGxhaW6SBpOSqjIwMDAtMDctMzGqdGV4dC9wbGFpbpKmIkFBUEwiqnRleHQvcGxhaW6Sqi0wLjAyOTgzMjmqdGV4dC9wbGFpbpIHk5KqMjAwMC0wOC0zMap0ZXh0L3BsYWlukqYiQUFQTCKqdGV4dC9wbGFpbpKoMC4xOTkyNjKqdGV4dC9wbGFpbpIIk5KqMjAwMC0wOS0yOap0ZXh0L3BsYWlukqYiQUFQTCKqdGV4dC9wbGFpbpKpLTAuNTc3NDM2qnRleHQvcGxhaW6SCZOSqjIwMDAtMTAtMzGqdGV4dC9wbGFpbpKmIkFBUEwiqnRleHQvcGxhaW6SqS0wLjI0MDI5Map0ZXh0L3BsYWlukgqTkqoyMDAwLTExLTMwqnRleHQvcGxhaW6SpiJBQVBMIqp0ZXh0L3BsYWlukqgtMC4xNTY1Nap0ZXh0L3BsYWlupG1vcmWSzQXik5KqMjAyMC0xMi0zMap0ZXh0L3BsYWlukqkiUG9ydGZSeCKqdGV4dC9wbGFpbpKoMC4xMTgyOTKqdGV4dC9wbGFpbqhvYmplY3RpZLAxYWY0OTU1YzE3NDU0Yjg1pnNjaGVtYYKlbmFtZXOTpGRhdGWmVElDS0VSolJ4pXR5cGVzk6REYXRlplN0cmluZ6hGbG9hdDY0P7BwZXJzaXN0X2pzX3N0YXRlwqRtaW1l2SJhcHBsaWNhdGlvbi92bmQucGx1dG8udGFibGUrb2JqZWN0smxhc3RfcnVuX3RpbWVzdGFtcMtB2IcHh0iDErdoYXNfcGx1dG9faG9va19mZWF0dXJlc8Kscm9vdGFzc2lnbmVlwKdjZWxsX2lk2SRjZGRhNTE4My00NmM2LTQyODMtYTY2Zi0xNjhlZDU3OTBhNze5ZGVwZW5kc19vbl9kaXNhYmxlZF9jZWxsc8KncnVudGltZc5sY2qstXB1Ymxpc2hlZF9vYmplY3Rfa2V5c5CnZXJyb3JlZMLZJGMxYTVmZjBlLWNlNWUtNDM5MC1iZWQ3LWFmNWJlMTQwYTE0NYmmcXVldWVkwqRsb2dzkKdydW5uaW5nwqZvdXRwdXSGpGJvZHnaA+EJPGRpdiBzdHlsZT0iZGlzcGxheTogaW5saW5lOyB3aGl0ZS1zcGFjZTogbm9ybWFsOyI+CgkJCgkJPHNjcmlwdCB0eXBlPSJ0ZXh0L2phdmFzY3JpcHQiIGlkPSJwbHV0b3VpdGVybWluYWwiPgoJCQlsZXQgdHh0ID0gInBlcmlvZCAgICAgICAgIFIgICAgICAgICBWICAgICAgIGxuViAgICBFeHBMblZcbjEgICAgICAgICAgMC4yMDAgICAgIDEuMjAwICAgICAwLjE4MiAgICAgMS4yMDBcbjIgICAgICAgICAtMC4zNTAgICAgIDAuNzgwICAgIC0wLjI0OCAgICAgMC43ODBcbjMgICAgICAgICAgMC4yNTAgICAgIDAuOTc1ICAgIC0wLjAyNSAgICAgMC45NzVcblxuIgoKCQkJdmFyIGNvbnRhaW5lciA9IGh0bWxgCgkJCQk8cHJlCgkJCQkJY2xhc3M9IlBsdXRvVUlfdGVybWluYWwiCgkJCQkJc3R5bGU9IgoJCQkJCQltYXgtaGVpZ2h0OiAzMDBweDsKCQkJCQkJb3ZlcmZsb3c6IGF1dG87CgkJCQkJCXdoaXRlLXNwYWNlOiBwcmU7CgkJCQkJCWNvbG9yOiB3aGl0ZTsKCQkJCQkJYmFja2dyb3VuZC1jb2xvcjogYmxhY2s7CgkJCQkJCWJvcmRlci1yYWRpdXM6IDNweDsKCQkJCQkJbWFyZ2luLXRvcDogOHB4OwoJCQkJCQltYXJnaW4tYm90dG9tOiA4cHg7CgkJCQkJCXBhZGRpbmc6IDE1cHg7CgkJCQkJCWRpc3BsYXk6IGJsb2NrOwoJCQkJCSIKCQkJCT48L3ByZT4KCQkJYAoJCQl0cnkgewoJCQkJY29uc3QgeyBkZWZhdWx0OiBBbnNpVXAgfSA9IGF3YWl0IGltcG9ydCgiaHR0cHM6Ly9jZG4uanNkZWxpdnIubmV0L2doL0p1bGlhUGx1dG8vYW5zaV91cEB2NS4xLjAtZXM2L2Fuc2lfdXAuanMiKTsKCQkJCWNvbnRhaW5lci5pbm5lckhUTUwgPSBuZXcgQW5zaVVwKCkuYW5zaV90b19odG1sKHR4dCk7CgkJCX0gY2F0Y2goZSkgewoJCQkJY29uc29sZS5lcnJvcigiRmFpbGVkIHRvIGltcG9ydC9jYWxsIGFuc2l1cCEiLCBlKQoJCQkJY29udGFpbmVyLmlubmVyVGV4dCA9IHR4dAoJCQl9CgkJCXJldHVybiBjb250YWluZXIKCQk8L3NjcmlwdD4KCTwvZGl2PgqwcGVyc2lzdF9qc19zdGF0ZcKkbWltZal0ZXh0L2h0bWyybGFzdF9ydW5fdGltZXN0YW1wy0HYhwdxHWBCt2hhc19wbHV0b19ob29rX2ZlYXR1cmVzwqxyb290YXNzaWduZWXAp2NlbGxfaWTZJGMxYTVmZjBlLWNlNWUtNDM5MC1iZWQ3LWFmNWJlMTQwYTE0NblkZXBlbmRzX29uX2Rpc2FibGVkX2NlbGxzwqdydW50aW1lzjnlfyC1cHVibGlzaGVkX29iamVjdF9rZXlzkKdlcnJvcmVkwtkkMGVlZmQwYWYtZjVkZC00Yjg3LTliZTAtMzkxZDg2Y2Y4YmY5iaZxdWV1ZWTCpGxvZ3OQp3J1bm5pbmfCpm91dHB1dIakYm9kednmPGRpdiBjbGFzcz0ibWFya2Rvd24iPjxwPjxzdHJvbmc+VG8gZm9ybSBhIHBvcnRmb2xpbywgaXQgaXMgbW9yZSBjb252ZW5pZW50IHRvIHdvcmsgd2l0aCB0aGUgZGF0YSBpbiA8ZW0+d2lkZSBmb3JtYXQ8L2VtPi4gVGhpcyBtZWFucyB0aGF0IHdlIHdhbnQgdG8gcHV0IHRoZSBmaXZlIHN0b2NrcyBpbiBjb2x1bW5zICYjNDA7b25lIGZvciBlYWNoIHN0b2NrJiM0MTsuPC9zdHJvbmc+PC9wPgo8L2Rpdj6wcGVyc2lzdF9qc19zdGF0ZcKkbWltZal0ZXh0L2h0bWyybGFzdF9ydW5fdGltZXN0YW1wy0HYhwdkSk3Tt2hhc19wbHV0b19ob29rX2ZlYXR1cmVzwqxyb290YXNzaWduZWXAp2NlbGxfaWTZJDBlZWZkMGFmLWY1ZGQtNGI4Ny05YmUwLTM5MWQ4NmNmOGJmOblkZXBlbmRzX29uX2Rpc2FibGVkX2NlbGxzwqdydW50aW1lzgAsTKC1cHVibGlzaGVkX29iamVjdF9rZXlzkKdlcnJvcmVkwtkkMGNmODVkYTItYTUzOC00MDJkLTk3ODUtMDk0NDI1MjYwYmRiiaZxdWV1ZWTCpGxvZ3OQp3J1bm5pbmfCpm91dHB1dIakYm9keYOkcm93c5ySAZaSqjIwMDAtMDEtMzGqdGV4dC9wbGFpbpKmIkFBUEwiqnRleHQvcGxhaW6SoTeqdGV4dC9wbGFpbpKlMTQ1OTOqdGV4dC9wbGFpbpKmMTAzLjc1qnRleHQvcGxhaW6Sp21pc3NpbmeqdGV4dC9wbGFpbpIClpKqMjAwMC0wMi0yOap0ZXh0L3BsYWlukqYiQUFQTCKqdGV4dC9wbGFpbpKhN6p0ZXh0L3BsYWlukqUxNDU5M6p0ZXh0L3BsYWlukqcxMTQuNjI1qnRleHQvcGxhaW6Sp21pc3NpbmeqdGV4dC9wbGFpbpIDlpKqMjAwMC0wMy0zMap0ZXh0L3BsYWlukqYiQUFQTCKqdGV4dC9wbGFpbpKhN6p0ZXh0L3BsYWlukqUxNDU5M6p0ZXh0L3BsYWlukqcxMzUuODEyqnRleHQvcGxhaW6Sp21pc3NpbmeqdGV4dC9wbGFpbpIElpKqMjAwMC0wNC0yOKp0ZXh0L3BsYWlukqYiQUFQTCKqdGV4dC9wbGFpbpKhN6p0ZXh0L3BsYWlukqUxNDU5M6p0ZXh0L3BsYWlukqcxMjQuMDYyqnRleHQvcGxhaW6Sp21pc3NpbmeqdGV4dC9wbGFpbpIFlpKqMjAwMC0wNS0zMap0ZXh0L3BsYWlukqYiQUFQTCKqdGV4dC9wbGFpbpKhN6p0ZXh0L3BsYWlukqUxNDU5M6p0ZXh0L3BsYWlukqQ4NC4wqnRleHQvcGxhaW6Sp21pc3NpbmeqdGV4dC9wbGFpbpIGlpKqMjAwMC0wNi0zMKp0ZXh0L3BsYWlukqYiQUFQTCKqdGV4dC9wbGFpbpKhN6p0ZXh0L3BsYWlukqUxNDU5M6p0ZXh0L3BsYWlukqY1Mi4zNzWqdGV4dC9wbGFpbpKjMC4wqnRleHQvcGxhaW6SB5aSqjIwMDAtMDctMzGqdGV4dC9wbGFpbpKmIkFBUEwiqnRleHQvcGxhaW6SoTeqdGV4dC9wbGFpbpKlMTQ1OTOqdGV4dC9wbGFpbpKnNTAuODEyNap0ZXh0L3BsYWlukqdtaXNzaW5nqnRleHQvcGxhaW6SCJaSqjIwMDAtMDgtMzGqdGV4dC9wbGFpbpKmIkFBUEwiqnRleHQvcGxhaW6SoTeqdGV4dC9wbGFpbpKlMTQ1OTOqdGV4dC9wbGFpbpKnNjAuOTM3Nap0ZXh0L3BsYWlukqdtaXNzaW5nqnRleHQvcGxhaW6SCZaSqjIwMDAtMDktMjmqdGV4dC9wbGFpbpKmIkFBUEwiqnRleHQvcGxhaW6SoTeqdGV4dC9wbGFpbpKlMTQ1OTOqdGV4dC9wbGFpbpKlMjUuNzWqdGV4dC9wbGFpbpKnbWlzc2luZ6p0ZXh0L3BsYWlukgqWkqoyMDAwLTEwLTMxqnRleHQvcGxhaW6SpiJBQVBMIqp0ZXh0L3BsYWlukqE3qnRleHQvcGxhaW6SpTE0NTkzqnRleHQvcGxhaW6SpzE5LjU2MjWqdGV4dC9wbGFpbpKnbWlzc2luZ6p0ZXh0L3BsYWlupG1vcmWSzPyWkqoyMDIwLTEyLTMxqnRleHQvcGxhaW6SpiJBQVBMIqp0ZXh0L3BsYWlukqE3qnRleHQvcGxhaW6SpTE0NTkzqnRleHQvcGxhaW6SpjEzMi42Oap0ZXh0L3BsYWlukqdtaXNzaW5nqnRleHQvcGxhaW6ob2JqZWN0aWSwODJjNDgyZjBkZWJmM2NiM6ZzY2hlbWGCpW5hbWVzlqRkYXRlplRJQ0tFUqZQRVJNQ0+mUEVSTU5Po1BSQ6ZESVZBTVSldHlwZXOWpERhdGWoU3RyaW5nNz+lSW50NjSlSW50NjSoRmxvYXQ2ND+oRmxvYXQ2ND+wcGVyc2lzdF9qc19zdGF0ZcKkbWltZdkiYXBwbGljYXRpb24vdm5kLnBsdXRvLnRhYmxlK29iamVjdLJsYXN0X3J1bl90aW1lc3RhbXDLQdiHB4NJeNW3aGFzX3BsdXRvX2hvb2tfZmVhdHVyZXPCrHJvb3Rhc3NpZ25lZcCnY2VsbF9pZNkkMGNmODVkYTItYTUzOC00MDJkLTk3ODUtMDk0NDI1MjYwYmRiuWRlcGVuZHNfb25fZGlzYWJsZWRfY2VsbHPCp3J1bnRpbWXOL+3zCLVwdWJsaXNoZWRfb2JqZWN0X2tleXOQp2Vycm9yZWTC2SQ0NTYyMTFhMS0zODI4LTQ1OGMtYTU5Ny1jYjM1YTg4YzM1Y2GJpnF1ZXVlZMKkbG9nc5CncnVubmluZ8Kmb3V0cHV0hqRib2R52Vc8ZGl2IGNsYXNzPSJtYXJrZG93biI+PHA+PHN0cm9uZz5Ib3cgY2FuIHdlIGRlYWwgd2l0aCBtaXNzaW5nIGRhdGE/PC9zdHJvbmc+PC9wPgo8L2Rpdj6wcGVyc2lzdF9qc19zdGF0ZcKkbWltZal0ZXh0L2h0bWyybGFzdF9ydW5fdGltZXN0YW1wy0HYhwdkPeNUt2hhc19wbHV0b19ob29rX2ZlYXR1cmVzwqxyb290YXNzaWduZWXAp2NlbGxfaWTZJDQ1NjIxMWExLTM4MjgtNDU4Yy1hNTk3LWNiMzVhODhjMzVjYblkZXBlbmRzX29uX2Rpc2FibGVkX2NlbGxzwqdydW50aW1lzgADQfy1cHVibGlzaGVkX29iamVjdF9rZXlzkKdlcnJvcmVkwtkkNDQ2ZTBkYjEtODEwNy00NzI0LWI3NzQtNTYxYzVkMzdmODdhiaZxdWV1ZWTCpGxvZ3OQp3J1bm5pbmfCpm91dHB1dIakYm9keYOkcm93c5ySAZaSqjIwMDAtMDEtMzGqdGV4dC9wbGFpbpKmIkFBUEwiqnRleHQvcGxhaW6SoTeqdGV4dC9wbGFpbpKlMTQ1OTOqdGV4dC9wbGFpbpKmMTAzLjc1qnRleHQvcGxhaW6Sp21pc3NpbmeqdGV4dC9wbGFpbpIClpKqMjAwMC0wMi0yOap0ZXh0L3BsYWlukqYiQUFQTCKqdGV4dC9wbGFpbpKhN6p0ZXh0L3BsYWlukqUxNDU5M6p0ZXh0L3BsYWlukqcxMTQuNjI1qnRleHQvcGxhaW6Sp21pc3NpbmeqdGV4dC9wbGFpbpIDlpKqMjAwMC0wMy0zMap0ZXh0L3BsYWlukqYiQUFQTCKqdGV4dC9wbGFpbpKhN6p0ZXh0L3BsYWlukqUxNDU5M6p0ZXh0L3BsYWlukqcxMzUuODEyqnRleHQvcGxhaW6Sp21pc3NpbmeqdGV4dC9wbGFpbpIElpKqMjAwMC0wNC0yOKp0ZXh0L3BsYWlukqYiQUFQTCKqdGV4dC9wbGFpbpKhN6p0ZXh0L3BsYWlukqUxNDU5M6p0ZXh0L3BsYWlukqcxMjQuMDYyqnRleHQvcGxhaW6Sp21pc3NpbmeqdGV4dC9wbGFpbpIFlpKqMjAwMC0wNS0zMap0ZXh0L3BsYWlukqYiQUFQTCKqdGV4dC9wbGFpbpKhN6p0ZXh0L3BsYWlukqUxNDU5M6p0ZXh0L3BsYWlukqQ4NC4wqnRleHQvcGxhaW6Sp21pc3NpbmeqdGV4dC9wbGFpbpIGlpKqMjAwMC0wNi0zMKp0ZXh0L3BsYWlukqYiQUFQTCKqdGV4dC9wbGFpbpKhN6p0ZXh0L3BsYWlukqUxNDU5M6p0ZXh0L3BsYWlukqY1Mi4zNzWqdGV4dC9wbGFpbpKjMC4wqnRleHQvcGxhaW6SB5aSqjIwMDAtMDctMzGqdGV4dC9wbGFpbpKmIkFBUEwiqnRleHQvcGxhaW6SoTeqdGV4dC9wbGFpbpKlMTQ1OTOqdGV4dC9wbGFpbpKnNTAuODEyNap0ZXh0L3BsYWlukqdtaXNzaW5nqnRleHQvcGxhaW6SCJaSqjIwMDAtMDgtMzGqdGV4dC9wbGFpbpKmIkFBUEwiqnRleHQvcGxhaW6SoTeqdGV4dC9wbGFpbpKlMTQ1OTOqdGV4dC9wbGFpbpKnNjAuOTM3Nap0ZXh0L3BsYWlukqdtaXNzaW5nqnRleHQvcGxhaW6SCZaSqjIwMDAtMDktMjmqdGV4dC9wbGFpbpKmIkFBUEwiqnRleHQvcGxhaW6SoTeqdGV4dC9wbGFpbpKlMTQ1OTOqdGV4dC9wbGFpbpKlMjUuNzWqdGV4dC9wbGFpbpKnbWlzc2luZ6p0ZXh0L3BsYWlukgqWkqoyMDAwLTEwLTMxqnRleHQvcGxhaW6SpiJBQVBMIqp0ZXh0L3BsYWlukqE3qnRleHQvcGxhaW6SpTE0NTkzqnRleHQvcGxhaW6SpzE5LjU2MjWqdGV4dC9wbGFpbpKnbWlzc2luZ6p0ZXh0L3BsYWlupG1vcmWSzPyWkqoyMDIwLTEyLTMxqnRleHQvcGxhaW6SpiJBQVBMIqp0ZXh0L3BsYWlukqE3qnRleHQvcGxhaW6SpTE0NTkzqnRleHQvcGxhaW6SpjEzMi42Oap0ZXh0L3BsYWlukqdtaXNzaW5nqnRleHQvcGxhaW6ob2JqZWN0aWSwNmQ4YmM5OTk0ODM4OTcxMaZzY2hlbWGCpW5hbWVzlqRkYXRlplRJQ0tFUqZQRVJNQ0+mUEVSTU5Po1BSQ6ZESVZBTVSldHlwZXOWpERhdGWoU3RyaW5nNz+lSW50NjSlSW50NjSoRmxvYXQ2ND+oRmxvYXQ2ND+wcGVyc2lzdF9qc19zdGF0ZcKkbWltZdkiYXBwbGljYXRpb24vdm5kLnBsdXRvLnRhYmxlK29iamVjdLJsYXN0X3J1bl90aW1lc3RhbXDLQdiHB4OoMSe3aGFzX3BsdXRvX2hvb2tfZmVhdHVyZXPCrHJvb3Rhc3NpZ25lZcCnY2VsbF9pZNkkNDQ2ZTBkYjEtODEwNy00NzI0LWI3NzQtNTYxYzVkMzdmODdhuWRlcGVuZHNfb25fZGlzYWJsZWRfY2VsbHPCp3J1bnRpbWXOK/PcLLVwdWJsaXNoZWRfb2JqZWN0X2tleXOQp2Vycm9yZWTC2SQ3YjY2Njk1MS1iMzAzLTQxMDAtOGRkMi1mZWI4ZTJkMjJiMTSJpnF1ZXVlZMKkbG9nc5CncnVubmluZ8Kmb3V0cHV0hqRib2R52cA8ZGl2IGNsYXNzPSJtYXJrZG93biI+PHA+PHN0cm9uZz5UbyBkbyB0aGlzLCB3ZSBuZWVkIHRvIGFkZCB0aGUgbGFnZ2VkIHByaWNlLjwvc3Ryb25nPjwvcD4KPGJsb2NrcXVvdGU+CjxwPlRoZSA8Y29kZT5TaGlmdGVkQXJyYXlzPC9jb2RlPiBwYWNrYWdlIGFsbG93cyB1cyB0byBkbyB0aGlzLjwvcD4KPC9ibG9ja3F1b3RlPgo8L2Rpdj6wcGVyc2lzdF9qc19zdGF0ZcKkbWltZal0ZXh0L2h0bWyybGFzdF9ydW5fdGltZXN0YW1wy0HYhwdkQGJOt2hhc19wbHV0b19ob29rX2ZlYXR1cmVzwqxyb290YXNzaWduZWXAp2NlbGxfaWTZJDdiNjY2OTUxLWIzMDMtNDEwMC04ZGQyLWZlYjhlMmQyMmIxNLlkZXBlbmRzX29uX2Rpc2FibGVkX2NlbGxzwqdydW50aW1lzgAH36C1cHVibGlzaGVkX29iamVjdF9rZXlzkKdlcnJvcmVkwtkkNmEyNWM4OTgtNTRiMy00YWZjLWI3NzEtZTEzYzdjZGE2NmViiaZxdWV1ZWTCpGxvZ3OQp3J1bm5pbmfCpm91dHB1dIakYm9kedk6PGRpdiBjbGFzcz0ibWFya2Rvd24iPjxoND5BcHBsZSAmIzQwO0FBUEwmIzQxOzwvaDQ+CjwvZGl2PrBwZXJzaXN0X2pzX3N0YXRlwqRtaW1lqXRleHQvaHRtbLJsYXN0X3J1bl90aW1lc3RhbXDLQdiHB2Q90vK3aGFzX3BsdXRvX2hvb2tfZmVhdHVyZXPCrHJvb3Rhc3NpZ25lZcCnY2VsbF9pZNkkNmEyNWM4OTgtNTRiMy00YWZjLWI3NzEtZTEzYzdjZGE2NmViuWRlcGVuZHNfb25fZGlzYWJsZWRfY2VsbHPCp3J1bnRpbWXOAAJH/LVwdWJsaXNoZWRfb2JqZWN0X2tleXOQp2Vycm9yZWTC2SRhNjVmYTBhZS0xY2ViLTQ1MWUtYWIzNy0wOGMwZDIzYTUwOGWJpnF1ZXVlZMKkbG9nc5CncnVubmluZ8Kmb3V0cHV0hqRib2R52YY8ZGl2IGNsYXNzPSJtYXJrZG93biI+PHA+PHN0cm9uZz5OZXh0LCBsZXQmIzM5O3MgY29udmVydCB0aGUgPGNvZGU+OmRhdGU8L2NvZGU+IGNvbHVtbiB0byBhIHR5cGUgPGNvZGU+RGF0ZTwvY29kZT48L3N0cm9uZz48L3A+CjwvZGl2PrBwZXJzaXN0X2pzX3N0YXRlwqRtaW1lqXRleHQvaHRtbLJsYXN0X3J1bl90aW1lc3RhbXDLQdiHB2RAAAC3aGFzX3BsdXRvX2hvb2tfZmVhdHVyZXPCrHJvb3Rhc3NpZ25lZcCnY2VsbF9pZNkkYTY1ZmEwYWUtMWNlYi00NTFlLWFiMzctMDhjMGQyM2E1MDhluWRlcGVuZHNfb25fZGlzYWJsZWRfY2VsbHPCp3J1bnRpbWXOAAOdZLVwdWJsaXNoZWRfb2JqZWN0X2tleXOQp2Vycm9yZWTC2SRiODA1MWQ2My1lZDI2LTRlMjEtOGE5OC1mNTY0YTNiOGE5NjeJpnF1ZXVlZMKkbG9nc5CncnVubmluZ8Kmb3V0cHV0hqRib2R52YI8ZGl2IGNsYXNzPSJtYXJrZG93biI+PHA+PHN0cm9uZz5Ob3RpY2UgdGhhdCB0aGVyZSBpcyBhIHN0cmFuZ2UgZHVwbGljYXRlLiBIb3cgY2FuIHdlIGZpbmQgYW5kIGRlYWwgd2l0aCB0aGlzPzwvc3Ryb25nPjwvcD4KPC9kaXY+sHBlcnNpc3RfanNfc3RhdGXCpG1pbWWpdGV4dC9odG1ssmxhc3RfcnVuX3RpbWVzdGFtcMtB2IcHZEAQYrdoYXNfcGx1dG9faG9va19mZWF0dXJlc8Kscm9vdGFzc2lnbmVlwKdjZWxsX2lk2SRiODA1MWQ2My1lZDI2LTRlMjEtOGE5OC1mNTY0YTNiOGE5Nje5ZGVwZW5kc19vbl9kaXNhYmxlZF9jZWxsc8KncnVudGltZc4ABHtEtXB1Ymxpc2hlZF9vYmplY3Rfa2V5c5CnZXJyb3JlZMLZJGFlZTJlNzA4LTZiMTMtNDYwOS1iNjBjLWEzM2NiZDc0MTAyM4mmcXVldWVkwqRsb2dzkKdydW5uaW5nwqZvdXRwdXSGpGJvZHmDpHJvd3OckgGXkqc6UEVSTU5PqnRleHQvcGxhaW6SpzY2MDMxLjWqdGV4dC9wbGFpbpKlMTAwMDGqdGV4dC9wbGFpbpKnODEwMzUuMKp0ZXh0L3BsYWlukqU5MzQzNqp0ZXh0L3BsYWlukqEwqnRleHQvcGxhaW6SpUludDY0qnRleHQvcGxhaW6SApeSpTpkYXRlqnRleHQvcGxhaW6SqTIuMDEwMDJlN6p0ZXh0L3BsYWlukqgyMDAwMDEzMap0ZXh0L3BsYWlukqkyLjAxMDA2ZTeqdGV4dC9wbGFpbpKoMjAyMDEyMzGqdGV4dC9wbGFpbpKhMKp0ZXh0L3BsYWlukqVJbnQ2NKp0ZXh0L3BsYWlukgOXkqk6TkFNRUVORFSqdGV4dC9wbGFpbpKpMi4wMTE5NWU3qnRleHQvcGxhaW6SqDIwMDAwMTMxqnRleHQvcGxhaW6SqTIuMDEyMDdlN6p0ZXh0L3BsYWlukqgyMDIwMTIzMap0ZXh0L3BsYWlukqcxNzk5MjY2qnRleHQvcGxhaW6StVVuaW9ue01pc3NpbmcsIEludDY0fap0ZXh0L3BsYWlukgSXkqY6U0hSQ0SqdGV4dC9wbGFpbpKnMjMuNDkwOap0ZXh0L3BsYWlukqIxMKp0ZXh0L3BsYWlukqQxMS4wqnRleHQvcGxhaW6Sojg5qnRleHQvcGxhaW6SpTEwMTYwqnRleHQvcGxhaW6StVVuaW9ue01pc3NpbmcsIEludDY0fap0ZXh0L3BsYWlukgWXkqc6RVhDSENEqnRleHQvcGxhaW6SpzIuMjg4MjOqdGV4dC9wbGFpbpKiLTKqdGV4dC9wbGFpbpKjMy4wqnRleHQvcGxhaW6SojMzqnRleHQvcGxhaW6SpTEwMTYwqnRleHQvcGxhaW6StVVuaW9ue01pc3NpbmcsIEludDY0fap0ZXh0L3BsYWlukgaXkqY6U0lDQ0SqdGV4dC9wbGFpbpKnbm90aGluZ6p0ZXh0L3BsYWlukqMiMCKqdGV4dC9wbGFpbpKnbm90aGluZ6p0ZXh0L3BsYWlukqMiWiKqdGV4dC9wbGFpbpKlMTAxNjCqdGV4dC9wbGFpbpK3VW5pb257TWlzc2luZywgU3RyaW5nN32qdGV4dC9wbGFpbpIHl5KnOk5DVVNJUKp0ZXh0L3BsYWlukqdub3RoaW5nqnRleHQvcGxhaW6SqiIwMDAzMDcxMCKqdGV4dC9wbGFpbpKnbm90aGluZ6p0ZXh0L3BsYWlukqoiWTk1MzA4MTAiqnRleHQvcGxhaW6SpTEwMTYwqnRleHQvcGxhaW6SuFVuaW9ue01pc3NpbmcsIFN0cmluZzE1fap0ZXh0L3BsYWlukgiXkqc6VElDS0VSqnRleHQvcGxhaW6Sp25vdGhpbmeqdGV4dC9wbGFpbpKjIkEiqnRleHQvcGxhaW6Sp25vdGhpbmeqdGV4dC9wbGFpbpKkIlpaIqp0ZXh0L3BsYWlukqUzNDgwNap0ZXh0L3BsYWlukrdVbmlvbntNaXNzaW5nLCBTdHJpbmc3fap0ZXh0L3BsYWlukgmXkqc6Q09NTkFNqnRleHQvcGxhaW6Sp25vdGhpbmeqdGV4dC9wbGFpbpK+IjAxMiBTTUlMRSBDT01NVU5JQ0FUSU9OUyBMVEQiqnRleHQvcGxhaW6Sp25vdGhpbmeqdGV4dC9wbGFpbpKrIlpZTkdBIElOQyKqdGV4dC9wbGFpbpKlMTAxNjCqdGV4dC9wbGFpbpK2VW5pb257TWlzc2luZywgU3RyaW5nfap0ZXh0L3BsYWlukgqXkqc6U0hSQ0xTqnRleHQvcGxhaW6Sp25vdGhpbmeqdGV4dC9wbGFpbpKjIkEiqnRleHQvcGxhaW6Sp25vdGhpbmeqdGV4dC9wbGFpbpKjIloiqnRleHQvcGxhaW6SpzE3Mzg4MzWqdGV4dC9wbGFpbpK3VW5pb257TWlzc2luZywgU3RyaW5nMX2qdGV4dC9wbGFpbqRtb3JlkkCXkqc6c3BydHJuqnRleHQvcGxhaW6SqjAuMDA0NDMyNTOqdGV4dC9wbGFpbpKpLTAuMTY5NDI1qnRleHQvcGxhaW6SqDAuMDA5ODMyqnRleHQvcGxhaW6SqDAuMTI2ODQ0qnRleHQvcGxhaW6SoTCqdGV4dC9wbGFpbpKnRmxvYXQ2NKp0ZXh0L3BsYWluqG9iamVjdGlkrzEzMjQ1YjkwYjRhMTVhOKZzY2hlbWGCpW5hbWVzl6h2YXJpYWJsZaRtZWFuo21pbqZtZWRpYW6jbWF4qG5taXNzaW5npmVsdHlwZaV0eXBlc5emU3ltYm9soKNBbnmgo0FueaVJbnQ2NKCwcGVyc2lzdF9qc19zdGF0ZcKkbWltZdkiYXBwbGljYXRpb24vdm5kLnBsdXRvLnRhYmxlK29iamVjdLJsYXN0X3J1bl90aW1lc3RhbXDLQdiHB4D+BBm3aGFzX3BsdXRvX2hvb2tfZmVhdHVyZXPCrHJvb3Rhc3NpZ25lZcCnY2VsbF9pZNkkYWVlMmU3MDgtNmIxMy00NjA5LWI2MGMtYTMzY2JkNzQxMDIzuWRlcGVuZHNfb25fZGlzYWJsZWRfY2VsbHPCp3J1bnRpbWXPAAAAARilcTS1cHVibGlzaGVkX29iamVjdF9rZXlzkKdlcnJvcmVkwtkkZTc5NmMxMzEtNWE2Ny00YTk5LThkZjItYjdlYTUyYTAzMDU2iaZxdWV1ZWTCpGxvZ3OUiKRsaW5l/6Ntc2eS2WVSZXBsYWNpbmcgZG9jcyBmb3IgYE1haW4ud29ya3NwYWNlIzIucHJpbnRtYXQgOjogVHVwbGV7SU8sIFZhcmFyZ3tBbnl9fWAgaW4gbW9kdWxlIGBNYWluLndvcmtzcGFjZSMyYKp0ZXh0L3BsYWlup2NlbGxfaWTZJGU3OTZjMTMxLTVhNjctNGE5OS04ZGYyLWI3ZWE1MmEwMzA1NqZrd2FyZ3OQomlkskJhc2VfRG9jc180MzUyYjZkOKRmaWxlrGRvY3NcRG9jcy5qbKVncm91cKREb2NzpWxldmVspFdhcm6IpGxpbmX/o21zZ5LZZlJlcGxhY2luZyBkb2NzIGZvciBgTWFpbi53b3Jrc3BhY2UjMi5wcmludGxuUHMgOjogVHVwbGV7SU8sIFZhcmFyZ3tBbnl9fWAgaW4gbW9kdWxlIGBNYWluLndvcmtzcGFjZSMyYKp0ZXh0L3BsYWlup2NlbGxfaWTZJGU3OTZjMTMxLTVhNjctNGE5OS04ZGYyLWI3ZWE1MmEwMzA1NqZrd2FyZ3OQomlkskJhc2VfRG9jc180MzUyYjZkOKRmaWxlrGRvY3NcRG9jcy5qbKVncm91cKREb2NzpWxldmVspFdhcm6IpGxpbmX/o21zZ5LZl1JlcGxhY2luZyBkb2NzIGZvciBgTWFpbi53b3Jrc3BhY2UjMi5mbXROdW1QcyA6OiBVbmlvbntUdXBsZXtBbnl9LCBUdXBsZXtBbnksIEFueX0sIFR1cGxle0FueSwgQW55LCBBbnl9LCBOVHVwbGV7NCwgQW55fX1gIGluIG1vZHVsZSBgTWFpbi53b3Jrc3BhY2UjMmCqdGV4dC9wbGFpbqdjZWxsX2lk2SRlNzk2YzEzMS01YTY3LTRhOTktOGRmMi1iN2VhNTJhMDMwNTama3dhcmdzkKJpZLJCYXNlX0RvY3NfNDM1MmI2ZDikZmlsZaxkb2NzXERvY3MuamylZ3JvdXCkRG9jc6VsZXZlbKRXYXJuiKRsaW5l/6Ntc2eS2V9SZXBsYWNpbmcgZG9jcyBmb3IgYE1haW4ud29ya3NwYWNlIzIuZm10TnVtUHNDIDo6IFR1cGxle0FueSwgQW55fWAgaW4gbW9kdWxlIGBNYWluLndvcmtzcGFjZSMyYKp0ZXh0L3BsYWlup2NlbGxfaWTZJGU3OTZjMTMxLTVhNjctNGE5OS04ZGYyLWI3ZWE1MmEwMzA1NqZrd2FyZ3OQomlkskJhc2VfRG9jc180MzUyYjZkOKRmaWxlrGRvY3NcRG9jcy5qbKVncm91cKREb2NzpWxldmVspFdhcm6ncnVubmluZ8Kmb3V0cHV0hqRib2R5oLBwZXJzaXN0X2pzX3N0YXRlw6RtaW1lqnRleHQvcGxhaW6ybGFzdF9ydW5fdGltZXN0YW1wy0HYhwdwHpeNt2hhc19wbHV0b19ob29rX2ZlYXR1cmVzwqxyb290YXNzaWduZWXAp2NlbGxfaWTZJGU3OTZjMTMxLTVhNjctNGE5OS04ZGYyLWI3ZWE1MmEwMzA1NrlkZXBlbmRzX29uX2Rpc2FibGVkX2NlbGxzwqdydW50aW1lzlDbrTC1cHVibGlzaGVkX29iamVjdF9rZXlzkKdlcnJvcmVkwtkkODNhMzk5M2UtMDczZi00ZTg0LWFjZmUtNjFiZmM3NmRkZTNhiaZxdWV1ZWTCpGxvZ3OQp3J1bm5pbmfCpm91dHB1dIakYm9keYOkcm93c5ySAZeSqjIwMDAtMDEtMzGqdGV4dC9wbGFpbpKmIkFBUEwiqnRleHQvcGxhaW6SoTeqdGV4dC9wbGFpbpKlMTQ1OTOqdGV4dC9wbGFpbpKmMTAzLjc1qnRleHQvcGxhaW6Sp21pc3NpbmeqdGV4dC9wbGFpbpKnbWlzc2luZ6p0ZXh0L3BsYWlukgKXkqoyMDAwLTAyLTI5qnRleHQvcGxhaW6SpiJBQVBMIqp0ZXh0L3BsYWlukqE3qnRleHQvcGxhaW6SpTE0NTkzqnRleHQvcGxhaW6SpzExNC42MjWqdGV4dC9wbGFpbpKmMTAzLjc1qnRleHQvcGxhaW6Sp21pc3NpbmeqdGV4dC9wbGFpbpIDl5KqMjAwMC0wMy0zMap0ZXh0L3BsYWlukqYiQUFQTCKqdGV4dC9wbGFpbpKhN6p0ZXh0L3BsYWlukqUxNDU5M6p0ZXh0L3BsYWlukqcxMzUuODEyqnRleHQvcGxhaW6SpzExNC42MjWqdGV4dC9wbGFpbpKnbWlzc2luZ6p0ZXh0L3BsYWlukgSXkqoyMDAwLTA0LTI4qnRleHQvcGxhaW6SpiJBQVBMIqp0ZXh0L3BsYWlukqE3qnRleHQvcGxhaW6SpTE0NTkzqnRleHQvcGxhaW6SpzEyNC4wNjKqdGV4dC9wbGFpbpKnMTM1LjgxMqp0ZXh0L3BsYWlukqdtaXNzaW5nqnRleHQvcGxhaW6SBZeSqjIwMDAtMDUtMzGqdGV4dC9wbGFpbpKmIkFBUEwiqnRleHQvcGxhaW6SoTeqdGV4dC9wbGFpbpKlMTQ1OTOqdGV4dC9wbGFpbpKkODQuMKp0ZXh0L3BsYWlukqcxMjQuMDYyqnRleHQvcGxhaW6Sp21pc3NpbmeqdGV4dC9wbGFpbpIGl5KqMjAwMC0wNi0zMKp0ZXh0L3BsYWlukqYiQUFQTCKqdGV4dC9wbGFpbpKhN6p0ZXh0L3BsYWlukqUxNDU5M6p0ZXh0L3BsYWlukqY1Mi4zNzWqdGV4dC9wbGFpbpKkODQuMKp0ZXh0L3BsYWlukqMwLjCqdGV4dC9wbGFpbpIHl5KqMjAwMC0wNy0zMap0ZXh0L3BsYWlukqYiQUFQTCKqdGV4dC9wbGFpbpKhN6p0ZXh0L3BsYWlukqUxNDU5M6p0ZXh0L3BsYWlukqc1MC44MTI1qnRleHQvcGxhaW6SpjUyLjM3Nap0ZXh0L3BsYWlukqdtaXNzaW5nqnRleHQvcGxhaW6SCJeSqjIwMDAtMDgtMzGqdGV4dC9wbGFpbpKmIkFBUEwiqnRleHQvcGxhaW6SoTeqdGV4dC9wbGFpbpKlMTQ1OTOqdGV4dC9wbGFpbpKnNjAuOTM3Nap0ZXh0L3BsYWlukqc1MC44MTI1qnRleHQvcGxhaW6Sp21pc3NpbmeqdGV4dC9wbGFpbpIJl5KqMjAwMC0wOS0yOap0ZXh0L3BsYWlukqYiQUFQTCKqdGV4dC9wbGFpbpKhN6p0ZXh0L3BsYWlukqUxNDU5M6p0ZXh0L3BsYWlukqUyNS43Nap0ZXh0L3BsYWlukqc2MC45Mzc1qnRleHQvcGxhaW6Sp21pc3NpbmeqdGV4dC9wbGFpbpIKl5KqMjAwMC0xMC0zMap0ZXh0L3BsYWlukqYiQUFQTCKqdGV4dC9wbGFpbpKhN6p0ZXh0L3BsYWlukqUxNDU5M6p0ZXh0L3BsYWlukqcxOS41NjI1qnRleHQvcGxhaW6SpTI1Ljc1qnRleHQvcGxhaW6Sp21pc3NpbmeqdGV4dC9wbGFpbqRtb3Jlksz8l5KqMjAyMC0xMi0zMap0ZXh0L3BsYWlukqYiQUFQTCKqdGV4dC9wbGFpbpKhN6p0ZXh0L3BsYWlukqUxNDU5M6p0ZXh0L3BsYWlukqYxMzIuNjmqdGV4dC9wbGFpbpKmMTE5LjA1qnRleHQvcGxhaW6Sp21pc3NpbmeqdGV4dC9wbGFpbqhvYmplY3RpZLA5OTc1Zjc4ZWY4N2JlMGNkpnNjaGVtYYKlbmFtZXOXpGRhdGWmVElDS0VSplBFUk1DT6ZQRVJNTk+jUFJDpVBSQ19MpkRJVkFNVKV0eXBlc5ekRGF0ZahTdHJpbmc3P6VJbnQ2NKVJbnQ2NKhGbG9hdDY0P6hGbG9hdDY0P6hGbG9hdDY0P7BwZXJzaXN0X2pzX3N0YXRlwqRtaW1l2SJhcHBsaWNhdGlvbi92bmQucGx1dG8udGFibGUrb2JqZWN0smxhc3RfcnVuX3RpbWVzdGFtcMtB2IcHg/2yLbdoYXNfcGx1dG9faG9va19mZWF0dXJlc8Kscm9vdGFzc2lnbmVlwKdjZWxsX2lk2SQ4M2EzOTkzZS0wNzNmLTRlODQtYWNmZS02MWJmYzc2ZGRlM2G5ZGVwZW5kc19vbl9kaXNhYmxlZF9jZWxsc8KncnVudGltZc5B6vSstXB1Ymxpc2hlZF9vYmplY3Rfa2V5c5CnZXJyb3JlZMKxY2VsbF9kZXBlbmRlbmNpZXPeAELZJGQ5OTE2MGI3LTk0MjEtNDA0ZC1iZWY0LTU1ZjYzNGQ2ZTU4NoS0cHJlY2VkZW5jZV9oZXVyaXN0aWMJp2NlbGxfaWTZJGQ5OTE2MGI3LTk0MjEtNDA0ZC1iZWY0LTU1ZjYzNGQ2ZTU4NrRkb3duc3RyZWFtX2NlbGxzX21hcICydXBzdHJlYW1fY2VsbHNfbWFwgahnZXRpbmRleJDZJDk4MDgzOTg5LWEwMDYtNGNmMy1hZmQxLTBiMzQ5NWUxZDViNoS0cHJlY2VkZW5jZV9oZXVyaXN0aWMJp2NlbGxfaWTZJDk4MDgzOTg5LWEwMDYtNGNmMy1hZmQxLTBiMzQ5NWUxZDViNrRkb3duc3RyZWFtX2NlbGxzX21hcICydXBzdHJlYW1fY2VsbHNfbWFwgahnZXRpbmRleJDZJDIyMDczOTEwLWY2NzYtNGU4Yi04YjgwLTM4ZmVkNTdiZjM5OYS0cHJlY2VkZW5jZV9oZXVyaXN0aWMJp2NlbGxfaWTZJDIyMDczOTEwLWY2NzYtNGU4Yi04YjgwLTM4ZmVkNTdiZjM5ObRkb3duc3RyZWFtX2NlbGxzX21hcICydXBzdHJlYW1fY2VsbHNfbWFwgahnZXRpbmRleJDZJGM1MzdhMmU2LTExNGYtNGE4Ni05MzIzLWNjN2U3Yjk0Y2ViM4S0cHJlY2VkZW5jZV9oZXVyaXN0aWMJp2NlbGxfaWTZJGM1MzdhMmU2LTExNGYtNGE4Ni05MzIzLWNjN2U3Yjk0Y2ViM7Rkb3duc3RyZWFtX2NlbGxzX21hcICydXBzdHJlYW1fY2VsbHNfbWFwgahnZXRpbmRleJDZJDYzMzRkNDk1LWZhOTEtNDQyOC1hMjAzLTRkODIzNDMyNGVjZYS0cHJlY2VkZW5jZV9oZXVyaXN0aWMJp2NlbGxfaWTZJDYzMzRkNDk1LWZhOTEtNDQyOC1hMjAzLTRkODIzNDMyNGVjZbRkb3duc3RyZWFtX2NlbGxzX21hcICydXBzdHJlYW1fY2VsbHNfbWFwgahnZXRpbmRleJDZJDhhODY5ZWNiLWE2ZWQtNDk5ZC04NzNiLTEzMWM5YmMyZTBiMYS0cHJlY2VkZW5jZV9oZXVyaXN0aWMJp2NlbGxfaWTZJDhhODY5ZWNiLWE2ZWQtNDk5ZC04NzNiLTEzMWM5YmMyZTBiMbRkb3duc3RyZWFtX2NlbGxzX21hcICydXBzdHJlYW1fY2VsbHNfbWFwgahnZXRpbmRleJDZJDZjYjYzOTQ3LTY0OTAtNGEwMi04Yjc0LTU1ZWI1ZTJlZmE5NoS0cHJlY2VkZW5jZV9oZXVyaXN0aWMJp2NlbGxfaWTZJDZjYjYzOTQ3LTY0OTAtNGEwMi04Yjc0LTU1ZWI1ZTJlZmE5NrRkb3duc3RyZWFtX2NlbGxzX21hcICydXBzdHJlYW1fY2VsbHNfbWFwh6hkZXNjcmliZZCmZmlsdGVykKZAY2hhaW6QqWlzbWlzc2luZ5CiPT6Qoj09kKRDUlNQkdkkMmExOGUwZWYtNDMzMi00YTExLWFmOWYtM2VmZWEzZjhmNjlk2SQ4OTgwYTk2My1iNmMwLTQ4Y2QtOTMxNi1iOTZkZjJhY2Y0YzaEtHByZWNlZGVuY2VfaGV1cmlzdGljCadjZWxsX2lk2SQ4OTgwYTk2My1iNmMwLTQ4Y2QtOTMxNi1iOTZkZjJhY2Y0Yza0ZG93bnN0cmVhbV9jZWxsc19tYXCAsnVwc3RyZWFtX2NlbGxzX21hcIGoZ2V0aW5kZXiQ2SRhMjNhMzY2ZC1mYTczLTQ2NzItYjU5Yy1lMTRiMmI4MTdjZTiEtHByZWNlZGVuY2VfaGV1cmlzdGljCadjZWxsX2lk2SRhMjNhMzY2ZC1mYTczLTQ2NzItYjU5Yy1lMTRiMmI4MTdjZTi0ZG93bnN0cmVhbV9jZWxsc19tYXCBp0FBUExfUniS2SQwYzgyMTMwOC00NWNhLTQzMTctODBiMy05ZTg3YzY4NDA0NjXZJDhjNThjYmM2LWNmYmQtNDNkZS05ZTY4LWJiYWY0NDcyMTNmYbJ1cHN0cmVhbV9jZWxsc19tYXCMqEdldExvZ1J4kdkkZDMwMGJlNjUtZjQ5NC00MTgxLTk5MjQtZTY5Y2M2YzA0ZjA5o2xhZ5Cmc2VsZWN0kKtkcm9wbWlzc2luZ5CiPT6QpUdldFJ4kdkkOWI4MTYyMzYtZjlkZS00YWFkLWFlYTAtYjVmOGZiZmM2YjExpUJ5Um93kKRzb3J0kKZAY2hhaW6Qp2dyb3VwYnmQpEFBUEyR2SQ0NDZlMGRiMS04MTA3LTQ3MjQtYjc3NC01NjFjNWQzN2Y4N2GpdHJhbnNmb3JtkNkkYzYzZTk2ZTctMGVhMC00ZGFmLWEyMzAtMjZiMjU4ZjEyZTc5hLRwcmVjZWRlbmNlX2hldXJpc3RpYwmnY2VsbF9pZNkkYzYzZTk2ZTctMGVhMC00ZGFmLWEyMzAtMjZiMjU4ZjEyZTc5tGRvd25zdHJlYW1fY2VsbHNfbWFwgLJ1cHN0cmVhbV9jZWxsc19tYXCBqGdldGluZGV4kNkkYzc5OWYxYWQtYjgyYi00NDIxLWJiNzEtZDA3Y2I3YjZhZmQ3hLRwcmVjZWRlbmNlX2hldXJpc3RpYwmnY2VsbF9pZNkkYzc5OWYxYWQtYjgyYi00NDIxLWJiNzEtZDA3Y2I3YjZhZmQ3tGRvd25zdHJlYW1fY2VsbHNfbWFwgLJ1cHN0cmVhbV9jZWxsc19tYXCBqGdldGluZGV4kNkkYTQ4OGE2NzktNmRjMC00YTMzLWIzMjctOWQwZjZlM2I5ZWIyhLRwcmVjZWRlbmNlX2hldXJpc3RpYwmnY2VsbF9pZNkkYTQ4OGE2NzktNmRjMC00YTMzLWIzMjctOWQwZjZlM2I5ZWIytGRvd25zdHJlYW1fY2VsbHNfbWFwgLJ1cHN0cmVhbV9jZWxsc19tYXCBqGdldGluZGV4kNkkMmE1MDU1YjQtMjEzNy00NDdkLWJmZDItYTI2Y2M0YjE0NzM1hLRwcmVjZWRlbmNlX2hldXJpc3RpYwenY2VsbF9pZNkkMmE1MDU1YjQtMjEzNy00NDdkLWJmZDItYTI2Y2M0YjE0NzM1tGRvd25zdHJlYW1fY2VsbHNfbWFwhqNDU1aR2SQyYTE4ZTBlZi00MzMyLTRhMTEtYWY5Zi0zZWZlYTNmOGY2OWSqU3RhdGlzdGljc5ClRGF0ZXOQrVNoaWZ0ZWRBcnJheXOQpUNoYWlukKpEYXRhRnJhbWVzkLJ1cHN0cmVhbV9jZWxsc19tYXCA2SRkODZjMzc2NC04MWZiLTRkY2MtYWYwNC0wOTQzNTZhMjUyMTaEtHByZWNlZGVuY2VfaGV1cmlzdGljCadjZWxsX2lk2SRkODZjMzc2NC04MWZiLTRkY2MtYWYwNC0wOTQzNTZhMjUyMTa0ZG93bnN0cmVhbV9jZWxsc19tYXCAsnVwc3RyZWFtX2NlbGxzX21hcIGoZ2V0aW5kZXiQ2SQ0Y2ZlZGE2Yi02YjEyLTRmZmEtOTM3OS0xNWMwMGI1M2E0OWSEtHByZWNlZGVuY2VfaGV1cmlzdGljCadjZWxsX2lk2SQ0Y2ZlZGE2Yi02YjEyLTRmZmEtOTM3OS0xNWMwMGI1M2E0OWS0ZG93bnN0cmVhbV9jZWxsc19tYXCAsnVwc3RyZWFtX2NlbGxzX21hcIGoZ2V0aW5kZXiQ2SRhMGNmMDM2MS00MjJhLTRiY2QtOGI5ZS05NDNkYzAwMDQ0YjOEtHByZWNlZGVuY2VfaGV1cmlzdGljCadjZWxsX2lk2SRhMGNmMDM2MS00MjJhLTRiY2QtOGI5ZS05NDNkYzAwMDQ0YjO0ZG93bnN0cmVhbV9jZWxsc19tYXCAsnVwc3RyZWFtX2NlbGxzX21hcIenY29tYmluZZCiZGaR2SQ1MjNlMDE5MS0yMzdlLTRiZGItYjlhMy01MzA3OWI5ZTkyZDWmQGNoYWlukKlEYXRhRnJhbWWQp2dyb3VwYnmQoj09kKRucm93kNkkYjFhNzY5MDktYTUzZi00OTJhLWJlYzItNTQxNWQ5MGQ1ZGU0hLRwcmVjZWRlbmNlX2hldXJpc3RpYwmnY2VsbF9pZNkkYjFhNzY5MDktYTUzZi00OTJhLWJlYzItNTQxNWQ5MGQ1ZGU0tGRvd25zdHJlYW1fY2VsbHNfbWFwgaxQb3J0ZlN1bW1hcnmR2SRmYTA1YjEzMC00YWI1LTQ5ZWEtOGE4Yy1mNmQ5ZmNmZDE2NTaydXBzdHJlYW1fY2VsbHNfbWFwjKdtaW5pbXVtkKdQb3J0ZlJ4kdkkODcwOTk5MTAtZGZkZS00ZmVlLTg5MTAtMWQ2YmQyNWQ1MTcwoj0+kKZtZWRpYW6Qp2NvbWJpbmWQpXN0YWNrkKZAY2hhaW6Qp2dyb3VwYnmQp0FzVGFibGWQpG1lYW6Qp21heGltdW2Qo3N0ZJDZJDc1MDA3YzU3LTk0ZTgtNDlmYy04YmJiLTNkMzlkNjIwN2ZhMoS0cHJlY2VkZW5jZV9oZXVyaXN0aWMJp2NlbGxfaWTZJDc1MDA3YzU3LTk0ZTgtNDlmYy04YmJiLTNkMzlkNjIwN2ZhMrRkb3duc3RyZWFtX2NlbGxzX21hcICydXBzdHJlYW1fY2VsbHNfbWFwgahnZXRpbmRleJDZJGRhMzViOWEwLTVhYzgtNDYwOC04ZGM1LTJjMDg5MDFjYzJlM4S0cHJlY2VkZW5jZV9oZXVyaXN0aWMJp2NlbGxfaWTZJGRhMzViOWEwLTVhYzgtNDYwOC04ZGM1LTJjMDg5MDFjYzJlM7Rkb3duc3RyZWFtX2NlbGxzX21hcICydXBzdHJlYW1fY2VsbHNfbWFwhKlQb3J0Zm9saW+R2SQ5OWMwZWU2Yi1lMDQwLTQyNjEtOTkyYy0wZjVhMGViODE1OGOndW5zdGFja5CmQGNoYWlukKZzZWxlY3SQ2SQ4NzA5OTkxMC1kZmRlLTRmZWUtODkxMC0xZDZiZDI1ZDUxNzCEtHByZWNlZGVuY2VfaGV1cmlzdGljCadjZWxsX2lk2SQ4NzA5OTkxMC1kZmRlLTRmZWUtODkxMC0xZDZiZDI1ZDUxNzC0ZG93bnN0cmVhbV9jZWxsc19tYXCBp1BvcnRmUniV2SQwN2U3NjdlNi1kNmZjLTRmNTItOGI5ZC03MmNhN2M2MzM5NTXZJGNkZGE1MTgzLTQ2YzYtNDI4My1hNjZmLTE2OGVkNTc5MGE3N9kkYjFhNzY5MDktYTUzZi00OTJhLWJlYzItNTQxNWQ5MGQ1ZGU02SQ4MDg2NTM4Ni03OWNmLTQ1YjAtODM2ZC1lNTVhMWNhNjQxNzTZJGZhMDViMTMwLTRhYjUtNDllYS04YThjLWY2ZDlmY2ZkMTY1NrJ1cHN0cmVhbV9jZWxsc19tYXCMqVBvcnRmb2xpb5HZJDk5YzBlZTZiLWUwNDAtNDI2MS05OTJjLTBmNWEwZWI4MTU4Y6F3kdkkZTVjMmI2OGYtNGYxZS00YmQxLTgyNDAtYWM1MmQyNjgzMDRip3Vuc3RhY2uQpnNlbGVjdJCiPT6Qp2Fkam9pbnSQpUJ5Um93kKZAY2hhaW6QoSqQpUFycmF5kKl0cmFuc2Zvcm2QpGNvbmqQ2SRlMzUyOWJlZC1hYzg5LTRlNWYtYTFlMi1lMmE3ZDRjN2IwNzOEtHByZWNlZGVuY2VfaGV1cmlzdGljCadjZWxsX2lk2SRlMzUyOWJlZC1hYzg5LTRlNWYtYTFlMi1lMmE3ZDRjN2IwNzO0ZG93bnN0cmVhbV9jZWxsc19tYXCAsnVwc3RyZWFtX2NlbGxzX21hcIGoZ2V0aW5kZXiQ2SQwN2U3NjdlNi1kNmZjLTRmNTItOGI5ZC03MmNhN2M2MzM5NTWEtHByZWNlZGVuY2VfaGV1cmlzdGljCadjZWxsX2lk2SQwN2U3NjdlNi1kNmZjLTRmNTItOGI5ZC03MmNhN2M2MzM5NTW0ZG93bnN0cmVhbV9jZWxsc19tYXCAsnVwc3RyZWFtX2NlbGxzX21hcIKnUG9ydGZSeJHZJDg3MDk5OTEwLWRmZGUtNGZlZS04OTEwLTFkNmJkMjVkNTE3MKhkZXNjcmliZZDZJDU5MDc5OWViLWI1ZTAtNGVlMC1iZGI1LWFlNGJkMDFmNTU3NoS0cHJlY2VkZW5jZV9oZXVyaXN0aWMJp2NlbGxfaWTZJDU5MDc5OWViLWI1ZTAtNGVlMC1iZGI1LWFlNGJkMDFmNTU3NrRkb3duc3RyZWFtX2NlbGxzX21hcICydXBzdHJlYW1fY2VsbHNfbWFwgahnZXRpbmRleJDZJDRkZWNlMWRiLTMzMDUtNGI5NC04YTFiLWY1YzgzM2Q2NzQ0NIS0cHJlY2VkZW5jZV9oZXVyaXN0aWMJp2NlbGxfaWTZJDRkZWNlMWRiLTMzMDUtNGI5NC04YTFiLWY1YzgzM2Q2NzQ0NLRkb3duc3RyZWFtX2NlbGxzX21hcICydXBzdHJlYW1fY2VsbHNfbWFwiK13aXRoX3Rlcm1pbmFskKRzcXJ0kKEvkKFekKEqkKdhZGpvaW50kKlwcmludGxuUHOR2SRlNzk2YzEzMS01YTY3LTRhOTktOGRmMi1iN2VhNTJhMDMwNTakY29uapDZJDJhMThlMGVmLTQzMzItNGExMS1hZjlmLTNlZmVhM2Y4ZjY5ZIS0cHJlY2VkZW5jZV9oZXVyaXN0aWMJp2NlbGxfaWTZJDJhMThlMGVmLTQzMzItNGExMS1hZjlmLTNlZmVhM2Y4ZjY5ZLRkb3duc3RyZWFtX2NlbGxzX21hcIGkQ1JTUJXZJGFlZTJlNzA4LTZiMTMtNDYwOS1iNjBjLWEzM2NiZDc0MTAyM9kkNmNiNjM5NDctNjQ5MC00YTAyLThiNzQtNTVlYjVlMmVmYTk22SQ1MjNlMDE5MS0yMzdlLTRiZGItYjlhMy01MzA3OWI5ZTkyZDXZJDQ0NmUwZGIxLTgxMDctNDcyNC1iNzc0LTU2MWM1ZDM3Zjg3YdkkOTljMGVlNmItZTA0MC00MjYxLTk5MmMtMGY1YTBlYjgxNThjsnVwc3RyZWFtX2NlbGxzX21hcIOjQ1NWkdkkMmE1MDU1YjQtMjEzNy00NDdkLWJmZDItYTI2Y2M0YjE0NzM1qENTVi5GaWxlkKlEYXRhRnJhbWWQ2SQ4MDg2NTM4Ni03OWNmLTQ1YjAtODM2ZC1lNTVhMWNhNjQxNzSEtHByZWNlZGVuY2VfaGV1cmlzdGljCadjZWxsX2lk2SQ4MDg2NTM4Ni03OWNmLTQ1YjAtODM2ZC1lNTVhMWNhNjQxNzS0ZG93bnN0cmVhbV9jZWxsc19tYXCAsnVwc3RyZWFtX2NlbGxzX21hcIWjTm90kKE6kKdQb3J0ZlJ4kdkkODcwOTk5MTAtZGZkZS00ZmVlLTg5MTAtMWQ2YmQyNWQ1MTcwpk1hdHJpeJCjY292kNkkNmMxOWZiZjItMzQyZC00OGZmLTk3ZDctOTgzYmIxYWUxMTIyhLRwcmVjZWRlbmNlX2hldXJpc3RpYwmnY2VsbF9pZNkkNmMxOWZiZjItMzQyZC00OGZmLTk3ZDctOTgzYmIxYWUxMTIytGRvd25zdHJlYW1fY2VsbHNfbWFwgLJ1cHN0cmVhbV9jZWxsc19tYXCKpmxlbmd0aJChOpChLZCtd2l0aF90ZXJtaW5hbJChL5ClemVyb3OQoSuQoSqQqXBvcGZpcnN0IZCocHJpbnRtYXSR2SRlNzk2YzEzMS01YTY3LTRhOTktOGRmMi1iN2VhNTJhMDMwNTbZJDc2YWRmOWNiLWRiMmMtNGI3Ni05NjE0LWJlMTJiYjljNTc2NIS0cHJlY2VkZW5jZV9oZXVyaXN0aWMJp2NlbGxfaWTZJDc2YWRmOWNiLWRiMmMtNGI3Ni05NjE0LWJlMTJiYjljNTc2NLRkb3duc3RyZWFtX2NlbGxzX21hcICydXBzdHJlYW1fY2VsbHNfbWFwgahnZXRpbmRleJDZJDUyM2UwMTkxLTIzN2UtNGJkYi1iOWEzLTUzMDc5YjllOTJkNYS0cHJlY2VkZW5jZV9oZXVyaXN0aWMJp2NlbGxfaWTZJDUyM2UwMTkxLTIzN2UtNGJkYi1iOWEzLTUzMDc5YjllOTJkNbRkb3duc3RyZWFtX2NlbGxzX21hcIGiZGaS2SRhMGNmMDM2MS00MjJhLTRiY2QtOGI5ZS05NDNkYzAwMDQ0YjPZJDBjZjg1ZGEyLWE1MzgtNDAyZC05Nzg1LTA5NDQyNTI2MGJkYrJ1cHN0cmVhbV9jZWxsc19tYXCLpnN0cmluZ5Cmc2VsZWN0kKREYXRlkKlpc21pc3NpbmeQoj0+kKZmaWx0ZXKQpENSU1CR2SQyYTE4ZTBlZi00MzMyLTRhMTEtYWY5Zi0zZWZlYTNmOGY2OWSlQnlSb3eQpkBjaGFpbpCiPT2QqXRyYW5zZm9ybZDZJDQ4MDVlOGE2LTM0ZDYtNDlmMC04NzA2LTg4YzkxNmU0Njg5ZoS0cHJlY2VkZW5jZV9oZXVyaXN0aWMJp2NlbGxfaWTZJDQ4MDVlOGE2LTM0ZDYtNDlmMC04NzA2LTg4YzkxNmU0Njg5ZrRkb3duc3RyZWFtX2NlbGxzX21hcICydXBzdHJlYW1fY2VsbHNfbWFwgahnZXRpbmRleJDZJGNiNzhiZThjLWYwMzktNDM0ZS1hY2JiLTkzNzVmMzE3NDU4OIS0cHJlY2VkZW5jZV9oZXVyaXN0aWMJp2NlbGxfaWTZJGNiNzhiZThjLWYwMzktNDM0ZS1hY2JiLTkzNzVmMzE3NDU4OLRkb3duc3RyZWFtX2NlbGxzX21hcICydXBzdHJlYW1fY2VsbHNfbWFwgahnZXRpbmRleJDZJDhjNThjYmM2LWNmYmQtNDNkZS05ZTY4LWJiYWY0NDcyMTNmYYS0cHJlY2VkZW5jZV9oZXVyaXN0aWMJp2NlbGxfaWTZJDhjNThjYmM2LWNmYmQtNDNkZS05ZTY4LWJiYWY0NDcyMTNmYbRkb3duc3RyZWFtX2NlbGxzX21hcICydXBzdHJlYW1fY2VsbHNfbWFwhqNleHCQo3N1bZCnY29tYmluZZCmQGNoYWlukKI9PpCnQUFQTF9SeJHZJGEyM2EzNjZkLWZhNzMtNDY3Mi1iNTljLWUxNGIyYjgxN2NlONkkYWEyMWYwNWMtMWU3OC00OTE5LTg2ZmEtNTdhZTg5ZDRkNjMzhLRwcmVjZWRlbmNlX2hldXJpc3RpYwmnY2VsbF9pZNkkYWEyMWYwNWMtMWU3OC00OTE5LTg2ZmEtNTdhZTg5ZDRkNjMztGRvd25zdHJlYW1fY2VsbHNfbWFwgLJ1cHN0cmVhbV9jZWxsc19tYXCBqGdldGluZGV4kNkkYmQzNTJmMmUtM2I3Zi00YjViLWFlNDMtZmQyNDQ0NDczNDdhhLRwcmVjZWRlbmNlX2hldXJpc3RpYwmnY2VsbF9pZNkkYmQzNTJmMmUtM2I3Zi00YjViLWFlNDMtZmQyNDQ0NDczNDdhtGRvd25zdHJlYW1fY2VsbHNfbWFwgLJ1cHN0cmVhbV9jZWxsc19tYXCBqGdldGluZGV4kNkkYTU0ODMxNGItNTExZC00MzE5LThmN2ItOTVhMzE1OGJhOTBjhLRwcmVjZWRlbmNlX2hldXJpc3RpYwmnY2VsbF9pZNkkYTU0ODMxNGItNTExZC00MzE5LThmN2ItOTVhMzE1OGJhOTBjtGRvd25zdHJlYW1fY2VsbHNfbWFwgLJ1cHN0cmVhbV9jZWxsc19tYXCBqGdldGluZGV4kNkkMTZjYzcwNzQtZDc4Ni00YmI1LWE3MzUtMTg3NDY1ZTgxNWUyhLRwcmVjZWRlbmNlX2hldXJpc3RpYwmnY2VsbF9pZNkkMTZjYzcwNzQtZDc4Ni00YmI1LWE3MzUtMTg3NDY1ZTgxNWUytGRvd25zdHJlYW1fY2VsbHNfbWFwgLJ1cHN0cmVhbV9jZWxsc19tYXCBqGdldGluZGV4kNkkYWQyNmU1NGItODViMS00NjMxLWIxZWQtNTMxODczYmE3MTJhhLRwcmVjZWRlbmNlX2hldXJpc3RpYwmnY2VsbF9pZNkkYWQyNmU1NGItODViMS00NjMxLWIxZWQtNTMxODczYmE3MTJhtGRvd25zdHJlYW1fY2VsbHNfbWFwgLJ1cHN0cmVhbV9jZWxsc19tYXCBqGdldGluZGV4kNkkOTljMGVlNmItZTA0MC00MjYxLTk5MmMtMGY1YTBlYjgxNThjhLRwcmVjZWRlbmNlX2hldXJpc3RpYwmnY2VsbF9pZNkkOTljMGVlNmItZTA0MC00MjYxLTk5MmMtMGY1YTBlYjgxNThjtGRvd25zdHJlYW1fY2VsbHNfbWFwgalQb3J0Zm9saW+S2SRkYTM1YjlhMC01YWM4LTQ2MDgtOGRjNS0yYzA4OTAxY2MyZTPZJDg3MDk5OTEwLWRmZGUtNGZlZS04OTEwLTFkNmJkMjVkNTE3MLJ1cHN0cmVhbV9jZWxsc19tYXDeABamc3RyaW5nkKhHZXRMb2dSeJHZJGQzMDBiZTY1LWY0OTQtNDE4MS05OTI0LWU2OWNjNmMwNGYwOaNsYWeQpmZpbHRlcpCkRGF0ZZCkbnJvd5ClR2V0UniR2SQ5YjgxNjIzNi1mOWRlLTRhYWQtYWVhMC1iNWY4ZmJmYzZiMTGlQnlSb3eQo+KIiJCpRGF0YUZyYW1lkKI9PZCiaW6QoTqQq2Ryb3BtaXNzaW5nkKZzZWxlY3SQoj0+kKRDUlNQkdkkMmExOGUwZWYtNDMzMi00YTExLWFmOWYtM2VmZWEzZjhmNjlkp2NvbWJpbmWQpHNvcnSQpkBjaGFpbpCnZ3JvdXBieZCpdHJhbnNmb3JtkNkkZTUzMThlMDAtYzA3NC00MDc0LThlYjQtMzI0NWNlY2ViNGM0hLRwcmVjZWRlbmNlX2hldXJpc3RpYwmnY2VsbF9pZNkkZTUzMThlMDAtYzA3NC00MDc0LThlYjQtMzI0NWNlY2ViNGM0tGRvd25zdHJlYW1fY2VsbHNfbWFwgLJ1cHN0cmVhbV9jZWxsc19tYXCIrXdpdGhfdGVybWluYWyQpHNxcnSQoS+QoV6QoSqQp2Fkam9pbnSQqXByaW50bG5Qc5HZJGU3OTZjMTMxLTVhNjctNGE5OS04ZGYyLWI3ZWE1MmEwMzA1NqRjb25qkNkkZTg5ZWNiNjItNGMwZi00MjY2LTg2M2ItNTI5Njk0Y2NhMWMwhLRwcmVjZWRlbmNlX2hldXJpc3RpYwmnY2VsbF9pZNkkZTg5ZWNiNjItNGMwZi00MjY2LTg2M2ItNTI5Njk0Y2NhMWMwtGRvd25zdHJlYW1fY2VsbHNfbWFwgLJ1cHN0cmVhbV9jZWxsc19tYXCIqHByaW50bWF0kdkkZTc5NmMxMzEtNWE2Ny00YTk5LThkZjItYjdlYTUyYTAzMDU2rXdpdGhfdGVybWluYWyQqHByaW50cmVkkdkkZTc5NmMxMzEtNWE2Ny00YTk5LThkZjItYjdlYTUyYTAzMDU2oS+QoSqQp2Fkam9pbnSQpGNvbmqQqXByaW50bG5Qc5HZJGU3OTZjMTMxLTVhNjctNGE5OS04ZGYyLWI3ZWE1MmEwMzA1NtkkZmI2OWQ3MDEtZTYyMy00NDNlLWI2ZjAtYzc1MTgwYjliZTFihLRwcmVjZWRlbmNlX2hldXJpc3RpYwmnY2VsbF9pZNkkZmI2OWQ3MDEtZTYyMy00NDNlLWI2ZjAtYzc1MTgwYjliZTFitGRvd25zdHJlYW1fY2VsbHNfbWFwgLJ1cHN0cmVhbV9jZWxsc19tYXCBqGdldGluZGV4kNkkZTZjMTk4ZjQtNWFiZC00NjhjLTg0MWMtOGE3YjAzMmYxZGMyhLRwcmVjZWRlbmNlX2hldXJpc3RpYwmnY2VsbF9pZNkkZTZjMTk4ZjQtNWFiZC00NjhjLTg0MWMtOGE3YjAzMmYxZGMytGRvd25zdHJlYW1fY2VsbHNfbWFwgLJ1cHN0cmVhbV9jZWxsc19tYXCBqGdldGluZGV4kNkkZTVjMmI2OGYtNGYxZS00YmQxLTgyNDAtYWM1MmQyNjgzMDRihLRwcmVjZWRlbmNlX2hldXJpc3RpYwmnY2VsbF9pZNkkZTVjMmI2OGYtNGYxZS00YmQxLTgyNDAtYWM1MmQyNjgzMDRitGRvd25zdHJlYW1fY2VsbHNfbWFwgaF3ktkkODcwOTk5MTAtZGZkZS00ZmVlLTg5MTAtMWQ2YmQyNWQ1MTcw2SRmYTA1YjEzMC00YWI1LTQ5ZWEtOGE4Yy1mNmQ5ZmNmZDE2NTaydXBzdHJlYW1fY2VsbHNfbWFwgNkkMzM2OWJlNzEtMmExMS00ZGM4LThkMWItZDJiMWQ3NzQ5YzVmhLRwcmVjZWRlbmNlX2hldXJpc3RpYwmnY2VsbF9pZNkkMzM2OWJlNzEtMmExMS00ZGM4LThkMWItZDJiMWQ3NzQ5YzVmtGRvd25zdHJlYW1fY2VsbHNfbWFwgLJ1cHN0cmVhbV9jZWxsc19tYXCGrXdpdGhfdGVybWluYWyQoS+QoV6QqXByaW50Ymx1ZZHZJGU3OTZjMTMxLTVhNjctNGE5OS04ZGYyLWI3ZWE1MmEwMzA1NqEqkKhwcmludG1hdJHZJGU3OTZjMTMxLTVhNjctNGE5OS04ZGYyLWI3ZWE1MmEwMzA1NtkkNWJhYTFhOWYtN2FkNS00YmZjLWI0NjgtOWUwYjQwNDM4NTQ4hLRwcmVjZWRlbmNlX2hldXJpc3RpYwmnY2VsbF9pZNkkNWJhYTFhOWYtN2FkNS00YmZjLWI0NjgtOWUwYjQwNDM4NTQ4tGRvd25zdHJlYW1fY2VsbHNfbWFwgLJ1cHN0cmVhbV9jZWxsc19tYXCBqGdldGluZGV4kNkkMmJkMTY3NGQtMjI1NC00NWE4LTlmMDItNWNhYTViZDBiZDFjhLRwcmVjZWRlbmNlX2hldXJpc3RpYwmnY2VsbF9pZNkkMmJkMTY3NGQtMjI1NC00NWE4LTlmMDItNWNhYTViZDBiZDFjtGRvd25zdHJlYW1fY2VsbHNfbWFwgLJ1cHN0cmVhbV9jZWxsc19tYXCBqGdldGluZGV4kNkkZDMwMGJlNjUtZjQ5NC00MTgxLTk5MjQtZTY5Y2M2YzA0ZjA5hLRwcmVjZWRlbmNlX2hldXJpc3RpYwmnY2VsbF9pZNkkZDMwMGJlNjUtZjQ5NC00MTgxLTk5MjQtZTY5Y2M2YzA0ZjA5tGRvd25zdHJlYW1fY2VsbHNfbWFwgahHZXRMb2dSeJLZJGEyM2EzNjZkLWZhNzMtNDY3Mi1iNTljLWUxNGIyYjgxN2NlONkkOTljMGVlNmItZTA0MC00MjYxLTk5MmMtMGY1YTBlYjgxNThjsnVwc3RyZWFtX2NlbGxzX21hcIenbWlzc2luZ5ChLZCjbG9nkKEhkKNhbnmQoSuQqWlzbWlzc2luZ5DZJDQ1ODY4ODk0LWEzMTctNDM3MC05NjMxLTZlZjNjMzE2NjFlM4S0cHJlY2VkZW5jZV9oZXVyaXN0aWMJp2NlbGxfaWTZJDQ1ODY4ODk0LWEzMTctNDM3MC05NjMxLTZlZjNjMzE2NjFlM7Rkb3duc3RyZWFtX2NlbGxzX21hcICydXBzdHJlYW1fY2VsbHNfbWFwgahnZXRpbmRleJDZJDZiNzIwYWRlLTVlNGMtNGY1OC04ZmNkLWY2MDlkZjI5ZGY3YoS0cHJlY2VkZW5jZV9oZXVyaXN0aWMJp2NlbGxfaWTZJDZiNzIwYWRlLTVlNGMtNGY1OC04ZmNkLWY2MDlkZjI5ZGY3YrRkb3duc3RyZWFtX2NlbGxzX21hcICydXBzdHJlYW1fY2VsbHNfbWFwgahnZXRpbmRleJDZJDliODE2MjM2LWY5ZGUtNGFhZC1hZWEwLWI1ZjhmYmZjNmIxMYS0cHJlY2VkZW5jZV9oZXVyaXN0aWMJp2NlbGxfaWTZJDliODE2MjM2LWY5ZGUtNGFhZC1hZWEwLWI1ZjhmYmZjNmIxMbRkb3duc3RyZWFtX2NlbGxzX21hcIGlR2V0UniS2SRhMjNhMzY2ZC1mYTczLTQ2NzItYjU5Yy1lMTRiMmI4MTdjZTjZJDk5YzBlZTZiLWUwNDAtNDI2MS05OTJjLTBmNWEwZWI4MTU4Y7J1cHN0cmVhbV9jZWxsc19tYXCHp21pc3NpbmeQoS2QoSGQoS+Qo2FueZChK5CpaXNtaXNzaW5nkNkkMGM4MjEzMDgtNDVjYS00MzE3LTgwYjMtOWU4N2M2ODQwNDY1hLRwcmVjZWRlbmNlX2hldXJpc3RpYwmnY2VsbF9pZNkkMGM4MjEzMDgtNDVjYS00MzE3LTgwYjMtOWU4N2M2ODQwNDY1tGRvd25zdHJlYW1fY2VsbHNfbWFwgLJ1cHN0cmVhbV9jZWxsc19tYXCGp2NvbWJpbmWQpkBjaGFpbpChK5CiPT6QpHByb2SQp0FBUExfUniR2SRhMjNhMzY2ZC1mYTczLTQ2NzItYjU5Yy1lMTRiMmI4MTdjZTjZJGZhMDViMTMwLTRhYjUtNDllYS04YThjLWY2ZDlmY2ZkMTY1NoS0cHJlY2VkZW5jZV9oZXVyaXN0aWMJp2NlbGxfaWTZJGZhMDViMTMwLTRhYjUtNDllYS04YThjLWY2ZDlmY2ZkMTY1NrRkb3duc3RyZWFtX2NlbGxzX21hcICydXBzdHJlYW1fY2VsbHNfbWFw3gAUo05vdJChOpCnUG9ydGZSeJHZJDg3MDk5OTEwLWRmZGUtNGZlZS04OTEwLTFkNmJkMjVkNTE3MKF3kdkkZTVjMmI2OGYtNGYxZS00YmQxLTgyNDAtYWM1MmQyNjgzMDRirFBvcnRmU3VtbWFyeZHZJGIxYTc2OTA5LWE1M2YtNDkyYS1iZWMyLTU0MTVkOTBkNWRlNKRzcXJ0kKZmaWx0ZXKQoj0+kKdhZGpvaW50kKhwcmludG1hdJHZJGU3OTZjMTMxLTVhNjctNGE5OS04ZGYyLWI3ZWE1MmEwMzA1NqNjb3aQq3ByaW50eWVsbG93kdkkZTc5NmMxMzEtNWE2Ny00YTk5LThkZjItYjdlYTUyYTAzMDU2rXdpdGhfdGVybWluYWyQoV6Qpk1hdHJpeJChKpCiIT2Qoj09kKlwcmludGxuUHOR2SRlNzk2YzEzMS01YTY3LTRhOTktOGRmMi1iN2VhNTJhMDMwNTakY29uapDZJDY1NzJiZDJmLTc2ZTgtNDczNS05ZGZmLWQzNzFmZTdmNjliZIS0cHJlY2VkZW5jZV9oZXVyaXN0aWMJp2NlbGxfaWTZJDY1NzJiZDJmLTc2ZTgtNDczNS05ZGZmLWQzNzFmZTdmNjliZLRkb3duc3RyZWFtX2NlbGxzX21hcICydXBzdHJlYW1fY2VsbHNfbWFwgahnZXRpbmRleJDZJGNkZGE1MTgzLTQ2YzYtNDI4My1hNjZmLTE2OGVkNTc5MGE3N4S0cHJlY2VkZW5jZV9oZXVyaXN0aWMJp2NlbGxfaWTZJGNkZGE1MTgzLTQ2YzYtNDI4My1hNjZmLTE2OGVkNTc5MGE3N7Rkb3duc3RyZWFtX2NlbGxzX21hcICydXBzdHJlYW1fY2VsbHNfbWFwg6dQb3J0ZlJ4kdkkODcwOTk5MTAtZGZkZS00ZmVlLTg5MTAtMWQ2YmQyNWQ1MTcwpXN0YWNrkKZAY2hhaW6Q2SRjMWE1ZmYwZS1jZTVlLTQzOTAtYmVkNy1hZjViZTE0MGExNDWEtHByZWNlZGVuY2VfaGV1cmlzdGljCadjZWxsX2lk2SRjMWE1ZmYwZS1jZTVlLTQzOTAtYmVkNy1hZjViZTE0MGExNDW0ZG93bnN0cmVhbV9jZWxsc19tYXCAsnVwc3RyZWFtX2NlbGxzX21hcImjZXhwkKE6kK13aXRoX3Rlcm1pbmFskKNsb2eQoS+Qp2N1bXByb2SQoSuQpmN1bXN1bZCocHJpbnRtYXSR2SRlNzk2YzEzMS01YTY3LTRhOTktOGRmMi1iN2VhNTJhMDMwNTbZJDBlZWZkMGFmLWY1ZGQtNGI4Ny05YmUwLTM5MWQ4NmNmOGJmOYS0cHJlY2VkZW5jZV9oZXVyaXN0aWMJp2NlbGxfaWTZJDBlZWZkMGFmLWY1ZGQtNGI4Ny05YmUwLTM5MWQ4NmNmOGJmObRkb3duc3RyZWFtX2NlbGxzX21hcICydXBzdHJlYW1fY2VsbHNfbWFwgahnZXRpbmRleJDZJDBjZjg1ZGEyLWE1MzgtNDAyZC05Nzg1LTA5NDQyNTI2MGJkYoS0cHJlY2VkZW5jZV9oZXVyaXN0aWMJp2NlbGxfaWTZJDBjZjg1ZGEyLWE1MzgtNDAyZC05Nzg1LTA5NDQyNTI2MGJkYrRkb3duc3RyZWFtX2NlbGxzX21hcICydXBzdHJlYW1fY2VsbHNfbWFwiKE6kKdjb21iaW5lkKJkZpHZJDUyM2UwMTkxLTIzN2UtNGJkYi1iOWEzLTUzMDc5YjllOTJkNaZAY2hhaW6QqURhdGFGcmFtZZCnZ3JvdXBieZCiPT2QpG5yb3eQ2SQ0NTYyMTFhMS0zODI4LTQ1OGMtYTU5Ny1jYjM1YTg4YzM1Y2GEtHByZWNlZGVuY2VfaGV1cmlzdGljCadjZWxsX2lk2SQ0NTYyMTFhMS0zODI4LTQ1OGMtYTU5Ny1jYjM1YTg4YzM1Y2G0ZG93bnN0cmVhbV9jZWxsc19tYXCAsnVwc3RyZWFtX2NlbGxzX21hcIGoZ2V0aW5kZXiQ2SQ0NDZlMGRiMS04MTA3LTQ3MjQtYjc3NC01NjFjNWQzN2Y4N2GEtHByZWNlZGVuY2VfaGV1cmlzdGljCadjZWxsX2lk2SQ0NDZlMGRiMS04MTA3LTQ3MjQtYjc3NC01NjFjNWQzN2Y4N2G0ZG93bnN0cmVhbV9jZWxsc19tYXCBpEFBUEyS2SQ4M2EzOTkzZS0wNzNmLTRlODQtYWNmZS02MWJmYzc2ZGRlM2HZJGEyM2EzNjZkLWZhNzMtNDY3Mi1iNTljLWUxNGIyYjgxN2NlOLJ1cHN0cmVhbV9jZWxsc19tYXDeABGmc3RyaW5nkKE6kKZzZWxlY3SQpERhdGWQpG5yb3eQoj0+kKlpc21pc3NpbmeQpmZpbHRlcpCkQ1JTUJHZJDJhMThlMGVmLTQzMzItNGExMS1hZjlmLTNlZmVhM2Y4ZjY5ZKdjb21iaW5lkKVCeVJvd5Ckc29ydJCmQGNoYWlukKlEYXRhRnJhbWWQp2dyb3VwYnmQoj09kKl0cmFuc2Zvcm2Q2SQ3YjY2Njk1MS1iMzAzLTQxMDAtOGRkMi1mZWI4ZTJkMjJiMTSEtHByZWNlZGVuY2VfaGV1cmlzdGljCadjZWxsX2lk2SQ3YjY2Njk1MS1iMzAzLTQxMDAtOGRkMi1mZWI4ZTJkMjJiMTS0ZG93bnN0cmVhbV9jZWxsc19tYXCAsnVwc3RyZWFtX2NlbGxzX21hcIGoZ2V0aW5kZXiQ2SQ2YTI1Yzg5OC01NGIzLTRhZmMtYjc3MS1lMTNjN2NkYTY2ZWKEtHByZWNlZGVuY2VfaGV1cmlzdGljCadjZWxsX2lk2SQ2YTI1Yzg5OC01NGIzLTRhZmMtYjc3MS1lMTNjN2NkYTY2ZWK0ZG93bnN0cmVhbV9jZWxsc19tYXCAsnVwc3RyZWFtX2NlbGxzX21hcIGoZ2V0aW5kZXiQ2SRhNjVmYTBhZS0xY2ViLTQ1MWUtYWIzNy0wOGMwZDIzYTUwOGWEtHByZWNlZGVuY2VfaGV1cmlzdGljCadjZWxsX2lk2SRhNjVmYTBhZS0xY2ViLTQ1MWUtYWIzNy0wOGMwZDIzYTUwOGW0ZG93bnN0cmVhbV9jZWxsc19tYXCAsnVwc3RyZWFtX2NlbGxzX21hcIGoZ2V0aW5kZXiQ2SRiODA1MWQ2My1lZDI2LTRlMjEtOGE5OC1mNTY0YTNiOGE5NjeEtHByZWNlZGVuY2VfaGV1cmlzdGljCadjZWxsX2lk2SRiODA1MWQ2My1lZDI2LTRlMjEtOGE5OC1mNTY0YTNiOGE5Nje0ZG93bnN0cmVhbV9jZWxsc19tYXCAsnVwc3RyZWFtX2NlbGxzX21hcIGoZ2V0aW5kZXiQ2SRhZWUyZTcwOC02YjEzLTQ2MDktYjYwYy1hMzNjYmQ3NDEwMjOEtHByZWNlZGVuY2VfaGV1cmlzdGljCadjZWxsX2lk2SRhZWUyZTcwOC02YjEzLTQ2MDktYjYwYy1hMzNjYmQ3NDEwMjO0ZG93bnN0cmVhbV9jZWxsc19tYXCAsnVwc3RyZWFtX2NlbGxzX21hcIKoZGVzY3JpYmWQpENSU1CR2SQyYTE4ZTBlZi00MzMyLTRhMTEtYWY5Zi0zZWZlYTNmOGY2OWTZJGU3OTZjMTMxLTVhNjctNGE5OS04ZGYyLWI3ZWE1MmEwMzA1NoS0cHJlY2VkZW5jZV9oZXVyaXN0aWMHp2NlbGxfaWTZJGU3OTZjMTMxLTVhNjctNGE5OS04ZGYyLWI3ZWE1MmEwMzA1NrRkb3duc3RyZWFtX2NlbGxzX21hcIqpZm10TnVtUHNDkdkkZTc5NmMxMzEtNWE2Ny00YTk5LThkZjItYjdlYTUyYTAzMDU2rHByaW50bWFnZW50YZCrcHJpbnR5ZWxsb3eR2SRmYTA1YjEzMC00YWI1LTQ5ZWEtOGE4Yy1mNmQ5ZmNmZDE2NTanUGx1dG9VSZCoZm10TnVtUHOR2SRlNzk2YzEzMS01YTY3LTRhOTktOGRmMi1iN2VhNTJhMDMwNTapcHJpbnRibHVlkdkkMzM2OWJlNzEtMmExMS00ZGM4LThkMWItZDJiMWQ3NzQ5YzVmqHByaW50cmVkkdkkZTg5ZWNiNjItNGMwZi00MjY2LTg2M2ItNTI5Njk0Y2NhMWMwplByaW50ZpHZJGU3OTZjMTMxLTVhNjctNGE5OS04ZGYyLWI3ZWE1MmEwMzA1NqlwcmludGxuUHOU2SRlODllY2I2Mi00YzBmLTQyNjYtODYzYi01Mjk2OTRjY2ExYzDZJDRkZWNlMWRiLTMzMDUtNGI5NC04YTFiLWY1YzgzM2Q2NzQ0NNkkZTUzMThlMDAtYzA3NC00MDc0LThlYjQtMzI0NWNlY2ViNGM02SRmYTA1YjEzMC00YWI1LTQ5ZWEtOGE4Yy1mNmQ5ZmNmZDE2NTaocHJpbnRtYXSV2SQ2YzE5ZmJmMi0zNDJkLTQ4ZmYtOTdkNy05ODNiYjFhZTExMjLZJGMxYTVmZjBlLWNlNWUtNDM5MC1iZWQ3LWFmNWJlMTQwYTE0NdkkZTg5ZWNiNjItNGMwZi00MjY2LTg2M2ItNTI5Njk0Y2NhMWMw2SQzMzY5YmU3MS0yYTExLTRkYzgtOGQxYi1kMmIxZDc3NDljNWbZJGZhMDViMTMwLTRhYjUtNDllYS04YThjLWY2ZDlmY2ZkMTY1NrJ1cHN0cmVhbV9jZWxsc19tYXDeAEWnZm9yZWFjaJChIZChPpClVHVwbGWQpmlzbGVzc5CjYW55kKRheGVzkK1QcmludGYuZm9ybWF0kKdub3RoaW5nkKZsZW5ndGiQoTyQpUNjaGFykKdDZG91YmxlkKhmbXROdW1Qc5HZJGU3OTZjMTMxLTVhNjctNGE5OS04ZGYyLWI3ZWE1MmEwMzA1NqdWRVJTSU9OkKZNYXRyaXiQp2lzZW1wdHmQpmVsdHlwZZClcm91bmSQrVByaW50Zi5Gb3JtYXSQpEBkb2OQqWZtdE51bVBzQ5HZJGU3OTZjMTMxLTVhNjctNGE5OS04ZGYyLWI3ZWE1MmEwMzA1NqVmaXJzdJCpaXNtaXNzaW5nkKNBbnmQp0ludGVnZXKQpHJwYWSQo2lzYZCrcHJpbnRzdHlsZWSQoS2Qo0ludJChK5ClVW5pb26QpnN0cmluZ5CiSU+QqElPQnVmZmVykKR2Y2F0kKVpc25hbpCtQWJzdHJhY3RBcnJheZCnY29udmVydJCmU3RyaW5nkKVpc2luZpCpTGliYy5mcmVlkKdkaXNwbGF5kKZWYXJhcmeQpExpYmOQoV6QoiE9kKRmaWxskKI9PZCkQ2ludJCtQWJzdHJhY3RGbG9hdJChOpCnTm90aGluZ5CtdW5zYWZlX3N0cmluZ5CnQ3N0cmluZ5CkaGNhdJCjUHRykKRscGFkkKRCb29skKRzaXplkKNlbmSQpnN0ZG91dJCldGFrZSGQpXByaW50kKZQcmludGaR2SRlNzk2YzEzMS01YTY3LTRhOTktOGRmMi1iN2VhNTJhMDMwNTajUmVmkKVjY2FsbJCnbWF4aW11bZDZJDgzYTM5OTNlLTA3M2YtNGU4NC1hY2ZlLTYxYmZjNzZkZGUzYYS0cHJlY2VkZW5jZV9oZXVyaXN0aWMJp2NlbGxfaWTZJDgzYTM5OTNlLTA3M2YtNGU4NC1hY2ZlLTYxYmZjNzZkZGUzYbRkb3duc3RyZWFtX2NlbGxzX21hcICydXBzdHJlYW1fY2VsbHNfbWFwiKRzb3J0kKZAY2hhaW6QpnNlbGVjdJCjbGFnkKdncm91cGJ5kKRBQVBMkdkkNDQ2ZTBkYjEtODEwNy00NzI0LWI3NzQtNTYxYzVkMzdmODdhqXRyYW5zZm9ybZCiPT6QtGNlbGxfZXhlY3V0aW9uX29yZGVy3ABC2SQyYTUwNTViNC0yMTM3LTQ0N2QtYmZkMi1hMjZjYzRiMTQ3MzXZJGU3OTZjMTMxLTVhNjctNGE5OS04ZGYyLWI3ZWE1MmEwMzA1NtkkYTU0ODMxNGItNTExZC00MzE5LThmN2ItOTVhMzE1OGJhOTBj2SRiZDM1MmYyZS0zYjdmLTRiNWItYWU0My1mZDI0NDQ0NzM0N2HZJDYzMzRkNDk1LWZhOTEtNDQyOC1hMjAzLTRkODIzNDMyNGVjZdkkNmMxOWZiZjItMzQyZC00OGZmLTk3ZDctOTgzYmIxYWUxMTIy2SQ3NTAwN2M1Ny05NGU4LTQ5ZmMtOGJiYi0zZDM5ZDYyMDdmYTLZJGMxYTVmZjBlLWNlNWUtNDM5MC1iZWQ3LWFmNWJlMTQwYTE0NdkkZTZjMTk4ZjQtNWFiZC00NjhjLTg0MWMtOGE3YjAzMmYxZGMy2SRlODllY2I2Mi00YzBmLTQyNjYtODYzYi01Mjk2OTRjY2ExYzDZJDMzNjliZTcxLTJhMTEtNGRjOC04ZDFiLWQyYjFkNzc0OWM1ZtkkNGRlY2UxZGItMzMwNS00Yjk0LThhMWItZjVjODMzZDY3NDQ02SRlNTMxOGUwMC1jMDc0LTQwNzQtOGViNC0zMjQ1Y2VjZWI0YzTZJGM1MzdhMmU2LTExNGYtNGE4Ni05MzIzLWNjN2U3Yjk0Y2ViM9kkOTgwODM5ODktYTAwNi00Y2YzLWFmZDEtMGIzNDk1ZTFkNWI22SRlMzUyOWJlZC1hYzg5LTRlNWYtYTFlMi1lMmE3ZDRjN2IwNzPZJDJhMThlMGVmLTQzMzItNGExMS1hZjlmLTNlZmVhM2Y4ZjY5ZNkkYWQyNmU1NGItODViMS00NjMxLWIxZWQtNTMxODczYmE3MTJh2SRhZWUyZTcwOC02YjEzLTQ2MDktYjYwYy1hMzNjYmQ3NDEwMjPZJGQ5OTE2MGI3LTk0MjEtNDA0ZC1iZWY0LTU1ZjYzNGQ2ZTU4NtkkMjIwNzM5MTAtZjY3Ni00ZThiLThiODAtMzhmZWQ1N2JmMzk52SQ4OTgwYTk2My1iNmMwLTQ4Y2QtOTMxNi1iOTZkZjJhY2Y0YzbZJDZhMjVjODk4LTU0YjMtNGFmYy1iNzcxLWUxM2M3Y2RhNjZlYtkkNDU2MjExYTEtMzgyOC00NThjLWE1OTctY2IzNWE4OGMzNWNh2SQ1OTA3OTllYi1iNWUwLTRlZTAtYmRiNS1hZTRiZDAxZjU1NzbZJGQ4NmMzNzY0LTgxZmItNGRjYy1hZjA0LTA5NDM1NmEyNTIxNtkkNmNiNjM5NDctNjQ5MC00YTAyLThiNzQtNTVlYjVlMmVmYTk22SRhNjVmYTBhZS0xY2ViLTQ1MWUtYWIzNy0wOGMwZDIzYTUwOGXZJDUyM2UwMTkxLTIzN2UtNGJkYi1iOWEzLTUzMDc5YjllOTJkNdkkYjgwNTFkNjMtZWQyNi00ZTIxLThhOTgtZjU2NGEzYjhhOTY32SRhMGNmMDM2MS00MjJhLTRiY2QtOGI5ZS05NDNkYzAwMDQ0YjPZJDZiNzIwYWRlLTVlNGMtNGY1OC04ZmNkLWY2MDlkZjI5ZGY3YtkkMGNmODVkYTItYTUzOC00MDJkLTk3ODUtMDk0NDI1MjYwYmRi2SQ4YTg2OWVjYi1hNmVkLTQ5OWQtODczYi0xMzFjOWJjMmUwYjHZJDQ0NmUwZGIxLTgxMDctNDcyNC1iNzc0LTU2MWM1ZDM3Zjg3YdkkNDU4Njg4OTQtYTMxNy00MzcwLTk2MzEtNmVmM2MzMTY2MWUz2SQ3YjY2Njk1MS1iMzAzLTQxMDAtOGRkMi1mZWI4ZTJkMjJiMTTZJDgzYTM5OTNlLTA3M2YtNGU4NC1hY2ZlLTYxYmZjNzZkZGUzYdkkNDgwNWU4YTYtMzRkNi00OWYwLTg3MDYtODhjOTE2ZTQ2ODlm2SQ5YjgxNjIzNi1mOWRlLTRhYWQtYWVhMC1iNWY4ZmJmYzZiMTHZJGQzMDBiZTY1LWY0OTQtNDE4MS05OTI0LWU2OWNjNmMwNGYwOdkkMmJkMTY3NGQtMjI1NC00NWE4LTlmMDItNWNhYTViZDBiZDFj2SRhMjNhMzY2ZC1mYTczLTQ2NzItYjU5Yy1lMTRiMmI4MTdjZTjZJDViYWExYTlmLTdhZDUtNGJmYy1iNDY4LTllMGI0MDQzODU0ONkkMGM4MjEzMDgtNDVjYS00MzE3LTgwYjMtOWU4N2M2ODQwNDY12SQ4YzU4Y2JjNi1jZmJkLTQzZGUtOWU2OC1iYmFmNDQ3MjEzZmHZJGE0ODhhNjc5LTZkYzAtNGEzMy1iMzI3LTlkMGY2ZTNiOWViMtkkNzZhZGY5Y2ItZGIyYy00Yjc2LTk2MTQtYmUxMmJiOWM1NzY02SQ5OWMwZWU2Yi1lMDQwLTQyNjEtOTkyYy0wZjVhMGViODE1OGPZJDBlZWZkMGFmLWY1ZGQtNGI4Ny05YmUwLTM5MWQ4NmNmOGJmOdkkZGEzNWI5YTAtNWFjOC00NjA4LThkYzUtMmMwODkwMWNjMmUz2SQ2NTcyYmQyZi03NmU4LTQ3MzUtOWRmZi1kMzcxZmU3ZjY5YmTZJGU1YzJiNjhmLTRmMWUtNGJkMS04MjQwLWFjNTJkMjY4MzA0YtkkMTZjYzcwNzQtZDc4Ni00YmI1LWE3MzUtMTg3NDY1ZTgxNWUy2SQ4NzA5OTkxMC1kZmRlLTRmZWUtODkxMC0xZDZiZDI1ZDUxNzDZJGM2M2U5NmU3LTBlYTAtNGRhZi1hMjMwLTI2YjI1OGYxMmU3OdkkMDdlNzY3ZTYtZDZmYy00ZjUyLThiOWQtNzJjYTdjNjMzOTU12SRmYjY5ZDcwMS1lNjIzLTQ0M2UtYjZmMC1jNzUxODBiOWJlMWLZJGNiNzhiZThjLWYwMzktNDM0ZS1hY2JiLTkzNzVmMzE3NDU4ONkkY2RkYTUxODMtNDZjNi00MjgzLWE2NmYtMTY4ZWQ1NzkwYTc32SRjNzk5ZjFhZC1iODJiLTQ0MjEtYmI3MS1kMDdjYjdiNmFmZDfZJGIxYTc2OTA5LWE1M2YtNDkyYS1iZWMyLTU0MTVkOTBkNWRlNNkkNGNmZWRhNmItNmIxMi00ZmZhLTkzNzktMTVjMDBiNTNhNDlk2SQ4MDg2NTM4Ni03OWNmLTQ1YjAtODM2ZC1lNTVhMWNhNjQxNzTZJGFhMjFmMDVjLTFlNzgtNDkxOS04NmZhLTU3YWU4OWQ0ZDYzM9kkZmEwNWIxMzAtNGFiNS00OWVhLThhOGMtZjZkOWZjZmQxNjU2tGxhc3RfaG90X3JlbG9hZF90aW1lywAAAAAAAAAAqXNob3J0cGF0aLJsZWN0dXJlXzA5X3dTb2wuamyucHJvY2Vzc19zdGF0dXOlcmVhZHmkcGF0aNlmQzpcVXNlcnNcbWZsZWNcRHJvcGJveFxXb3JrXFRlYWNoaW5nXEZJTkM2NzJcR2l0aHViX0NvdXJzZXBhZ2Vcbm90ZWJvb2tzXGxlY3R1cmVfMDlcbGVjdHVyZV8wOV93U29sLmpsrmxhc3Rfc2F2ZV90aW1ly0HYhwel/Em6qmNlbGxfb3JkZXLcAELZJGU3OTZjMTMxLTVhNjctNGE5OS04ZGYyLWI3ZWE1MmEwMzA1NtkkMmE1MDU1YjQtMjEzNy00NDdkLWJmZDItYTI2Y2M0YjE0NzM12SRhNTQ4MzE0Yi01MTFkLTQzMTktOGY3Yi05NWEzMTU4YmE5MGPZJGJkMzUyZjJlLTNiN2YtNGI1Yi1hZTQzLWZkMjQ0NDQ3MzQ3YdkkNjMzNGQ0OTUtZmE5MS00NDI4LWEyMDMtNGQ4MjM0MzI0ZWNl2SQ2YzE5ZmJmMi0zNDJkLTQ4ZmYtOTdkNy05ODNiYjFhZTExMjLZJDc1MDA3YzU3LTk0ZTgtNDlmYy04YmJiLTNkMzlkNjIwN2ZhMtkkYzFhNWZmMGUtY2U1ZS00MzkwLWJlZDctYWY1YmUxNDBhMTQ12SRlNmMxOThmNC01YWJkLTQ2OGMtODQxYy04YTdiMDMyZjFkYzLZJGU4OWVjYjYyLTRjMGYtNDI2Ni04NjNiLTUyOTY5NGNjYTFjMNkkMzM2OWJlNzEtMmExMS00ZGM4LThkMWItZDJiMWQ3NzQ5YzVm2SQ0ZGVjZTFkYi0zMzA1LTRiOTQtOGExYi1mNWM4MzNkNjc0NDTZJGU1MzE4ZTAwLWMwNzQtNDA3NC04ZWI0LTMyNDVjZWNlYjRjNNkkYzUzN2EyZTYtMTE0Zi00YTg2LTkzMjMtY2M3ZTdiOTRjZWIz2SQ5ODA4Mzk4OS1hMDA2LTRjZjMtYWZkMS0wYjM0OTVlMWQ1YjbZJGUzNTI5YmVkLWFjODktNGU1Zi1hMWUyLWUyYTdkNGM3YjA3M9kkMmExOGUwZWYtNDMzMi00YTExLWFmOWYtM2VmZWEzZjhmNjlk2SRhZDI2ZTU0Yi04NWIxLTQ2MzEtYjFlZC01MzE4NzNiYTcxMmHZJGFlZTJlNzA4LTZiMTMtNDYwOS1iNjBjLWEzM2NiZDc0MTAyM9kkZDk5MTYwYjctOTQyMS00MDRkLWJlZjQtNTVmNjM0ZDZlNTg22SQyMjA3MzkxMC1mNjc2LTRlOGItOGI4MC0zOGZlZDU3YmYzOTnZJDg5ODBhOTYzLWI2YzAtNDhjZC05MzE2LWI5NmRmMmFjZjRjNtkkNmEyNWM4OTgtNTRiMy00YWZjLWI3NzEtZTEzYzdjZGE2NmVi2SQ0NTYyMTFhMS0zODI4LTQ1OGMtYTU5Ny1jYjM1YTg4YzM1Y2HZJDU5MDc5OWViLWI1ZTAtNGVlMC1iZGI1LWFlNGJkMDFmNTU3NtkkZDg2YzM3NjQtODFmYi00ZGNjLWFmMDQtMDk0MzU2YTI1MjE22SQ2Y2I2Mzk0Ny02NDkwLTRhMDItOGI3NC01NWViNWUyZWZhOTbZJGE2NWZhMGFlLTFjZWItNDUxZS1hYjM3LTA4YzBkMjNhNTA4ZdkkNTIzZTAxOTEtMjM3ZS00YmRiLWI5YTMtNTMwNzliOWU5MmQ12SRiODA1MWQ2My1lZDI2LTRlMjEtOGE5OC1mNTY0YTNiOGE5NjfZJGEwY2YwMzYxLTQyMmEtNGJjZC04YjllLTk0M2RjMDAwNDRiM9kkNmI3MjBhZGUtNWU0Yy00ZjU4LThmY2QtZjYwOWRmMjlkZjdi2SQwY2Y4NWRhMi1hNTM4LTQwMmQtOTc4NS0wOTQ0MjUyNjBiZGLZJDhhODY5ZWNiLWE2ZWQtNDk5ZC04NzNiLTEzMWM5YmMyZTBiMdkkNDQ2ZTBkYjEtODEwNy00NzI0LWI3NzQtNTYxYzVkMzdmODdh2SQ0NTg2ODg5NC1hMzE3LTQzNzAtOTYzMS02ZWYzYzMxNjYxZTPZJDdiNjY2OTUxLWIzMDMtNDEwMC04ZGQyLWZlYjhlMmQyMmIxNNkkODNhMzk5M2UtMDczZi00ZTg0LWFjZmUtNjFiZmM3NmRkZTNh2SQ0ODA1ZThhNi0zNGQ2LTQ5ZjAtODcwNi04OGM5MTZlNDY4OWbZJDliODE2MjM2LWY5ZGUtNGFhZC1hZWEwLWI1ZjhmYmZjNmIxMdkkZDMwMGJlNjUtZjQ5NC00MTgxLTk5MjQtZTY5Y2M2YzA0ZjA52SQyYmQxNjc0ZC0yMjU0LTQ1YTgtOWYwMi01Y2FhNWJkMGJkMWPZJGEyM2EzNjZkLWZhNzMtNDY3Mi1iNTljLWUxNGIyYjgxN2NlONkkNWJhYTFhOWYtN2FkNS00YmZjLWI0NjgtOWUwYjQwNDM4NTQ42SQwYzgyMTMwOC00NWNhLTQzMTctODBiMy05ZTg3YzY4NDA0NjXZJDhjNThjYmM2LWNmYmQtNDNkZS05ZTY4LWJiYWY0NDcyMTNmYdkkYTQ4OGE2NzktNmRjMC00YTMzLWIzMjctOWQwZjZlM2I5ZWIy2SQ3NmFkZjljYi1kYjJjLTRiNzYtOTYxNC1iZTEyYmI5YzU3NjTZJDk5YzBlZTZiLWUwNDAtNDI2MS05OTJjLTBmNWEwZWI4MTU4Y9kkMGVlZmQwYWYtZjVkZC00Yjg3LTliZTAtMzkxZDg2Y2Y4YmY52SRkYTM1YjlhMC01YWM4LTQ2MDgtOGRjNS0yYzA4OTAxY2MyZTPZJDY1NzJiZDJmLTc2ZTgtNDczNS05ZGZmLWQzNzFmZTdmNjliZNkkZTVjMmI2OGYtNGYxZS00YmQxLTgyNDAtYWM1MmQyNjgzMDRi2SQxNmNjNzA3NC1kNzg2LTRiYjUtYTczNS0xODc0NjVlODE1ZTLZJDg3MDk5OTEwLWRmZGUtNGZlZS04OTEwLTFkNmJkMjVkNTE3MNkkYzYzZTk2ZTctMGVhMC00ZGFmLWEyMzAtMjZiMjU4ZjEyZTc52SQwN2U3NjdlNi1kNmZjLTRmNTItOGI5ZC03MmNhN2M2MzM5NTXZJGZiNjlkNzAxLWU2MjMtNDQzZS1iNmYwLWM3NTE4MGI5YmUxYtkkY2I3OGJlOGMtZjAzOS00MzRlLWFjYmItOTM3NWYzMTc0NTg42SRjZGRhNTE4My00NmM2LTQyODMtYTY2Zi0xNjhlZDU3OTBhNzfZJGM3OTlmMWFkLWI4MmItNDQyMS1iYjcxLWQwN2NiN2I2YWZkN9kkYjFhNzY5MDktYTUzZi00OTJhLWJlYzItNTQxNWQ5MGQ1ZGU02SQ0Y2ZlZGE2Yi02YjEyLTRmZmEtOTM3OS0xNWMwMGI1M2E0OWTZJDgwODY1Mzg2LTc5Y2YtNDViMC04MzZkLWU1NWExY2E2NDE3NNkkYWEyMWYwNWMtMWU3OC00OTE5LTg2ZmEtNTdhZTg5ZDRkNjMz2SRmYTA1YjEzMC00YWI1LTQ5ZWEtOGE4Yy1mNmQ5ZmNmZDE2NTaxcHVibGlzaGVkX29iamVjdHOApW5icGtnh7JpbnN0YWxsZWRfdmVyc2lvbnOIo0NTVqYwLjEwLjKlRGF0ZXOmc3RkbGliqlN0YXRpc3RpY3Omc3RkbGlirVNoaWZ0ZWRBcnJheXOlMS4wLjClQ2hhaW6mMC40LjEwqkRhdGFGcmFtZXOlMS4zLjKnUGx1dG9VSaYwLjcuMzWmUHJpbnRmpnN0ZGxpYrB0ZXJtaW5hbF9vdXRwdXRziKNDU1baAU8bWzMybRtbMW0gIE5vIENoYW5nZXMbWzIybRtbMzltIHRvIGBDOlxVc2Vyc1xtZmxlY1xBcHBEYXRhXExvY2FsXFRlbXBcamxfNWVleVFrXFByb2plY3QudG9tbGAKG1szMm0bWzFtICBObyBDaGFuZ2VzG1syMm0bWzM5bSB0byBgQzpcVXNlcnNcbWZsZWNcQXBwRGF0YVxMb2NhbFxUZW1wXGpsXzVlZXlRa1xNYW5pZmVzdC50b21sYAobWzMybRtbMW1QcmVjb21waWxpbmcbWzIybRtbMzltIHByb2plY3QuLi4KG1szMm0gIOKckyAbWzM5bVBsdXRvVUkKICAxIGRlcGVuZGVuY3kgc3VjY2Vzc2Z1bGx5IHByZWNvbXBpbGVkIGluIDEzIHNlY29uZHMgKDQwIGFscmVhZHkgcHJlY29tcGlsZWQpCqpTdGF0aXN0aWNz2gFPG1szMm0bWzFtICBObyBDaGFuZ2VzG1syMm0bWzM5bSB0byBgQzpcVXNlcnNcbWZsZWNcQXBwRGF0YVxMb2NhbFxUZW1wXGpsXzVlZXlRa1xQcm9qZWN0LnRvbWxgChtbMzJtG1sxbSAgTm8gQ2hhbmdlcxtbMjJtG1szOW0gdG8gYEM6XFVzZXJzXG1mbGVjXEFwcERhdGFcTG9jYWxcVGVtcFxqbF81ZWV5UWtcTWFuaWZlc3QudG9tbGAKG1szMm0bWzFtUHJlY29tcGlsaW5nG1syMm0bWzM5bSBwcm9qZWN0Li4uChtbMzJtICDinJMgG1szOW1QbHV0b1VJCiAgMSBkZXBlbmRlbmN5IHN1Y2Nlc3NmdWxseSBwcmVjb21waWxlZCBpbiAxMyBzZWNvbmRzICg0MCBhbHJlYWR5IHByZWNvbXBpbGVkKQqlRGF0ZXPaAU8bWzMybRtbMW0gIE5vIENoYW5nZXMbWzIybRtbMzltIHRvIGBDOlxVc2Vyc1xtZmxlY1xBcHBEYXRhXExvY2FsXFRlbXBcamxfNWVleVFrXFByb2plY3QudG9tbGAKG1szMm0bWzFtICBObyBDaGFuZ2VzG1syMm0bWzM5bSB0byBgQzpcVXNlcnNcbWZsZWNcQXBwRGF0YVxMb2NhbFxUZW1wXGpsXzVlZXlRa1xNYW5pZmVzdC50b21sYAobWzMybRtbMW1QcmVjb21waWxpbmcbWzIybRtbMzltIHByb2plY3QuLi4KG1szMm0gIOKckyAbWzM5bVBsdXRvVUkKICAxIGRlcGVuZGVuY3kgc3VjY2Vzc2Z1bGx5IHByZWNvbXBpbGVkIGluIDEzIHNlY29uZHMgKDQwIGFscmVhZHkgcHJlY29tcGlsZWQpCq1TaGlmdGVkQXJyYXlz2gFPG1szMm0bWzFtICBObyBDaGFuZ2VzG1syMm0bWzM5bSB0byBgQzpcVXNlcnNcbWZsZWNcQXBwRGF0YVxMb2NhbFxUZW1wXGpsXzVlZXlRa1xQcm9qZWN0LnRvbWxgChtbMzJtG1sxbSAgTm8gQ2hhbmdlcxtbMjJtG1szOW0gdG8gYEM6XFVzZXJzXG1mbGVjXEFwcERhdGFcTG9jYWxcVGVtcFxqbF81ZWV5UWtcTWFuaWZlc3QudG9tbGAKG1szMm0bWzFtUHJlY29tcGlsaW5nG1syMm0bWzM5bSBwcm9qZWN0Li4uChtbMzJtICDinJMgG1szOW1QbHV0b1VJCiAgMSBkZXBlbmRlbmN5IHN1Y2Nlc3NmdWxseSBwcmVjb21waWxlZCBpbiAxMyBzZWNvbmRzICg0MCBhbHJlYWR5IHByZWNvbXBpbGVkKQqlQ2hhaW7aAU8bWzMybRtbMW0gIE5vIENoYW5nZXMbWzIybRtbMzltIHRvIGBDOlxVc2Vyc1xtZmxlY1xBcHBEYXRhXExvY2FsXFRlbXBcamxfNWVleVFrXFByb2plY3QudG9tbGAKG1szMm0bWzFtICBObyBDaGFuZ2VzG1syMm0bWzM5bSB0byBgQzpcVXNlcnNcbWZsZWNcQXBwRGF0YVxMb2NhbFxUZW1wXGpsXzVlZXlRa1xNYW5pZmVzdC50b21sYAobWzMybRtbMW1QcmVjb21waWxpbmcbWzIybRtbMzltIHByb2plY3QuLi4KG1szMm0gIOKckyAbWzM5bVBsdXRvVUkKICAxIGRlcGVuZGVuY3kgc3VjY2Vzc2Z1bGx5IHByZWNvbXBpbGVkIGluIDEzIHNlY29uZHMgKDQwIGFscmVhZHkgcHJlY29tcGlsZWQpCqdQbHV0b1VJ2gFPG1szMm0bWzFtICBObyBDaGFuZ2VzG1syMm0bWzM5bSB0byBgQzpcVXNlcnNcbWZsZWNcQXBwRGF0YVxMb2NhbFxUZW1wXGpsXzVlZXlRa1xQcm9qZWN0LnRvbWxgChtbMzJtG1sxbSAgTm8gQ2hhbmdlcxtbMjJtG1szOW0gdG8gYEM6XFVzZXJzXG1mbGVjXEFwcERhdGFcTG9jYWxcVGVtcFxqbF81ZWV5UWtcTWFuaWZlc3QudG9tbGAKG1szMm0bWzFtUHJlY29tcGlsaW5nG1syMm0bWzM5bSBwcm9qZWN0Li4uChtbMzJtICDinJMgG1szOW1QbHV0b1VJCiAgMSBkZXBlbmRlbmN5IHN1Y2Nlc3NmdWxseSBwcmVjb21waWxlZCBpbiAxMyBzZWNvbmRzICg0MCBhbHJlYWR5IHByZWNvbXBpbGVkKQqqRGF0YUZyYW1lc9oBTxtbMzJtG1sxbSAgTm8gQ2hhbmdlcxtbMjJtG1szOW0gdG8gYEM6XFVzZXJzXG1mbGVjXEFwcERhdGFcTG9jYWxcVGVtcFxqbF81ZWV5UWtcUHJvamVjdC50b21sYAobWzMybRtbMW0gIE5vIENoYW5nZXMbWzIybRtbMzltIHRvIGBDOlxVc2Vyc1xtZmxlY1xBcHBEYXRhXExvY2FsXFRlbXBcamxfNWVleVFrXE1hbmlmZXN0LnRvbWxgChtbMzJtG1sxbVByZWNvbXBpbGluZxtbMjJtG1szOW0gcHJvamVjdC4uLgobWzMybSAg4pyTIBtbMzltUGx1dG9VSQogIDEgZGVwZW5kZW5jeSBzdWNjZXNzZnVsbHkgcHJlY29tcGlsZWQgaW4gMTMgc2Vjb25kcyAoNDAgYWxyZWFkeSBwcmVjb21waWxlZCkKplByaW50ZtoBTxtbMzJtG1sxbSAgTm8gQ2hhbmdlcxtbMjJtG1szOW0gdG8gYEM6XFVzZXJzXG1mbGVjXEFwcERhdGFcTG9jYWxcVGVtcFxqbF81ZWV5UWtcUHJvamVjdC50b21sYAobWzMybRtbMW0gIE5vIENoYW5nZXMbWzIybRtbMzltIHRvIGBDOlxVc2Vyc1xtZmxlY1xBcHBEYXRhXExvY2FsXFRlbXBcamxfNWVleVFrXE1hbmlmZXN0LnRvbWxgChtbMzJtG1sxbVByZWNvbXBpbGluZxtbMjJtG1szOW0gcHJvamVjdC4uLgobWzMybSAg4pyTIBtbMzltUGx1dG9VSQogIDEgZGVwZW5kZW5jeSBzdWNjZXNzZnVsbHkgcHJlY29tcGlsZWQgaW4gMTMgc2Vjb25kcyAoNDAgYWxyZWFkeSBwcmVjb21waWxlZCkKp2VuYWJsZWTDt3Jlc3RhcnRfcmVjb21tZW5kZWRfbXNnwLRyZXN0YXJ0X3JlcXVpcmVkX21zZ8CtYnVzeV9wYWNrYWdlc5CsaW5zdGFudGlhdGVkw6tjZWxsX2lucHV0c94AQtkkZDk5MTYwYjctOTQyMS00MDRkLWJlZjQtNTVmNjM0ZDZlNTg2hKdjZWxsX2lk2SRkOTkxNjBiNy05NDIxLTQwNGQtYmVmNC01NWY2MzRkNmU1ODawcnVubmluZ19kaXNhYmxlZMKkY29kZdlDbWQiIiIKKipMZXQncyBjb25zaWRlciBhIHNldCBvZiBzdG9ja3MgaW4gdGhlIERvdyBKb25lcyBJbmRleCoqCiIiIqtjb2RlX2ZvbGRlZMPZJDk4MDgzOTg5LWEwMDYtNGNmMy1hZmQxLTBiMzQ5NWUxZDViNoSnY2VsbF9pZNkkOTgwODM5ODktYTAwNi00Y2YzLWFmZDEtMGIzNDk1ZTFkNWI2sHJ1bm5pbmdfZGlzYWJsZWTCpGNvZGXZrm1kIiIiClRvIGlsbHVzdHJhdGUgdGhlIGNvbmNlcHRzLCB3ZSB3aWxsIGJlIHdvcmtpbmcgd2l0aCB0aGUgQ1JTUCBkYXRhc2V0IGZyb20gV1JEUy4KCj4gRnJvbSBDQU5WQVMsIGRvd25sb2FkIHRoZSBjc3YgZmlsZSAqKkNSU1BfbW9udGhseS5jc3YqKiBmcm9tIHRoZSBkYXRhc2V0IHNlY3Rpb24uCiIiIqtjb2RlX2ZvbGRlZMPZJDIyMDczOTEwLWY2NzYtNGU4Yi04YjgwLTM4ZmVkNTdiZjM5OYSnY2VsbF9pZNkkMjIwNzM5MTAtZjY3Ni00ZThiLThiODAtMzhmZWQ1N2JmMzk5sHJ1bm5pbmdfZGlzYWJsZWTCpGNvZGXaA3BtZCIiIgpUaWNrZXIgfCBDb21wYW55IE5hbWUKOi0tLS0tLXw6LS0tLS0tLS0tLS0tLQpBQVBMIHwgCUFwcGxlIEluYwpBTUdOIHwgCUFtZ2VuIEluYwpBWFAgwqB8wqAJQW1lcmljYW4gRXhwcmVzcyBDbwpCQSDCoCB8IAlCb2VpbmcgQ28vVGhlCkNBVCDCoHzCoAlDYXRlcnBpbGxhciBJbmMKQ1JNIMKgfMKgCXNhbGVzZm9yY2UuY29tIEluYwpDU0NPIHwgCUNpc2NvIFN5c3RlbXMgSW5jL0RlbGF3YXJlCkNWWCDCoHzCoAlDaGV2cm9uIENvcnAKRElTIMKgfMKgCVdhbHQgRGlzbmV5IENvL1RoZQpET1cgwqB8wqAJRG93IEluYwpHUyDCoCB8IAlHb2xkbWFuIFNhY2hzIEdyb3VwIEluYy9UaGUKSEQgwqAgfCAJSG9tZSBEZXBvdCBJbmMvVGhlCkhPTiDCoHzCoAlIb25leXdlbGwgSW50ZXJuYXRpb25hbCBJbmMKSUJNIMKgfMKgCUludGVybmF0aW9uYWwgQnVzaW5lc3MgTWFjaGluZXMgQ29ycApJTlRDIHwgCUludGVsIENvcnAKSk5KIMKgfMKgCUpvaG5zb24gJiBKb2huc29uCkpQTSDCoHzCoAlKUE1vcmdhbiBDaGFzZSAmIENvCktPIMKgIHwgCUNvY2EtQ29sYSBDby9UaGUKTUNEIMKgfMKgCU1jRG9uYWxkJ3MgQ29ycApNTU0gwqB8wqAJM00gQ28KTVJLIMKgfMKgCU1lcmNrICYgQ28gSW5jCk1TRlQgfCAJTWljcm9zb2Z0IENvcnAKTktFIMKgfMKgCU5JS0UgSW5jClBHIMKgIHwgCVByb2N0ZXIgJiBHYW1ibGUgQ28vVGhlClRSViDCoHzCoAlUcmF2ZWxlcnMgQ29zIEluYy9UaGUKVU5IIMKgfMKgCVVuaXRlZEhlYWx0aCBHcm91cCBJbmMKViDCoCDCoHzCoAlWaXNhIEluYwpWWiDCoCB8IAlWZXJpem9uIENvbW11bmljYXRpb25zIEluYwpXQkEgwqB8wqAJV2FsZ3JlZW5zIEJvb3RzIEFsbGlhbmNlIEluYwpXTVQgwqB8wqAJV2FsbWFydCBJbmMKIiIiq2NvZGVfZm9sZGVkw9kkYzUzN2EyZTYtMTE0Zi00YTg2LTkzMjMtY2M3ZTdiOTRjZWIzhKdjZWxsX2lk2SRjNTM3YTJlNi0xMTRmLTRhODYtOTMyMy1jYzdlN2I5NGNlYjOwcnVubmluZ19kaXNhYmxlZMKkY29kZbhtZCIiIgojIENSU1AgZGF0YXNldAoiIiKrY29kZV9mb2xkZWTD2SQ2MzM0ZDQ5NS1mYTkxLTQ0MjgtYTIwMy00ZDgyMzQzMjRlY2WEp2NlbGxfaWTZJDYzMzRkNDk1LWZhOTEtNDQyOC1hMjAzLTRkODIzNDMyNGVjZbBydW5uaW5nX2Rpc2FibGVkwqRjb2Rl2VdtZCIiIgpMZXQncyBsb29rIGF0IGFuIGV4YW1wbGUgd2hlcmUgd2UgaGF2ZSBhIHN0b2NrIHdpdGggdGhyZWUgcHJpY2Ugb2JzZXJ2YXRpb25zLgoiIiKrY29kZV9mb2xkZWTD2SQ4YTg2OWVjYi1hNmVkLTQ5OWQtODczYi0xMzFjOWJjMmUwYjGEp2NlbGxfaWTZJDhhODY5ZWNiLWE2ZWQtNDk5ZC04NzNiLTEzMWM5YmMyZTBiMbBydW5uaW5nX2Rpc2FibGVkwqRjb2Rl2VRtZCIiIgoqKkxldCdzIG5vdyBjcmVhdGUgYSBuZXcgZGF0YWZyYW1lIHdpdGggYWxsIHRoZSBjaGFuZ2VzIHdlIHdhbnQgdG8gbWFrZS4qKgoiIiKrY29kZV9mb2xkZWTD2SQ2Y2I2Mzk0Ny02NDkwLTRhMDItOGI3NC01NWViNWUyZWZhOTaEp2NlbGxfaWTZJDZjYjYzOTQ3LTY0OTAtNGEwMi04Yjc0LTU1ZWI1ZTJlZmE5NrBydW5uaW5nX2Rpc2FibGVkwqRjb2Rl2XBsZXQKCWRmID0gQGNoYWluIENSU1AgYmVnaW4KCQlmaWx0ZXIoOlRJQ0tFUiA9PiAoeC0+IGlzbWlzc2luZyh4KSA/IGZhbHNlIDogeD09IkFBUEwiKSxfKQoJCWRlc2NyaWJlKF8pCgllbmQKZW5kq2NvZGVfZm9sZGVkwtkkODk4MGE5NjMtYjZjMC00OGNkLTkzMTYtYjk2ZGYyYWNmNGM2hKdjZWxsX2lk2SQ4OTgwYTk2My1iNmMwLTQ4Y2QtOTMxNi1iOTZkZjJhY2Y0YzawcnVubmluZ19kaXNhYmxlZMKkY29kZdlGbWQiIiIKKipMZXQncyB3b3JrIHdpdGggYSBzaW5nbGUgc3RvY2sgZmlyc3QuIFdlIHdpbGwgcGljayBBQVBMLioqCiIiIqtjb2RlX2ZvbGRlZMPZJGEyM2EzNjZkLWZhNzMtNDY3Mi1iNTljLWUxNGIyYjgxN2NlOISnY2VsbF9pZNkkYTIzYTM2NmQtZmE3My00NjcyLWI1OWMtZTE0YjJiODE3Y2U4sHJ1bm5pbmdfZGlzYWJsZWTCpGNvZGXaAY1BQVBMX1J4ID0gQGNoYWluIEFBUEwgYmVnaW4KCXNvcnQoOmRhdGUpCglncm91cGJ5KDpUSUNLRVIpCgl0cmFuc2Zvcm0oOlBSQyA9PiAoeC0+IGxhZyh4KSkgPT4gOlBSQ19MKQoJc2VsZWN0KDpkYXRlLCA6VElDS0VSLCA6UEVSTUNPLCA6UEVSTU5PLCA6UFJDLCA6UFJDX0wsIDpESVZBTVQpCgoJdHJhbnNmb3JtKFs6UFJDLCA6UFJDX0wsIDpESVZBTVRdID0+IEJ5Um93KChQeF90LFB4X3RtaW51cyxkaXYpIC0+IEdldFJ4KFB4X3QsUHhfdG1pbnVzLGRpdikpID0+IDpSeCwKCQkJICBbOlBSQywgOlBSQ19MLCA6RElWQU1UXSA9PiBCeVJvdygoUHhfdCxQeF90bWludXMsZGl2KSAtPiBHZXRMb2dSeChQeF90LFB4X3RtaW51cyxkaXYpKSA9PiA6TG9nUngpCgkKCWRyb3BtaXNzaW5nKDpSeCkKZW5kq2NvZGVfZm9sZGVkwtkkYzYzZTk2ZTctMGVhMC00ZGFmLWEyMzAtMjZiMjU4ZjEyZTc5hKdjZWxsX2lk2SRjNjNlOTZlNy0wZWEwLTRkYWYtYTIzMC0yNmIyNThmMTJlNzmwcnVubmluZ19kaXNhYmxlZMKkY29kZdlJbWQiIiIKKipMZXQncyBnZXQgYSBzZW5zZSBvZiB0aGUgc3RvY2sgcmV0dXJucyBieSB1c2luZyBgZGVzY3JpYmVgLioqCiIiIqtjb2RlX2ZvbGRlZMPZJGM3OTlmMWFkLWI4MmItNDQyMS1iYjcxLWQwN2NiN2I2YWZkN4SnY2VsbF9pZNkkYzc5OWYxYWQtYjgyYi00NDIxLWJiNzEtZDA3Y2I3YjZhZmQ3sHJ1bm5pbmdfZGlzYWJsZWTCpGNvZGXZWW1kIiIiCioqTGV0J3Mgbm93IG1ha2UgdGhlIGZpbmFsIHRhYmxlIHdpdGggdGhlIHN1bW1hcnkgc3RhdGlzdGljcyBmb3IgdGhlIHJldHVybnMuKioKIiIiq2NvZGVfZm9sZGVkw9kkYTQ4OGE2NzktNmRjMC00YTMzLWIzMjctOWQwZjZlM2I5ZWIyhKdjZWxsX2lk2SRhNDg4YTY3OS02ZGMwLTRhMzMtYjMyNy05ZDBmNmUzYjllYjKwcnVubmluZ19kaXNhYmxlZMKkY29kZdk6bWQiIiIKKipOZXh0LCBsZXQncyB3b3JrIHdpdGggYSBwb3J0Zm9saW8gb2Ygc3RvY2tzLioqCiIiIqtjb2RlX2ZvbGRlZMPZJDJhNTA1NWI0LTIxMzctNDQ3ZC1iZmQyLWEyNmNjNGIxNDczNYSnY2VsbF9pZNkkMmE1MDU1YjQtMjEzNy00NDdkLWJmZDItYTI2Y2M0YjE0NzM1sHJ1bm5pbmdfZGlzYWJsZWTCpGNvZGXZPnVzaW5nIENoYWluLCBDU1YsIERhdGFGcmFtZXMsIERhdGVzLCBTaGlmdGVkQXJyYXlzLCBTdGF0aXN0aWNzq2NvZGVfZm9sZGVkwtkkZDg2YzM3NjQtODFmYi00ZGNjLWFmMDQtMDk0MzU2YTI1MjE2hKdjZWxsX2lk2SRkODZjMzc2NC04MWZiLTRkY2MtYWYwNC0wOTQzNTZhMjUyMTawcnVubmluZ19kaXNhYmxlZMKkY29kZdknbWQiIiIKKipMZXQncyBzZWUgaG93IHRvIGRvIHRoaXMuKioKIiIiq2NvZGVfZm9sZGVkw9kkNGNmZWRhNmItNmIxMi00ZmZhLTkzNzktMTVjMDBiNTNhNDlkhKdjZWxsX2lk2SQ0Y2ZlZGE2Yi02YjEyLTRmZmEtOTM3OS0xNWMwMGI1M2E0OWSwcnVubmluZ19kaXNhYmxlZMKkY29kZdlFbWQiIiIKKipOZXh0LCBsZXQncyBjYWxjdWxhdGUgdGhlIGNvdmFyaWFuY2UgbWF0cml4IG9mIHJldHVybnMuKioKIiIiq2NvZGVfZm9sZGVkw9kkYTBjZjAzNjEtNDIyYS00YmNkLThiOWUtOTQzZGMwMDA0NGIzhKdjZWxsX2lk2SRhMGNmMDM2MS00MjJhLTRiY2QtOGI5ZS05NDNkYzAwMDQ0YjOwcnVubmluZ19kaXNhYmxlZMKkY29kZdmsQGNoYWluIGRmIGJlZ2luCglncm91cGJ5KDpkYXRlKQoJY29tYmluZShfKSBkbyBzZGYKICAgICAgICAgICBpZiBucm93KHNkZikgPT0gMSAKICAgICAgICAgICAgICAgRGF0YUZyYW1lKCkKICAgICAgICAgICBlbHNlCiAgICAgICAgICAgICAgIHNkZgogICAgICAgICAgIGVuZAogICAgICAgZW5kCmVuZKtjb2RlX2ZvbGRlZMLZJGIxYTc2OTA5LWE1M2YtNDkyYS1iZWMyLTU0MTVkOTBkNWRlNISnY2VsbF9pZNkkYjFhNzY5MDktYTUzZi00OTJhLWJlYzItNTQxNWQ5MGQ1ZGU0sHJ1bm5pbmdfZGlzYWJsZWTCpGNvZGXaAQRQb3J0ZlN1bW1hcnkgPSBAY2hhaW4gUG9ydGZSeCBiZWdpbgoJc3RhY2soWzpBQVBMLDpCQSw6RElTLDpHUyw6Sk5KLDpQb3J0ZlJ4XSxbOmRhdGVdLCB2YXJpYWJsZV9uYW1lPTpUSUNLRVIsIHZhbHVlX25hbWU9OlJ4KQoKCWdyb3VwYnkoOlRJQ0tFUikKCWNvbWJpbmUoOlJ4ID0+ICh4LT4gKE1lYW49bWVhbih4KSwgU3RkRGV2PXN0ZCh4KSwgTWluPW1pbmltdW0oeCksIE1lZD1tZWRpYW4oeCksIE1heD1tYXhpbXVtKHgpICkpID0+IEFzVGFibGUpCmVuZKtjb2RlX2ZvbGRlZMLZJDc1MDA3YzU3LTk0ZTgtNDlmYy04YmJiLTNkMzlkNjIwN2ZhMoSnY2VsbF9pZNkkNzUwMDdjNTctOTRlOC00OWZjLThiYmItM2QzOWQ2MjA3ZmEysHJ1bm5pbmdfZGlzYWJsZWTCpGNvZGXaAcRtZCIiIgojIEN1bXVsYXRpbmcgUmV0dXJucwpOZXQgcmV0dXJucyBjYW4gYmUgY3VtdWxhdGVkIGludG8gYSBwb3J0Zm9saW8gdmFsdWUgYXMKCiQkVl90ID0gVl97dC0xfSgxK1JfdCksJCQKCndoZXJlIHdlIG5lZWQgYSBzdGFydGluZyB2YWx1ZSAoaW5pdGlhbCBpbnZlc3RtZW50KSBmb3IgdGhlIHBvcnRmb2xpbyAoYSBjb21tb24gY2hvaWNlIGlzIHRvIG5vcm1hbGlzZSB0byAkVl8wPTEkKS4KCldpdGggbG9nIHJldHVybnMsICRyX3Q9XGxvZygxK1JfdCkkLCB3ZSBpbnN0ZWFkIGRvCgokJFxsbiBWX3QgPSBcbG4gVl97dC0xfSArIHJfdCQkCgpJZiB0aGUgcmV0dXJuIHNlcmllcyBpcyBhbiBleGNlc3MgcmV0dXJuLCBhZGQgdGhlIHJpc2tmcmVlIHJhdGUgdG8gY29udmVydCBpdCB0byBnZXQgbmV0IHJldHVybnMgLSBhbmQgdGhlbiBjdW11bGF0ZSBhcyBkZXNjcmliZWQgYWJvdmUuCiIiIqtjb2RlX2ZvbGRlZMPZJGRhMzViOWEwLTVhYzgtNDYwOC04ZGM1LTJjMDg5MDFjYzJlM4SnY2VsbF9pZNkkZGEzNWI5YTAtNWFjOC00NjA4LThkYzUtMmMwODkwMWNjMmUzsHJ1bm5pbmdfZGlzYWJsZWTCpGNvZGXZnSNodHRwczovL2RhdGFmcmFtZXMuanVsaWFkYXRhLm9yZy9zdGFibGUvbGliL2Z1bmN0aW9ucy8jRGF0YUZyYW1lcy51bnN0YWNrCkBjaGFpbiBQb3J0Zm9saW8gYmVnaW4KCXNlbGVjdCg6ZGF0ZSw6VElDS0VSLDpSeCkgCgl1bnN0YWNrKDpkYXRlLDpUSUNLRVIsOlJ4KQplbmSrY29kZV9mb2xkZWTC2SQ4NzA5OTkxMC1kZmRlLTRmZWUtODkxMC0xZDZiZDI1ZDUxNzCEp2NlbGxfaWTZJDg3MDk5OTEwLWRmZGUtNGZlZS04OTEwLTFkNmJkMjVkNTE3MLBydW5uaW5nX2Rpc2FibGVkwqRjb2Rl2cJQb3J0ZlJ4ID0gQGNoYWluIFBvcnRmb2xpbyBiZWdpbgoJc2VsZWN0KDpkYXRlLDpUSUNLRVIsOlJ4KSAKCXVuc3RhY2soOmRhdGUsOlRJQ0tFUiw6UngpCgkKCXRyYW5zZm9ybShbOkFBUEwsIDpCQSwgOkRJUywgOkdTLCA6Sk5KXSA9PiBCeVJvdygoYSxiLGQsZyxqKSAtPiB3J0FycmF5KFthLGIsZCxnLGpdKSkgPT4gOlBvcnRmUngpCmVuZKtjb2RlX2ZvbGRlZMLZJGUzNTI5YmVkLWFjODktNGU1Zi1hMWUyLWUyYTdkNGM3YjA3M4SnY2VsbF9pZNkkZTM1MjliZWQtYWM4OS00ZTVmLWExZTItZTJhN2Q0YzdiMDczsHJ1bm5pbmdfZGlzYWJsZWTCpGNvZGXZOW1kIiIiCioqTGV0J3MgZmlyc3QgcmVhZCB0aGUgZGF0YSBpbnRvIGEgZGF0YWZyYW1lLioqCiIiIqtjb2RlX2ZvbGRlZMPZJDA3ZTc2N2U2LWQ2ZmMtNGY1Mi04YjlkLTcyY2E3YzYzMzk1NYSnY2VsbF9pZNkkMDdlNzY3ZTYtZDZmYy00ZjUyLThiOWQtNzJjYTdjNjMzOTU1sHJ1bm5pbmdfZGlzYWJsZWTCpGNvZGWxZGVzY3JpYmUoUG9ydGZSeCmrY29kZV9mb2xkZWTC2SQ1OTA3OTllYi1iNWUwLTRlZTAtYmRiNS1hZTRiZDAxZjU1NzaEp2NlbGxfaWTZJDU5MDc5OWViLWI1ZTAtNGVlMC1iZGI1LWFlNGJkMDFmNTU3NrBydW5uaW5nX2Rpc2FibGVkwqRjb2Rl2gETbWQiIiIKSWYgd2UgdHJ5IHRvIGZpbHRlciBvdXQgQUFQTCBmcm9tIHRoZSBkYXRhc2V0LCB3ZSBnZXQgYW4gZXJyb3IgbWVzc2FnZS4KPkFBUEwgPSBmaWx0ZXIoOlRJQ0tFUiA9PiAoeC0+IHg9PSJBQVBMIiksQ1JTUCkKClRoaXMgaXMgYmVjYXVzZSA6VElDS0VSIGhhcyBtaXNzaW5nIGRhdGEsIGFuZCB3ZSBuZWVkIHRvIGdpdmUgaW5zdHJ1Y3Rpb25zIHRvIHRoZSBgZmlsdGVyYCBmdW5jdGlvbiBob3cgYG1pc3NpbmdgIHZhbHVlcyBvdWdodCB0byBiZSBkZWFsdCB3aXRoLgoiIiKrY29kZV9mb2xkZWTD2SQ0ZGVjZTFkYi0zMzA1LTRiOTQtOGExYi1mNWM4MzNkNjc0NDSEp2NlbGxfaWTZJDRkZWNlMWRiLTMzMDUtNGI5NC04YTFiLWY1YzgzM2Q2NzQ0NLBydW5uaW5nX2Rpc2FibGVkwqRjb2Rl2gFfbGV0Cgl3ID0gWzAuOCwwLjJdCglSID0gWzEwLDVdLzEwMCAjcmV0dXJucyBvZiBhc3NldCAxIGFuZCAyCgnOvCA9IFs5LDZdLzEwMCAgICAgICAgICAgICAgICAgICAgI1xtdVtUQUJdIHRvIGdldCDOvAoJzqMgPSBbMjU2IDk2OyAgICAgICAgICAgICAgICAgICAgICNcU2lnbWFbVEFCXQoJCSA5NiAxNDRdLzEwMF4yCglFUnAgICA9IHcnzrwKCVZhclJwID0gdyfOoyp3CgoJd2l0aF90ZXJtaW5hbCgpIGRvCgkJcHJpbnRsblBzKCJFeHBlY3RlZCBwb3J0Zm9saW8gcmV0dXJuOiAiLEVScCkKCQlwcmludGxuUHMoIlBvcnRmb2xpbyB2YXJpYW5jZSBhbmQgc3RkOiIsVmFyUnAsc3FydChWYXJScCkpCgllbmQKCQkKZW5kq2NvZGVfZm9sZGVkwtkkMmExOGUwZWYtNDMzMi00YTExLWFmOWYtM2VmZWEzZjhmNjlkhKdjZWxsX2lk2SQyYTE4ZTBlZi00MzMyLTRhMTEtYWY5Zi0zZWZlYTNmOGY2OWSwcnVubmluZ19kaXNhYmxlZMKkY29kZdk5IENSU1AgPSBEYXRhRnJhbWUoQ1NWLkZpbGUoIkNSU1BfbW9udGhseS5jc3YiLCBudGFza3M9MSkpq2NvZGVfZm9sZGVkwtkkODA4NjUzODYtNzljZi00NWIwLTgzNmQtZTU1YTFjYTY0MTc0hKdjZWxsX2lk2SQ4MDg2NTM4Ni03OWNmLTQ1YjAtODM2ZC1lNTVhMWNhNjQxNzSwcnVubmluZ19kaXNhYmxlZMKkY29kZdkiY292KE1hdHJpeChQb3J0ZlJ4WzosTm90KDpkYXRlKV0pKatjb2RlX2ZvbGRlZMLZJDZjMTlmYmYyLTM0MmQtNDhmZi05N2Q3LTk4M2JiMWFlMTEyMoSnY2VsbF9pZNkkNmMxOWZiZjItMzQyZC00OGZmLTk3ZDctOTgzYmIxYWUxMTIysHJ1bm5pbmdfZGlzYWJsZWTCpGNvZGXaAiJsZXQKCQoJCVAgPSBbMTAwLDEwOCwxMDldICAgICAgICAgICAgICAgICAgICAgI3ByaWNlcyAoYWZ0ZXIgZGl2aWRlbmRzKSBmb3IgdD0xLDIsMwoJCUQgPSBbMCwyLDBdICAgICAgICAgICAgICAgICAgICAgICAgICAgI2RpdmlkZW5kcywgY291bGQgYWxzbyB1c2UgWzA7MjswXQoJCgkJUiA9IHplcm9zKGxlbmd0aChQKSkgICAgICAgICAgICAgICAgICAjd2hlcmUgdG8gc3RvcmUgdGhlIHJlc3VsdHMKCQkKCQlmb3IgdCA9IDI6bGVuZ3RoKFApICAgICAgICAgICAgICAgICAgICNQWzJdIGlzIHRoZSAybmQgZWxlbWVudCBvZiBQICAKCQkJUlt0XSA9IChQW3RdICsgRFt0XSkvUFt0LTFdIC0gMQoJCWVuZAoJCQoJCXBvcGZpcnN0IShSKSAgICAgICAgICAgICAgICAgICAgICAgICAgI2dldCByaWQgb2YgUlsxXSBzaW5jZSB3ZSBoYXZlIG5vIHJldHVybiB0aGVyZQoKCXdpdGhfdGVybWluYWwoKSBkbyAKCQlwcmludG1hdChSKjEwMCxjb2xOYW1lcz1bInJldHVybiwgJSJdLHJvd05hbWVzPTI6MyxjZWxsMDA9InBlcmlvZCIsd2lkdGg9MTUpCgllbmQKCQplbmSrY29kZV9mb2xkZWTC2SQ3NmFkZjljYi1kYjJjLTRiNzYtOTYxNC1iZTEyYmI5YzU3NjSEp2NlbGxfaWTZJDc2YWRmOWNiLWRiMmMtNGI3Ni05NjE0LWJlMTJiYjljNTc2NLBydW5uaW5nX2Rpc2FibGVkwqRjb2Rl2TltZCIiIgpMZXQncyBwaWNrIDUgc3RvY2tzOiBBQVBMLCBCQSwgRElTLCBHUyBhbmQgSk5KLgoiIiKrY29kZV9mb2xkZWTD2SQ1MjNlMDE5MS0yMzdlLTRiZGItYjlhMy01MzA3OWI5ZTkyZDWEp2NlbGxfaWTZJDUyM2UwMTkxLTIzN2UtNGJkYi1iOWEzLTUzMDc5YjllOTJkNbBydW5uaW5nX2Rpc2FibGVkwqRjb2Rl2exiZWdpbgoJZGYgPSBAY2hhaW4gQ1JTUCBiZWdpbgoJCWZpbHRlcig6VElDS0VSID0+ICh4LT4gaXNtaXNzaW5nKHgpID8gZmFsc2UgOiB4PT0iQUFQTCIpLF8pCgkJdHJhbnNmb3JtKDpkYXRlID0+IEJ5Um93KHgtPkRhdGUoc3RyaW5nKHgpLGRhdGVmb3JtYXQieXl5eW1tZGQiKSkgPT4gOmRhdGUpCgkJc2VsZWN0KDpkYXRlLCA6VElDS0VSLCA6UEVSTUNPLCA6UEVSTU5PLCA6UFJDLCA6RElWQU1UKQoJZW5kCmVuZKtjb2RlX2ZvbGRlZMLZJDQ4MDVlOGE2LTM0ZDYtNDlmMC04NzA2LTg4YzkxNmU0Njg5ZoSnY2VsbF9pZNkkNDgwNWU4YTYtMzRkNi00OWYwLTg3MDYtODhjOTE2ZTQ2ODlmsHJ1bm5pbmdfZGlzYWJsZWTCpGNvZGXZgW1kIiIiCioqQXMgdGhlIG5leHQgc3RlcCwgd2UgbmVlZCB0d28gZnVuY3Rpb25zLiBPbmUgdG8gY2FsY3VsYXRlIGFyaXRobWV0aWMgcmV0dXJucywgYW5kIGFub3RoZXIgdG8gY2FsY3VsYXRlIGxvZyByZXR1cm5zLioqCiIiIqtjb2RlX2ZvbGRlZMPZJGNiNzhiZThjLWYwMzktNDM0ZS1hY2JiLTkzNzVmMzE3NDU4OISnY2VsbF9pZNkkY2I3OGJlOGMtZjAzOS00MzRlLWFjYmItOTM3NWYzMTc0NTg4sHJ1bm5pbmdfZGlzYWJsZWTCpGNvZGXaAQFtZCIiIgoqKlRvIGNyZWF0ZSB0aGlzIHRhYmxlLCBpdCBpcyBlYXNpZXIgdG8gd29yayB3aXRoIHRoZSBkYXRhIGluIGBsb25nYCBmb3JtYXQuKioKVGhhdCBpcyB3ZSBoYXZlIG9uIGNvbHVtbiBmb3IgdGhlIFRJQ0tFUiBhbmQgb25lIGNvbHVtbiBmb3IgdGhlIHJldHVybiBmb3IgZWFjaCBkYXRlLiBJbiB0aGlzIGZvcm1hdCwgaXQgaXMgZWFzaWVyIHRvIGdyb3VwIHRoZSBkYXRhIGFuZCB0byBhcHBseSBhIGRhdGEgdHJhbnNmb3JtYXRpb24uCiIiIqtjb2RlX2ZvbGRlZMPZJDhjNThjYmM2LWNmYmQtNDNkZS05ZTY4LWJiYWY0NDcyMTNmYYSnY2VsbF9pZNkkOGM1OGNiYzYtY2ZiZC00M2RlLTllNjgtYmJhZjQ0NzIxM2ZhsHJ1bm5pbmdfZGlzYWJsZWTCpGNvZGXZSUBjaGFpbiBBQVBMX1J4IGJlZ2luCgljb21iaW5lKDpMb2dSeCA9PiAocnggLT4gZXhwKHN1bShyeCkpKSA9PiA6Vl9UKQplbmSrY29kZV9mb2xkZWTC2SRhYTIxZjA1Yy0xZTc4LTQ5MTktODZmYS01N2FlODlkNGQ2MzOEp2NlbGxfaWTZJGFhMjFmMDVjLTFlNzgtNDkxOS04NmZhLTU3YWU4OWQ0ZDYzM7BydW5uaW5nX2Rpc2FibGVkwqRjb2Rl2ZttZCIiIgoqKkxhc3RseSwgbGV0J3MgdXNlIHdoYXQgd2UgaGF2ZSBsZWFybmVkIGFib3V0IHBvcnRmb2xpbyBtYXRoZW1hdGljcyBhdCB0aGUgYmVnaW5uaW5nIG9mIHRoaXMgbGVjdXR1cmUgYW5kIGFwcGx5IGl0IHRvIG91ciBwb3J0Zm9saW8gb2Ygc3RvY2tzLioqCiIiIqtjb2RlX2ZvbGRlZMPZJGJkMzUyZjJlLTNiN2YtNGI1Yi1hZTQzLWZkMjQ0NDQ3MzQ3YYSnY2VsbF9pZNkkYmQzNTJmMmUtM2I3Zi00YjViLWFlNDMtZmQyNDQ0NDczNDdhsHJ1bm5pbmdfZGlzYWJsZWTCpGNvZGXaAR9tZCIiIgojIyBSZXR1cm4gQ2FsY3VsYXRpb25zCgpUaGUgcmV0dXJuIG9mIGhvbGRpbmcgdGhlIGFzc2V0IGJldHdlZW4gJHQtMSQgYW5kICR0JCBpcwoKJCRSX3QgPSAoUF90K0RfdCkvUF97dC0xfSAtIDEsJCQKCndoZXJlICRQX3QkIGlzIHRoZSBwcmljZSAobWVhc3VyZWQgYWZ0ZXIgZGl2aWRlbmRzKSBhbmQgJERfdCQgaXMgdGhlIGRpdmlkZW5kLgoKV2UgY2FuIGNhbGN1bGF0ZSB0aGUgcmV0dXJucyBieSBhIGxvb3Agb3IgYnkgYSBtb3JlIGNvbXBhY3Qgbm90YXRpb24sIHNlZSBiZWxvdy4KCiIiIqtjb2RlX2ZvbGRlZMPZJGE1NDgzMTRiLTUxMWQtNDMxOS04ZjdiLTk1YTMxNThiYTkwY4SnY2VsbF9pZNkkYTU0ODMxNGItNTExZC00MzE5LThmN2ItOTVhMzE1OGJhOTBjsHJ1bm5pbmdfZGlzYWJsZWTCpGNvZGXZO21kIiIiCiMgRklOQyA2NzI6IEludHJvZHVjdGlvbiB0byBQb3J0Zm9saW8gTWF0aGVtYXRpY3MKIiIiq2NvZGVfZm9sZGVkw9kkMTZjYzcwNzQtZDc4Ni00YmI1LWE3MzUtMTg3NDY1ZTgxNWUyhKdjZWxsX2lk2SQxNmNjNzA3NC1kNzg2LTRiYjUtYTczNS0xODc0NjVlODE1ZTKwcnVubmluZ19kaXNhYmxlZMKkY29kZdlEbWQiIiIKKipUaGVuLCB3ZSBjYWxjdWxhdGUgdGhlIHBvcnRmb2xpbyByZXR1cm4gaW4gZWFjaCBtb250aC4qKgoiIiKrY29kZV9mb2xkZWTD2SRhZDI2ZTU0Yi04NWIxLTQ2MzEtYjFlZC01MzE4NzNiYTcxMmGEp2NlbGxfaWTZJGFkMjZlNTRiLTg1YjEtNDYzMS1iMWVkLTUzMTg3M2JhNzEyYbBydW5uaW5nX2Rpc2FibGVkwqRjb2Rl2VVtZCIiIgoqKkxldCdzIGRlc2NyaWJlIHRoZSBkYXRhIHRvIGdldCBhIHNlbnNlIG9mIHRoZSB2YXJpYWJsZXMgYW5kIHRoZWlyIHR5cGVzKioKIiIiq2NvZGVfZm9sZGVkw9kkOTljMGVlNmItZTA0MC00MjYxLTk5MmMtMGY1YTBlYjgxNThjhKdjZWxsX2lk2SQ5OWMwZWU2Yi1lMDQwLTQyNjEtOTkyYy0wZjVhMGViODE1OGOwcnVubmluZ19kaXNhYmxlZMKkY29kZdoDI1BvcnRmb2xpbyA9IEBjaGFpbiBDUlNQIGJlZ2luCglkcm9wbWlzc2luZyg6VElDS0VSKQoJZmlsdGVyKDpUSUNLRVIgPT4gKHgtPiB4IOKIiCBbIkFBUEwiLCJCQSIsIkRJUyIsIkdTIiwiSk5KIl0pLF8pCgl0cmFuc2Zvcm0oOmRhdGUgPT4gQnlSb3coeC0+RGF0ZShzdHJpbmcoeCksZGF0ZWZvcm1hdCJ5eXl5bW1kZCIpKSA9PiA6ZGF0ZSkKCXNlbGVjdCg6ZGF0ZSwgOlRJQ0tFUiwgOlBFUk1DTywgOlBFUk1OTywgOlBSQywgOkRJVkFNVCkKCglncm91cGJ5KFs6ZGF0ZSw6VElDS0VSXSkKCWNvbWJpbmUoXykgZG8gc2RmCiAgICAgICBpZiBucm93KHNkZikgPT0gMiAKICAgICAgICAgICAgRGF0YUZyYW1lKHNkZlsyLDpdKQogICAgICAgZWxzZQogICAgICAgICAgICBzZGYKICAgICAgIGVuZAogICAgZW5kCgkKICAgIHNvcnQoWzpUSUNLRVIsOmRhdGVdKQoJZ3JvdXBieShbOlRJQ0tFUl0pCgl0cmFuc2Zvcm0oOlBSQyA9PiAoeC0+IGxhZyh4KSkgPT4gOlBSQ19MKQoJCgl0cmFuc2Zvcm0oWzpQUkMsIDpQUkNfTCwgOkRJVkFNVF0gPT4gQnlSb3coKFB4X3QsUHhfdG1pbnVzLGRpdikgLT4gR2V0UngoUHhfdCxQeF90bWludXMsZGl2KSkgPT4gOlJ4LAoJCQkgIFs6UFJDLCA6UFJDX0wsIDpESVZBTVRdID0+IEJ5Um93KChQeF90LFB4X3RtaW51cyxkaXYpIC0+IEdldExvZ1J4KFB4X3QsUHhfdG1pbnVzLGRpdikpID0+IDpMb2dSeCkKCWRyb3BtaXNzaW5nKDpSeCkKCglzZWxlY3QoOmRhdGUsIDpUSUNLRVIsIDpQRVJNQ08sIDpQRVJNTk8sIDpQUkMsIDpQUkNfTCwgOkRJVkFNVCwgOlJ4LCA6TG9nUngpCgkKZW5kq2NvZGVfZm9sZGVkwtkkZTUzMThlMDAtYzA3NC00MDc0LThlYjQtMzI0NWNlY2ViNGM0hKdjZWxsX2lk2SRlNTMxOGUwMC1jMDc0LTQwNzQtOGViNC0zMjQ1Y2VjZWI0YzSwcnVubmluZ19kaXNhYmxlZMKkY29kZdnsbGV0Cgl3ID0gWzAuOCwwLjJdCgnOvCA9IFs5LDZdLzEwMCAgCgnOo2IgPSBbMjU2IC05NjsgICAgICAgICAgICAgICAgI2Fub3RoZXIgY292YXJpYW5jZSBtYXRyaXgKICAgICAgICAgIC05NiAxNDRdLzEwMF4yCgoJd2l0aF90ZXJtaW5hbCgpIGRvCgkJcHJpbnRsblBzKCJQb3J0Zm9saW8gc3RkIGlmIHRoZSBhc3NldHMgd2VyZSBuZWdhdGl2ZWx5IGNvcnJlbGF0ZWQ6ICIsc3FydCh3J86jYip3KSkKCWVuZAplbmSrY29kZV9mb2xkZWTC2SRlODllY2I2Mi00YzBmLTQyNjYtODYzYi01Mjk2OTRjY2ExYzCEp2NlbGxfaWTZJGU4OWVjYjYyLTRjMGYtNDI2Ni04NjNiLTUyOTY5NGNjYTFjMLBydW5uaW5nX2Rpc2FibGVkwqRjb2Rl2gEzbGV0Cgl3ID0gWzAuOCwwLjJdCglSID0gWzEwLDVdLzEwMCAgICAgICAgICAjcmV0dXJucyBvZiBhc3NldCAxIGFuZCAyCglScCA9IHcnUgoKCXdpdGhfdGVybWluYWwoKSBkbyAKCQlwcmludHJlZCgiUG9ydGZvbGlvIHdlaWdodHM6IikKCQlwcmludG1hdCh3LHJvd05hbWVzPVsiYXNzZXQgMSIsImFzc2V0IDIiXSkKCgkJcHJpbnRyZWQoIlJldHVybnM6IikKCQlwcmludG1hdChSLHJvd05hbWVzPVsiYXNzZXQgMSIsImFzc2V0IDIiXSkKCgkJcHJpbnRyZWQoIlBvcnRmb2xpbyByZXR1cm46ICIpCgkJcHJpbnRsblBzKFJwKQoJZW5kCmVuZKtjb2RlX2ZvbGRlZMLZJGZiNjlkNzAxLWU2MjMtNDQzZS1iNmYwLWM3NTE4MGI5YmUxYoSnY2VsbF9pZNkkZmI2OWQ3MDEtZTYyMy00NDNlLWI2ZjAtYzc1MTgwYjliZTFisHJ1bm5pbmdfZGlzYWJsZWTCpGNvZGXZuW1kIiIiCioqTGV0J3MgY3JlYXRlIGEgdGFibGUgd2l0aCBzdW1tYXJ5IHN0YXRpc3RpY3MgdGhhdCB3ZSBhcmUgaW50ZXJlc3RlZCBpbjoqKgphdmVyYWdlIHJldHVybiwgc3RhbmRhcmQgZGV2aWF0aW9uIG9mIHJldHVybnMsIG1pbmltdW0sIG1lZGlhbiwgYW5kIHRoZSBtYXhpbXVtIG9mIG1vbnRobHkgcmV0dXJucy4KIiIiq2NvZGVfZm9sZGVkw9kkZTZjMTk4ZjQtNWFiZC00NjhjLTg0MWMtOGE3YjAzMmYxZGMyhKdjZWxsX2lk2SRlNmMxOThmNC01YWJkLTQ2OGMtODQxYy04YTdiMDMyZjFkYzKwcnVubmluZ19kaXNhYmxlZMKkY29kZdoCWW1kIiIiCiMgUG9ydGZvbGlvIFJldHVybjogRGVmaW5pdGlvbiwgRXhwZWN0ZWQgVmFsdWUgYW5kIFZhcmlhbmNlCldlIGZvcm0gYSBwb3J0Zm9saW8gYnkgY29tYmluaW5nICRuJCBhc3NldHM6ICR3JCBpcyB0aGUgdmVjdG9yIG9mICRuJCBwb3J0Zm9saW8gd2VpZ2h0cywgJFIkIGlzIGEgdmVjdG9yIG9mIHJldHVybnMsICRcbXUkIGEgdmVjdG9yIG9mIGV4cGVjdGVkIGV4cGVjdGVkIChhdmVyYWdlKSByZXR1cm5zIGFuZCAkXFNpZ21hJCB0aGUgJG4gXHRpbWVzIG4kIGNvdmFyaWFuY2UgbWF0cml4LgoKVGhlIHBvcnRmb2xpbyByZXR1cm4sIHRoZSBleHBlY3RlZCBwb3J0Zm9saW8gcmV0dXJuIGFuZCB0aGUgcG9ydGZvbGlvIHZhcmlhbmNlIGNhbiBiZSBjb21wdXRlZCBhczoKCiQkUl9wID0gdydSLCQkCgokJFx0ZXh0e0V9Ul9wID0gdydcbXUkJCBhbmQKCiQkXHRleHR7VmFyfShSX3ApID0gdydcU2lnbWEgdyQkCgpUaGUgY292YXJpYW5jZSBvZiB0d28gcG9ydGZvbGlvcyAod2l0aCB3ZWlnaHRzICR2JCBhbmQgJHckLCByZXNwZWN0aXZlbHkpIGNhbiBiZSBjb21wdXRlZCBhcwoKJCRcdGV4dHtDb3Z9KFJfcSxSX3ApID0gdidcU2lnbWEgdyQkLgoiIiKrY29kZV9mb2xkZWTD2SRlNWMyYjY4Zi00ZjFlLTRiZDEtODI0MC1hYzUyZDI2ODMwNGKEp2NlbGxfaWTZJGU1YzJiNjhmLTRmMWUtNGJkMS04MjQwLWFjNTJkMjY4MzA0YrBydW5uaW5nX2Rpc2FibGVkwqRjb2RluncgPSBbMC4yLDAuMiwwLjIsMC4yLDAuMl0Kq2NvZGVfZm9sZGVkwtkkMzM2OWJlNzEtMmExMS00ZGM4LThkMWItZDJiMWQ3NzQ5YzVmhKdjZWxsX2lk2SQzMzY5YmU3MS0yYTExLTRkYzgtOGQxYi1kMmIxZDc3NDljNWawcnVubmluZ19kaXNhYmxlZMKkY29kZdoBb2xldAoJzrwgPSBbOSw2XS8xMDAgICAgICAgICAgICAgICAgICAgICNcbXVbVEFCXSB0byBnZXQgzrwKCc6jID0gWzI1NiA5NjsgICAgICAgICAgICAgICAgICAgICAjXFNpZ21hW1RBQl0KCQkgOTYgMTQ0XS8xMDBeMgoKCXdpdGhfdGVybWluYWwoKSBkbwoJCXByaW50Ymx1ZSgiZXhwZWN0ZWQgcmV0dXJucyoxMDA6ICIpCgkJcHJpbnRtYXQozrwqMTAwLHJvd05hbWVzPVsiYXNzZXQgMSIsImFzc2V0IDIiXSkKCgkJcHJpbnRibHVlKCJjb3ZhcmlhbmNlIG1hdHJpeCoxMDBeMjoiKQoJCXByaW50bWF0KM6jKjEwMF4yLHJvd05hbWVzPVsiYXNzZXQgMSIsImFzc2V0IDIiXSxjb2xOYW1lcz1bImFzc2V0IDEiLCJhc3NldCAyIl0pCgllbmQKCQplbmSrY29kZV9mb2xkZWTC2SQ1YmFhMWE5Zi03YWQ1LTRiZmMtYjQ2OC05ZTBiNDA0Mzg1NDiEp2NlbGxfaWTZJDViYWExYTlmLTdhZDUtNGJmYy1iNDY4LTllMGI0MDQzODU0OLBydW5uaW5nX2Rpc2FibGVkwqRjb2Rl2YdtZCIiIgoqKk5vdywgd2UgY2FuIGNhbGN1bGF0ZSB0aGUgY3VtdWxhdGl2ZSByZXR1cm4gb3ZlciB0aGUgcGVyaW9kIGZyb20gSmFudWFyeSAyMDAwIHRvIERlY2VtYmVyIDIwMjAgZnJvbSBpbnZlc3RpbmcgJDEgaW4gQUFQTC4qKgoiIiKrY29kZV9mb2xkZWTD2SQyYmQxNjc0ZC0yMjU0LTQ1YTgtOWYwMi01Y2FhNWJkMGJkMWOEp2NlbGxfaWTZJDJiZDE2NzRkLTIyNTQtNDVhOC05ZjAyLTVjYWE1YmQwYmQxY7BydW5uaW5nX2Rpc2FibGVkwqRjb2Rl2UhtZCIiIgoqKkxldCdzIG5vdyBjcmVhdGUgYSBuZXcgZGF0YWZyYW0gd2l0aCB0aGUgcmV0dXJucyBmb3IgQUFQTC4qKgoiIiKrY29kZV9mb2xkZWTD2SRkMzAwYmU2NS1mNDk0LTQxODEtOTkyNC1lNjljYzZjMDRmMDmEp2NlbGxfaWTZJGQzMDBiZTY1LWY0OTQtNDE4MS05OTI0LWU2OWNjNmMwNGYwObBydW5uaW5nX2Rpc2FibGVkwqRjb2Rl2dNmdW5jdGlvbiBHZXRMb2dSeChQeF90LFB4X3RtaW51cyxkaXYpCglkaXZBbXQgPSAwLjAKCWlmICFpc21pc3NpbmcoZGl2KQoJCWRpdkFtdCA9IGRpdgoJZW5kCgkJCglpZiBhbnkoaXNtaXNzaW5nLihbUHhfdCxQeF90bWludXNdKSkKCQlyZXR1cm4gbWlzc2luZwoJZWxzZQoJCXJldHVybiBsb2coKFB4X3QgKyBkaXZBbXQpKSAtIGxvZyhQeF90bWludXMpCgllbmQKZW5kq2NvZGVfZm9sZGVkwtkkNDU4Njg4OTQtYTMxNy00MzcwLTk2MzEtNmVmM2MzMTY2MWUzhKdjZWxsX2lk2SQ0NTg2ODg5NC1hMzE3LTQzNzAtOTYzMS02ZWYzYzMxNjYxZTOwcnVubmluZ19kaXNhYmxlZMKkY29kZdk9bWQiIiIKKipOZXh0LCBsZXQncyBjYWxjdWxhdGUgbW9udGhseSByZXR1cm5zIGZvciBBQVBMLyoqCiIiIqtjb2RlX2ZvbGRlZMPZJDZiNzIwYWRlLTVlNGMtNGY1OC04ZmNkLWY2MDlkZjI5ZGY3YoSnY2VsbF9pZNkkNmI3MjBhZGUtNWU0Yy00ZjU4LThmY2QtZjYwOWRmMjlkZjdisHJ1bm5pbmdfZGlzYWJsZWTCpGNvZGXZPm1kIiIiCioqTGV0J3MgcmVtb3ZlIHRoaXMgZHVwbGljYXRlIGFuZCBnZXQgdW5pcXVlIHJvd3MuKioKIiIiq2NvZGVfZm9sZGVkw9kkOWI4MTYyMzYtZjlkZS00YWFkLWFlYTAtYjVmOGZiZmM2YjExhKdjZWxsX2lk2SQ5YjgxNjIzNi1mOWRlLTRhYWQtYWVhMC1iNWY4ZmJmYzZiMTGwcnVubmluZ19kaXNhYmxlZMKkY29kZdnQZnVuY3Rpb24gR2V0UngoUHhfdCxQeF90bWludXMsZGl2KQoJZGl2QW10ID0gMC4wCglpZiAhaXNtaXNzaW5nKGRpdikKCQlkaXZBbXQgPSBkaXYKCWVuZAoJCQoJaWYgYW55KGlzbWlzc2luZy4oW1B4X3QsUHhfdG1pbnVzXSkpCgkJcmV0dXJuIG1pc3NpbmcKCWVsc2UKCQlyZXR1cm4gKFB4X3QgKyBkaXZBbXQgLSBQeF90bWludXMpL1B4X3RtaW51cwoJZW5kCmVuZKtjb2RlX2ZvbGRlZMLZJDBjODIxMzA4LTQ1Y2EtNDMxNy04MGIzLTllODdjNjg0MDQ2NYSnY2VsbF9pZNkkMGM4MjEzMDgtNDVjYS00MzE3LTgwYjMtOWU4N2M2ODQwNDY1sHJ1bm5pbmdfZGlzYWJsZWTCpGNvZGXZR0BjaGFpbiBBQVBMX1J4IGJlZ2luCgljb21iaW5lKDpSeCA9PiAocnggLT4gcHJvZCgxIC4rIHJ4KSkgPT4gOlZfVCkKZW5kq2NvZGVfZm9sZGVkwtkkZmEwNWIxMzAtNGFiNS00OWVhLThhOGMtZjZkOWZjZmQxNjU2hKdjZWxsX2lk2SRmYTA1YjEzMC00YWI1LTQ5ZWEtOGE4Yy1mNmQ5ZmNmZDE2NTawcnVubmluZ19kaXNhYmxlZMKkY29kZdoCPWxldAoJYXNzZXRzID0gZmlsdGVyKDpUSUNLRVIgPT4gKHgtPnghPSJQb3J0ZlJ4IiksIFBvcnRmU3VtbWFyeSkKCc68ID0gYXNzZXRzLk1lYW4gICAgICAgICAgICAgICAgICAgICNcbXVbVEFCXSB0byBnZXQgzrwKCc6jID0gY292KE1hdHJpeChQb3J0ZlJ4WzosTm90KFs6ZGF0ZSw6UG9ydGZSeF0pXSkpICAgICAgICAgICAgICAgICAgICAgI1xTaWdtYVtUQUJdCgoJRVJwICAgPSB3J868CglWYXJScCA9IHcnzqMqdwoJCgl3aXRoX3Rlcm1pbmFsKCkgZG8KCQlwcmludHllbGxvdygiZXhwZWN0ZWQgcmV0dXJucyoxMDA6ICIpCgkJcHJpbnRtYXQozrwqMTAwLHJvd05hbWVzPWFzc2V0cy5USUNLRVIpCgoJCXByaW50eWVsbG93KCJjb3ZhcmlhbmNlIG1hdHJpeCoxMDBeMjoiKQoJCXByaW50bWF0KM6jKjEwMF4yLHJvd05hbWVzPWFzc2V0cy5USUNLRVIsY29sTmFtZXM9YXNzZXRzLlRJQ0tFUikKCgkJcHJpbnRsblBzKCJFeHBlY3RlZCBwb3J0Zm9saW8gcmV0dXJuOiAiLEVScCkKCQlwcmludGxuUHMoIlBvcnRmb2xpbyB2YXJpYW5jZSBhbmQgc3RkOiIsVmFyUnAsc3FydChWYXJScCkpCgkJCgllbmQKCmVuZKtjb2RlX2ZvbGRlZMLZJDY1NzJiZDJmLTc2ZTgtNDczNS05ZGZmLWQzNzFmZTdmNjliZISnY2VsbF9pZNkkNjU3MmJkMmYtNzZlOC00NzM1LTlkZmYtZDM3MWZlN2Y2OWJksHJ1bm5pbmdfZGlzYWJsZWTCpGNvZGXZPW1kIiIiCioqTmV4dCwgbGV0J3MgcGljayBhIHZlY3RvciBvZiBwb3J0Zm9saW8gd2VpZ2h0cy4qKgoiIiKrY29kZV9mb2xkZWTD2SRjZGRhNTE4My00NmM2LTQyODMtYTY2Zi0xNjhlZDU3OTBhNzeEp2NlbGxfaWTZJGNkZGE1MTgzLTQ2YzYtNDI4My1hNjZmLTE2OGVkNTc5MGE3N7BydW5uaW5nX2Rpc2FibGVkwqRjb2Rl2bsjaHR0cHM6Ly9kYXRhZnJhbWVzLmp1bGlhZGF0YS5vcmcvc3RhYmxlL2xpYi9mdW5jdGlvbnMvI0RhdGFGcmFtZXMuc3RhY2sKQGNoYWluIFBvcnRmUnggYmVnaW4KCXN0YWNrKFs6QUFQTCw6QkEsOkRJUyw6R1MsOkpOSiw6UG9ydGZSeF0sWzpkYXRlXSwgdmFyaWFibGVfbmFtZT06VElDS0VSLCB2YWx1ZV9uYW1lPTpSeCkKZW5kq2NvZGVfZm9sZGVkwtkkYzFhNWZmMGUtY2U1ZS00MzkwLWJlZDctYWY1YmUxNDBhMTQ1hKdjZWxsX2lk2SRjMWE1ZmYwZS1jZTVlLTQzOTAtYmVkNy1hZjViZTE0MGExNDWwcnVubmluZ19kaXNhYmxlZMKkY29kZdoBdGxldAoJUiAgICA9IFsyMCwtMzUsMjVdLzEwMCAgICAgICAgICAgICAgICAjcmV0dXJucyBmb3IgdD0xLDIsMwoJViAgID0gY3VtcHJvZCgxLjAgLisgUikgICAgICAgICAgICAgICNWKHQpID0gVih0LTEpKigxK1IodCkpLCBzdGFydGluZyBhdCAxIGluIHQ9MAoJbG5WID0gY3Vtc3VtKGxvZy4oMS4wIC4rIFIpKSAgICAgICAgICNsblYodCkgPSBsblYodC0xKSArIHIodCkgCglleHBMblYgPSBleHAuKGxuVikKCQkKCSNEaXNwbGF5IHJlc3VsdHMKCXdpdGhfdGVybWluYWwoKSBkbwoJCXByaW50bWF0KFIsVixsblYsZXhwTG5WLGNvbE5hbWVzPVsiUiIsIlYiLCJsblYiLCJFeHBMblYiXSxyb3dOYW1lcz0xOjMsY2VsbDAwPSJwZXJpb2QiKQoJZW5kCmVuZKtjb2RlX2ZvbGRlZMLZJDBlZWZkMGFmLWY1ZGQtNGI4Ny05YmUwLTM5MWQ4NmNmOGJmOYSnY2VsbF9pZNkkMGVlZmQwYWYtZjVkZC00Yjg3LTliZTAtMzkxZDg2Y2Y4YmY5sHJ1bm5pbmdfZGlzYWJsZWTCpGNvZGXZsG1kIiIiCioqVG8gZm9ybSBhIHBvcnRmb2xpbywgaXQgaXMgbW9yZSBjb252ZW5pZW50IHRvIHdvcmsgd2l0aCB0aGUgZGF0YSBpbiAqd2lkZSBmb3JtYXQqLiBUaGlzIG1lYW5zIHRoYXQgd2Ugd2FudCB0byBwdXQgdGhlIGZpdmUgc3RvY2tzIGluIGNvbHVtbnMgKG9uZSBmb3IgZWFjaCBzdG9jaykuKioKIiIiq2NvZGVfZm9sZGVkw9kkMGNmODVkYTItYTUzOC00MDJkLTk3ODUtMDk0NDI1MjYwYmRihKdjZWxsX2lk2SQwY2Y4NWRhMi1hNTM4LTQwMmQtOTc4NS0wOTQ0MjUyNjBiZGKwcnVubmluZ19kaXNhYmxlZMKkY29kZdm0QGNoYWluIGRmIGJlZ2luCglncm91cGJ5KDpkYXRlKQoJY29tYmluZShfKSBkbyBzZGYKICAgICAgICAgICBpZiBucm93KHNkZikgPT0gMiAKICAgICAgICAgICAgICAgRGF0YUZyYW1lKHNkZlsyLDpdKQogICAgICAgICAgIGVsc2UKICAgICAgICAgICAgICAgc2RmCiAgICAgICAgICAgZW5kCiAgICAgICBlbmQKZW5kq2NvZGVfZm9sZGVkwtkkNDU2MjExYTEtMzgyOC00NThjLWE1OTctY2IzNWE4OGMzNWNhhKdjZWxsX2lk2SQ0NTYyMTFhMS0zODI4LTQ1OGMtYTU5Ny1jYjM1YTg4YzM1Y2GwcnVubmluZ19kaXNhYmxlZMKkY29kZdkwbWQiIiIKKipIb3cgY2FuIHdlIGRlYWwgd2l0aCBtaXNzaW5nIGRhdGE/KioKIiIiq2NvZGVfZm9sZGVkw9kkNDQ2ZTBkYjEtODEwNy00NzI0LWI3NzQtNTYxYzVkMzdmODdhhKdjZWxsX2lk2SQ0NDZlMGRiMS04MTA3LTQ3MjQtYjc3NC01NjFjNWQzN2Y4N2GwcnVubmluZ19kaXNhYmxlZMKkY29kZdoBpWJlZ2luCglBQVBMID0gQGNoYWluIENSU1AgYmVnaW4KCQlmaWx0ZXIoOlRJQ0tFUiA9PiAoeC0+IGlzbWlzc2luZyh4KSA/IGZhbHNlIDogeD09IkFBUEwiKSxfKQoJCXRyYW5zZm9ybSg6ZGF0ZSA9PiBCeVJvdyh4LT5EYXRlKHN0cmluZyh4KSxkYXRlZm9ybWF0Inl5eXltbWRkIikpID0+IDpkYXRlKQoJCXNlbGVjdCg6ZGF0ZSwgOlRJQ0tFUiwgOlBFUk1DTywgOlBFUk1OTywgOlBSQywgOkRJVkFNVCkKCgkJZ3JvdXBieSg6ZGF0ZSkKCQljb21iaW5lKF8pIGRvIHNkZgogICAgICAgICAgIGlmIG5yb3coc2RmKSA9PSAyIAogICAgICAgICAgICAgICBEYXRhRnJhbWUoc2RmWzIsOl0pCiAgICAgICAgICAgZWxzZQogICAgICAgICAgICAgICBzZGYKICAgICAgICAgICBlbmQKICAgICAgICBlbmQKCgkgICAgc29ydCg6ZGF0ZSkKCWVuZAplbmSrY29kZV9mb2xkZWTC2SQ3YjY2Njk1MS1iMzAzLTQxMDAtOGRkMi1mZWI4ZTJkMjJiMTSEp2NlbGxfaWTZJDdiNjY2OTUxLWIzMDMtNDEwMC04ZGQyLWZlYjhlMmQyMmIxNLBydW5uaW5nX2Rpc2FibGVkwqRjb2Rl2W1tZCIiIgoqKlRvIGRvIHRoaXMsIHdlIG5lZWQgdG8gYWRkIHRoZSBsYWdnZWQgcHJpY2UuKioKPlRoZSBgU2hpZnRlZEFycmF5c2AgcGFja2FnZSBhbGxvd3MgdXMgdG8gZG8gdGhpcy4KIiIiq2NvZGVfZm9sZGVkw9kkNmEyNWM4OTgtNTRiMy00YWZjLWI3NzEtZTEzYzdjZGE2NmVihKdjZWxsX2lk2SQ2YTI1Yzg5OC01NGIzLTRhZmMtYjc3MS1lMTNjN2NkYTY2ZWKwcnVubmluZ19kaXNhYmxlZMKkY29kZbttZCIiIgojIyMjIEFwcGxlIChBQVBMKQoiIiKrY29kZV9mb2xkZWTD2SRhNjVmYTBhZS0xY2ViLTQ1MWUtYWIzNy0wOGMwZDIzYTUwOGWEp2NlbGxfaWTZJGE2NWZhMGFlLTFjZWItNDUxZS1hYjM3LTA4YzBkMjNhNTA4ZbBydW5uaW5nX2Rpc2FibGVkwqRjb2Rl2UVtZCIiIgoqKk5leHQsIGxldCdzIGNvbnZlcnQgdGhlIGA6ZGF0ZWAgY29sdW1uIHRvIGEgdHlwZSBgRGF0ZWAqKgoiIiKrY29kZV9mb2xkZWTD2SRiODA1MWQ2My1lZDI2LTRlMjEtOGE5OC1mNTY0YTNiOGE5NjeEp2NlbGxfaWTZJGI4MDUxZDYzLWVkMjYtNGUyMS04YTk4LWY1NjRhM2I4YTk2N7BydW5uaW5nX2Rpc2FibGVkwqRjb2Rl2VttZCIiIgoqKk5vdGljZSB0aGF0IHRoZXJlIGlzIGEgc3RyYW5nZSBkdXBsaWNhdGUuIEhvdyBjYW4gd2UgZmluZCBhbmQgZGVhbCB3aXRoIHRoaXM/KioKIiIiq2NvZGVfZm9sZGVkw9kkYWVlMmU3MDgtNmIxMy00NjA5LWI2MGMtYTMzY2JkNzQxMDIzhKdjZWxsX2lk2SRhZWUyZTcwOC02YjEzLTQ2MDktYjYwYy1hMzNjYmQ3NDEwMjOwcnVubmluZ19kaXNhYmxlZMKkY29kZa5kZXNjcmliZShDUlNQKatjb2RlX2ZvbGRlZMLZJGU3OTZjMTMxLTVhNjctNGE5OS04ZGYyLWI3ZWE1MmEwMzA1NoSnY2VsbF9pZNkkZTc5NmMxMzEtNWE2Ny00YTk5LThkZjItYjdlYTUyYTAzMDU2sHJ1bm5pbmdfZGlzYWJsZWTCpGNvZGXaIQViZWdpbgoJdXNpbmcgUGx1dG9VSSwgUHJpbnRmCiMgVGhlIGZvbGxvd2luZyBjb2RlIGlzIGJ5IFBhdWwgU29lZGVybGluZAojIGh0dHBzOi8vc2l0ZXMuZ29vZ2xlLmNvbS9zaXRlL3BhdWxzb2RlcmxpbmRlY29uL2hvbWUKCQoJIy0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLQoiIiIKICAgIHByaW50bWF0KFtmaDo6SU9dLHguLi47Y29sTmFtZXM9W10scm93TmFtZXM9W10sCiAgICAgICAgICAgICB3aWR0aD0xMCxwcmVjPTMsTm9QcmludGluZz1mYWxzZSxTdHJpbmdGbXQ9IiIsY2VsbDAwPSIiKQoKUHJpbnQgYWxsIGVsZW1lbnRzIG9mIGEgbWF0cml4IChvciBzZXZlcmFsKSB3aXRoIHByZWRlZmluZWQgZm9ybWF0dGluZy4gSXQgY2FuIGFsc28gaGFuZGxlCk9mZnNldEFycmF5cy4gU3RyaW5nRm10ID0gImNzdiIgcHJpbnRzIHVzaW5nIGEgY3N2IGZvcm1hdC4KCiMgSW5wdXQKLSBgZmg6OklPYDogICAgICAgICAgICAob3B0aW9uYWwpIGZpbGUgaGFuZGxlLiBJZiBub3Qgc3VwcGxpZWQsIHByaW50cyB0byBzY3JlZW4KLSBgeDo6QXJyYXkocylgOiAgICAgICAob2YgbnVtYmVycywgZGF0ZXMsIHN0cmluZ3MsIC4uLikgdG8gcHJpbnQKLSBgY29sTmFtZXM6OkFycmF5YDogICBvZiBzdHJpbmdzIHdpdGggY29sdW1uIGhlYWRlcnMKLSBgcm93TmFtZXM6OkFycmF5YDogICBvZiBzdHJpbmdzIHdpdGggcm93IGxhYmVscwotIGB3aWR0aDo6SW50YDogICAgICAgIChrZXl3b3JkKSBzY2FsYXIsIG1pbmltdW0gd2lkdGggb2YgcHJpbnRlZCBjZWxscwotIGBwcmVjOjpJbnRgOiAgICAgICAgIChrZXl3b3JkKSBzY2FsYXIsIHByZWNpc2lvbiBvZiBwcmludGVkIGNlbGxzCi0gYE5vUHJpbnRpbmc6OkJvb2xgOiAgKGtleXdvcmQpIGJvb2wsIHRydWU6IG5vIHByaW50aW5nLCBqdXN0IHJldHVybiBmb3JtYXR0ZWQgc3RyaW5nIFtmYWxzZV0KLSBgU3RyaW5nRm10OjpTdHJpbmdgOiAoa2V5d29yZCkgc3RyaW5nLCAiIiwgImNzdiIKLSBgY2VsbDAwOjpTdHJpbmdgOiAgICAoa2V5d29yZCkgc3RyaW5nLCBmb3Igcm93IDAsIGNvbHVtbiAwCgojIE91dHB1dAotIHN0ciAgICAgICAgIChpZiBOb1ByaW50aW5nKSBzdHJpbmcsIChvdGhlcndpc2Ugbm90aGluZykKCiMgRXhhbXBsZXMKYGBgCnggPSBbMTEgMTI7MjEgMjJdCnByaW50bWF0KHgpCmBgYApgYGAKeCA9IFsxICJhYiI7IERhdGUoMjAxOCwxMCw3KSAzLjE0XQpwcmludG1hdCh4LHdpZHRoPTIwLGNvbE5hbWVzPVsiY29sIDEiLCJjb2wgMiJdKQpgYGAKYGBgCnByaW50bWF0KFsxMSwxMl0sWzIxLDIyXSkKYGBgCkNhbiBhbHNvIGNhbGwgYXMKYGBgCm9wdCA9IERpY3QoOnJvd05hbWVzPT5bIjEiOyI0Il0sOndpZHRoPT4xMCw6cHJlYz0+Myw6Tm9QcmludGluZz0+ZmFsc2UsOlN0cmluZ0ZtdD0+IiIpCnByaW50bWF0KHg7Y29sTmFtZXM9WyJhIiwiYiJdLG9wdC4uLikgICAgICNub3RpY2UgOyBhbmQgLi4uCmBgYAoobm90IGFsbCBrZXl3b3JkcyBhcmUgbmVlZGVkKQoKIyBSZXF1aXJlcwotIGZtdE51bVBzCgojIE5vdGljZQotIFRoZSBwcmVmaXhOIGFuZCBzdWZmaXhOIGNvdWxkIHBvdGVudGlhbGx5IGJlIG1hZGUgZnVuY3Rpb24gaW5wdXRzLiBUaGlzIHdvdWxkIGFsbG93CmEgZmFpcmx5IGZsZXhpYmxlIHdheSB0byBmb3JtYXQgdGFibGVzLgoKClBhdWwuU29kZXJsaW5kQHVuaXNnLmNoCgoiIiIKZnVuY3Rpb24gcHJpbnRtYXQoZmg6OklPLHguLi47Y29sTmFtZXM9W10scm93TmFtZXM9W10sCiAgICAgICAgICAgICAgICAgIHdpZHRoPTEwLHByZWM9MyxOb1ByaW50aW5nPWZhbHNlLFN0cmluZ0ZtdD0iIixjZWxsMDA9IiIpCgogIGlzZW1wdHkoeCkgJiYgcmV0dXJuIG5vdGhpbmcgICAgICAgICAgICAgICAgICAgICAgICAgI2RvIG5vdGhpbmcgaXMgaXNlbXB0eSh4KQoKICB0eXBlVGVzdFEgPSBhbnkoIT0oZWx0eXBlKHhbMV0pKSxbZWx0eXBlKHopIGZvciB6IGluIHhdKSAgI3Rlc3QgaWYgZWx0eXBlKHhbaV0pIGRpZmZlcnMKICBpZiB0eXBlVGVzdFEgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICNjcmVhdGUgbWF0cml4IGZyb20gdHVwbGUgY3JlYXRlZCBieSB4Li4uCiAgICB4ID0gaGNhdChNYXRyaXh7QW55fShoY2F0KHhbMV0pKSx4WzI6ZW5kXS4uLikgICAjcHJlc2VydmluZyB0eXBlcyBvZiB4W2ldCiAgZWxzZQogICAgeCA9IGhjYXQoeC4uLikKICBlbmQKCiAgKG0sbikgPSAoc2l6ZSh4LDEpLHNpemUoeCwyKSkKCiAgKGxlbmd0aChyb3dOYW1lcykgPT0gMSA8IG0pICYmIChyb3dOYW1lcyA9IFtzdHJpbmcocm93TmFtZXNbMV0saSkgZm9yIGkgPSAxOm1dKSAgIyJyaSIKICAobGVuZ3RoKGNvbE5hbWVzKSA9PSAxIDwgbikgJiYgKGNvbE5hbWVzID0gW3N0cmluZyhjb2xOYW1lc1sxXSxpKSBmb3IgaSA9IDE6bl0pICAjImNpIgoKICBpZiBTdHJpbmdGbXQgPT0gImNzdiIKICAgIChwcmVmaXhOLHN1ZmZpeE4pICAgPSAoZmlsbCgiIixuKSx2Y2F0KGZpbGwoIiwiLG4tMSksIiIpKSAgI3ByZWZpeCBhbmQgc3VmZml4IGZvciBjb2x1bW4gMTpuCiAgICAocHJlZml4QzAsc3VmZml4QzApID0gKCIiLCIsIikgICAgICAgICAgICAgICAgICAgICAgICAgICAgICNwcmVmaXggYW5kIHN1ZmZpeCBmb3IgY29sdW1uIDAKICBlbHNlCiAgICAocHJlZml4TixzdWZmaXhOKSA9IChmaWxsKCIiLG4pLGZpbGwoIiIsbikpCiAgICAocHJlZml4QzAsc3VmZml4QzApID0gKCIiLCIiKQogIGVuZAoKICBpZiBsZW5ndGgocm93TmFtZXMpID09IDAgICAgICAgICAgICAgICAgICAgICAgICAgI3dpZHRoIG9mIGNvbHVtbiAwIChjZWxsMDAgYW5kIHJvd05hbWVzKQogICAgY29sMFdpZHRoID0gMAogIGVsc2UKICAgIGNvbDBXaWR0aCA9IG1heGltdW0obGVuZ3RoLHZjYXQoY2VsbDAwLHJvd05hbWVzKSkgKyBsZW5ndGgocHJlZml4QzApICsgbGVuZ3RoKHN1ZmZpeEMwKQogIGVuZAoKICBjb2xXaWR0aCA9IFt3aWR0aCArIGxlbmd0aChwcmVmaXhOW2pdKSArIGxlbmd0aChzdWZmaXhOW2pdKSBmb3Igaj0xOm5dICAjd2lkdGhzIG9mIGNvbHVtbiAxOm4KCiAgaW9iID0gSU9CdWZmZXIoKQoKICBpZiAhaXNlbXB0eShjb2xOYW1lcykgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICNwcmludCAoY2VsbDAwLGNvbE5hbWVzKSwgaWYgYW55CiAgICAhaXNlbXB0eShjZWxsMDApID8gIHR4dDAgPSBzdHJpbmcocHJlZml4QzAsY2VsbDAwLHN1ZmZpeEMwKSA6IHR4dDAgPSAiIgogICAgcHJpbnQoaW9iLHJwYWQodHh0MCxjb2wwV2lkdGgpKQogICAgZm9yIGogPSAxOm4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICNsb29wIG92ZXIgY29sdW1ucwogICAgICBwcmludChpb2IsbHBhZChzdHJpbmcocHJlZml4TltqXSxjb2xOYW1lc1tqXSxzdWZmaXhOW2pdKSxjb2xXaWR0aFtqXSkpCiAgICBlbmQKICAgIHByaW50KGlvYiwiXG4iKQogIGVuZAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgI3ByaW50IHJvd05hbWVzIGFuZCB4CiAgKGkwLGowKSA9ICgxIC0gZmlyc3QoYXhlcyh4LDEpKSwxIC0gZmlyc3QoYXhlcyh4LDIpKSkgICAjaStpMCxqK2owIGdpdmUgdHJhZGl0aW9uYWwgaW5kaWNlcwogIGZvciBpIGluIGF4ZXMoeCwxKSAgICAgICAgICAgICAgICAgICAgICAgICAgICNsb29wIG92ZXIgcm93cwogICAgIWlzZW1wdHkocm93TmFtZXMpICYmIHByaW50KGlvYixycGFkKHN0cmluZyhwcmVmaXhDMCxyb3dOYW1lc1tpK2kwXSxzdWZmaXhDMCksY29sMFdpZHRoKSkKICAgIGZvciBqIGluIGF4ZXMoeCwyKSAgICAgICAgICAgICAgICAgICAgICAgICAjbG9vcCBvdmVyIGNvbHVtbnMKICAgICAgcHJpbnQoaW9iLGZtdE51bVBzKHhbaSxqXSx3aWR0aCxwcmVjLCJyaWdodCIscHJlZml4PXByZWZpeE5baitqMF0sc3VmZml4PXN1ZmZpeE5baitqMF0pKQogICAgZW5kCiAgICBwcmludChpb2IsIlxuIikKICBlbmQKICBzdHIgPSBTdHJpbmcodGFrZSEoaW9iKSkKCiAgaWYgTm9QcmludGluZyAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICNubyBwcmludGluZywganVzdCByZXR1cm4gc3RyCiAgICByZXR1cm4gc3RyCiAgZWxzZSAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICNwcmludCwgcmV0dXJuIG5vdGhpbmcKICAgIHByaW50KGZoLHN0ciwiXG4iKQogICAgcmV0dXJuIG5vdGhpbmcKICBlbmQKCmVuZAogICAgICAgICAgICAgICAgICAgICAgICAjd2hlbiBmaCBpcyBub3Qgc3VwcGxpZWQ6IHByaW50aW5nIHRvIHNjcmVlbgpwcmludG1hdCh4Li4uO2NvbE5hbWVzPVtdLHJvd05hbWVzPVtdLHdpZHRoPTEwLHByZWM9MyxOb1ByaW50aW5nPWZhbHNlLFN0cmluZ0ZtdD0iIixjZWxsMDA9IiIpID0KICAgIHByaW50bWF0KHN0ZG91dDo6SU8seC4uLjtjb2xOYW1lcyxyb3dOYW1lcyx3aWR0aCxwcmVjLE5vUHJpbnRpbmcsU3RyaW5nRm10LGNlbGwwMCkKIy0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLQoKCiMtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0KIiIiCiAgICBwcmludGxuUHMoW2ZoOjpJT10sei4uLjt3aWR0aD0xMCxwcmVjPTMpCgpTdWJzaXR1dGUgZm9yIHByaW50bG4sIHdpdGggcHJlZGVmaW5lZCBmb3JtYXR0aW5nLgoKCiMgSW5wdXQKLSBgZmg6OklPYDogICAgKG9wdGlvbmFsKSBmaWxlIGhhbmRsZS4gSWYgbm90IHN1cHBsaWVkLCBwcmludHMgdG8gc2NyZWVuCi0gYHo6OlN0cmluZ2A6IHN0cmluZywgbnVtYmVycyBhbmQgYXJyYXlzIHRvIHByaW50CgpQYXVsLlNvZGVybGluZEB1bmlzZy5jaAoKIiIiCmZ1bmN0aW9uIHByaW50bG5QcyhmaDo6SU8sei4uLjt3aWR0aD0xMCxwcmVjPTMpCgogIGZvciB4IGluIHogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAjbG9vcCBvdmVyIGlucHV0cyBpbiB6Li4uCiAgICBpZiBpc2EoeCxBYnN0cmFjdEFycmF5KQogICAgICBpb2IgPSBJT0J1ZmZlcigpCiAgICAgIGZvciBpID0gMTpsZW5ndGgoeCkKICAgICAgICBwcmludChpb2IsZm10TnVtUHMoeFtpXSx3aWR0aCxwcmVjLCJyaWdodCIpKQogICAgICBlbmQKICAgICAgcHJpbnQoZmgsU3RyaW5nKHRha2UhKGlvYikpKQogICAgZWxzZQogICAgICBwcmludChmaCxmbXROdW1Qcyh4LHdpZHRoLHByZWMsInJpZ2h0IikpCiAgICBlbmQKICBlbmQKCiAgcHJpbnQoZmgsIlxuIikKCmVuZAogICAgICAgICAgICAgICAgICAgICAgI3doZW4gZmggaXMgbm90IHN1cHBsaWVkOiBwcmludGluZyB0byBzY3JlZW4KcHJpbnRsblBzKHouLi47d2lkdGg9MTAscHJlYz0zKSA9IHByaW50bG5QcyhzdGRvdXQ6OklPLHouLi47d2lkdGgscHJlYykKIy0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLQoKCiMtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0KIiIiCiAgICBmbXROdW1Qcyh6LHdpZHRoPTEwLHByZWM9MixqdXN0aWZ5PSJyaWdodCI7cHJlZml4PSIiLHN1ZmZpeD0iIikKCkNyZWF0ZSBhIGZvcm1hdHRlZCBzdHJpbmcgb2YgYSBmbG9hdCAoZWcsICIlMTAuNGYiKSwgbm90aGluZyAoIiIpLAp3aGlsZSBvdGhlciB2YWx1ZXMgYXJlIHBhc3NlZCB0aHJvdWdoLiBTdHJpbmdzIGFyZSByaWdodCAob3IgbGVmdCkganVzdGlmaWVkCmFuZCBjYW4gb3B0aW9uYWxseSBiZSBnaXZlbiBwcmVmaXggYW5kIHN1ZmZpeCAoZWcsICIsIikKCiMgTm90aWNlCi0gV2l0aCBwcmVjID4gMCBhbmQgaXNhKHosSW50ZWdlciksIHRoZW4gdGhlIHN0cmluZyBpcyBwYWRkZWQgd2l0aCAxK3ByZWMgc3BhY2VzCnRvIGFsaWduIHdpdGggdGhlIHByaW50aW5nIG9mIGZsb2F0cyB3aXRoIHRoZSBzYW1lIHByZWMuCgojIFJlcXVpcmVzCi0gUHJpbnRmIChmb3IgMS42LSksIGZtdE51bVBzQyAoZm9yIDwgMS42KQoKIiIiCmZ1bmN0aW9uIGZtdE51bVBzKHosd2lkdGg9MTAscHJlYz0yLGp1c3RpZnk9InJpZ2h0IjtwcmVmaXg9IiIsc3VmZml4PSIiKQoKICBpc2EoeixCb29sKSAmJiAoeiA9IGNvbnZlcnQoSW50LHopKSAgICAgICAgICAgICAjQm9vbCAtPiBJbnQKCiAgaWYgaXNhKHosQWJzdHJhY3RGbG9hdCkgICAgICAgICAgICAgICAgICAgICAgICAgI2V4YW1wbGU6IDEwMS4wMjM0LCBwcmVjPTMKICAgIGlmIFZFUlNJT04gPCB2IjEuNi0iCiAgICAgIGZtdCAgICA9ICIlJCh3aWR0aCkuJChwcmVjKWYiCiAgICAgIHpSb3VuZCA9IHJvdW5kKHosZGlnaXRzPXByZWMpCiAgICAgIHN0ckxSICA9IGZtdE51bVBzQyhmbXQselJvdW5kKSAgICAgICAgICAgICAgICAjQyBmYWxsYmFjayBzb2x1dGlvbgogICAgZWxzZQogICAgICBmbXQgICA9IFByaW50Zi5Gb3JtYXQoIiUkKHdpZHRoKS4kKHByZWMpZiIpCiAgICAgIHN0ckxSID0gUHJpbnRmLmZvcm1hdChmbXQseikKICAgIGVuZAogIGVsc2VpZiBpc2EoeixOb3RoaW5nKQogICAgc3RyTFIgPSAiIgogIGVsc2VpZiBpc2EoeixJbnRlZ2VyKSAmJiBwcmVjID4gMCAgICAgICAgICAgICAgICNpbnRlZ2VyIGZvbGxvd2VkIGJ5ICgxK3ByZWMgc3BhY2VzKQogICAgc3RyTFIgPSBzdHJpbmcoeiwiICJeKDErcHJlYykpCiAgZWxzZSAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgI0ludCwgU3RyaW5nLCBEYXRlLCBNaXNzaW5nLCBldGMKICAgIHN0ckxSID0gc3RyaW5nKHopCiAgZW5kCgogIHN0ckxSID0gc3RyaW5nKHByZWZpeCxzdHJMUixzdWZmaXgpCgogIGlmIGp1c3RpZnkgPT0gImxlZnQiICAgICAgICAgICAgICAgICAgICAgICAgICAgICNqdXN0aWZpY2F0aW9uCiAgICBzdHJMUiA9IHJwYWQoc3RyTFIsd2lkdGgrbGVuZ3RoKHByZWZpeCkrbGVuZ3RoKHN1ZmZpeCkpCiAgZWxzZQogICAgc3RyTFIgPSBscGFkKHN0ckxSLHdpZHRoK2xlbmd0aChwcmVmaXgpK2xlbmd0aChzdWZmaXgpKQogIGVuZAoKICByZXR1cm4gc3RyTFIKCmVuZAojLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tCgoKIy0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLQoiIiIKICAgIGZtdE51bVBzQyhmbXQseikKCmMgZmFsbGJhY2sgc29sdXRpb24gZm9yIGZvcm1hdHRpbmcgb2YgZmxvYXRpbmcgcG9pbnQgbnVtYmVyLiBVc2VkIGlmIFZFUlNJT04gPCB2IjEuNi0iCiIiIgpmdW5jdGlvbiBmbXROdW1Qc0MoZm10LHopICAgICAgICAgICAgICAgICAgICAgICAgICAgI2MgZmFsbGJhY2sgc29sdXRpb24KICBpZiBpc21pc3NpbmcoeikgfHwgaXNuYW4oeikgfHwgaXNpbmYoeikgICAgI2FzcHJpbnRmIGRvZXMgbm90IHdvcmsgZm9yIHRoZXNlIGNhc2VzCiAgICBzdHIgPSBzdHJpbmcoeikKICBlbHNlCiAgICBzdHJwID0gUmVme1B0cntDY2hhcn19KDApCiAgICBsZW4gPSBjY2FsbCg6YXNwcmludGYsQ2ludCwoUHRye1B0cntDY2hhcn19LENzdHJpbmcsQ2RvdWJsZS4uLiksc3RycCxmbXQseikKICAgIHN0ciA9IHVuc2FmZV9zdHJpbmcoc3RycFtdLGxlbikKICAgIExpYmMuZnJlZShzdHJwW10pCiAgZW5kCiAgcmV0dXJuIHN0cgplbmQKIy0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLQoKCiMtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0KZnVuY3Rpb24gcHJpbnRibHVlKHguLi4pCiAgZm9yZWFjaCh6LT5wcmludHN0eWxlZCh6LGNvbG9yPTpibHVlLGJvbGQ9dHJ1ZSkseCkKICBwcmludCgiXG4iKQplbmQKZnVuY3Rpb24gcHJpbnRyZWQoeC4uLikKICBmb3JlYWNoKHotPnByaW50c3R5bGVkKHosY29sb3I9OnJlZCxib2xkPXRydWUpLHgpCiAgcHJpbnQoIlxuIikKZW5kCmZ1bmN0aW9uIHByaW50bWFnZW50YSh4Li4uKQogIGZvcmVhY2goei0+cHJpbnRzdHlsZWQoeixjb2xvcj06bWFnZW50YSxib2xkPXRydWUpLHgpCiAgcHJpbnQoIlxuIikKZW5kCmZ1bmN0aW9uIHByaW50eWVsbG93KHguLi4pCiAgZm9yZWFjaCh6LT5wcmludHN0eWxlZCh6LGNvbG9yPTp5ZWxsb3csYm9sZD10cnVlKSx4KQogIHByaW50KCJcbiIpCmVuZAojLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tCgoJCiN1c2luZyBMb2dnaW5nCiNnbG9iYWxfbG9nZ2VyKE51bGxMb2dnZXIoKSkKCQpkaXNwbGF5KCIiKQoJCmVuZKtjb2RlX2ZvbGRlZMPZJDgzYTM5OTNlLTA3M2YtNGU4NC1hY2ZlLTYxYmZjNzZkZGUzYYSnY2VsbF9pZNkkODNhMzk5M2UtMDczZi00ZTg0LWFjZmUtNjFiZmM3NmRkZTNhsHJ1bm5pbmdfZGlzYWJsZWTCpGNvZGXZoEBjaGFpbiBBQVBMIGJlZ2luCglzb3J0KDpkYXRlKQoJZ3JvdXBieSg6VElDS0VSKQoJdHJhbnNmb3JtKDpQUkMgPT4gKHgtPiBsYWcoeCkpID0+IDpQUkNfTCkKCXNlbGVjdCg6ZGF0ZSwgOlRJQ0tFUiwgOlBFUk1DTywgOlBFUk1OTywgOlBSQywgOlBSQ19MLCA6RElWQU1UKQplbmSrY29kZV9mb2xkZWTCq25vdGVib29rX2lk2SQxZmYxNzRlMC05ODMxLTExZWMtMjU1Zi01YjdiMTk3MmI4NDaraW5fdGVtcF9kaXLC";
window.pluto_preamble_html = undefined;
</script>
<!-- [automatically generated launch parameters can be inserted here] -->


    <script src="https://cdn.jsdelivr.net/gh/fonsp/Pluto.jl@0.18.1/frontend/editor.js" type="module" defer></script>
    <script src="https://cdn.jsdelivr.net/gh/fonsp/Pluto.jl@0.18.1/frontend/warn_old_browsers.js"></script>

    <script src="https://cdn.jsdelivr.net/gh/fonsp/Pluto.jl@0.18.1/frontend/common/SetupMathJax.js"></script>
    <script type="text/javascript" id="MathJax-script" src="https://cdn.jsdelivr.net/npm/mathjax@3.1.2/es5/tex-svg-full.js" async></script>
</head>

<body class="loading no-MÎ±Î¸Jax"></body>
</html>
